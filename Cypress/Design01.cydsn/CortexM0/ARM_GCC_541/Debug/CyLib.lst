ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 109 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 110 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 125 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 4


  47              		.cfi_endproc
  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB3:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 141 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 150 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 151:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 151 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 5


  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 289:Generated_Source\PSoC4/CyLib.c ****     }
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** 
 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 401:Generated_Source\PSoC4/CyLib.c ****     }
 402:Generated_Source\PSoC4/CyLib.c **** 
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 406:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/CyLib.c ****     *
 408:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 411:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 414:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 415:Generated_Source\PSoC4/CyLib.c ****     *
 416:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 418:Generated_Source\PSoC4/CyLib.c ****     {
 419:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 420:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 421:Generated_Source\PSoC4/CyLib.c ****             
 422:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 423:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 424:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 427:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 430:Generated_Source\PSoC4/CyLib.c ****             {
 431:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 432:Generated_Source\PSoC4/CyLib.c ****                 {
 433:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 434:Generated_Source\PSoC4/CyLib.c ****                     break;
 435:Generated_Source\PSoC4/CyLib.c ****                 }
 436:Generated_Source\PSoC4/CyLib.c ****             }           
 437:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 438:Generated_Source\PSoC4/CyLib.c ****         
 439:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 442:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 443:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 444:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 445:Generated_Source\PSoC4/CyLib.c **** 
 446:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 449:Generated_Source\PSoC4/CyLib.c ****             }
 450:Generated_Source\PSoC4/CyLib.c ****             
 451:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 452:Generated_Source\PSoC4/CyLib.c ****             
 453:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 454:Generated_Source\PSoC4/CyLib.c ****     }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 459:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c ****     *
 461:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 462:Generated_Source\PSoC4/CyLib.c ****     *
 463:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 464:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 467:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 468:Generated_Source\PSoC4/CyLib.c ****     *
 469:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 470:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 471:Generated_Source\PSoC4/CyLib.c ****     {
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 474:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 475:Generated_Source\PSoC4/CyLib.c ****     }
 476:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 482:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c **** *
 486:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 487:Generated_Source\PSoC4/CyLib.c **** *
 488:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 489:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 490:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 491:Generated_Source\PSoC4/CyLib.c **** *
 492:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 493:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 494:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 495:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 497:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 498:Generated_Source\PSoC4/CyLib.c **** *
 499:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 500:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 501:Generated_Source\PSoC4/CyLib.c **** *
 502:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 505:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 506:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 507:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 509:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 513:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 514:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 514 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 515:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 516:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 517:Generated_Source\PSoC4/CyLib.c ****     
 518:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 519:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 520:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 522 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 525:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 526:Generated_Source\PSoC4/CyLib.c ****     {
 527:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 528:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 12


 529:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 530:Generated_Source\PSoC4/CyLib.c ****         
 531:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 537:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 538:Generated_Source\PSoC4/CyLib.c ****         
 539:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 540:Generated_Source\PSoC4/CyLib.c ****         {
 541:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 543:Generated_Source\PSoC4/CyLib.c ****         }
 544:Generated_Source\PSoC4/CyLib.c ****         
 545:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 546:Generated_Source\PSoC4/CyLib.c ****     }
 547:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 549 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 550:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 551:Generated_Source\PSoC4/CyLib.c **** 
 552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 553:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 554:Generated_Source\PSoC4/CyLib.c ****     {
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 556:Generated_Source\PSoC4/CyLib.c ****     }
 557:Generated_Source\PSoC4/CyLib.c ****     else
 558:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 559:Generated_Source\PSoC4/CyLib.c ****     {
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 560 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 561:Generated_Source\PSoC4/CyLib.c ****     }   
 562:Generated_Source\PSoC4/CyLib.c ****     
 563:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 563 0
 112 0014 1460     		str	r4, [r2]
 564:Generated_Source\PSoC4/CyLib.c ****     
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 565 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 566:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 566 0
 117              		@ sp needed
 118              	.LVL6:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 13


 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 571:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 574:Generated_Source\PSoC4/CyLib.c **** *
 575:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 577:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 578:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 581:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 582:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 586:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 586 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 587:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 588:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 588 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 589:Generated_Source\PSoC4/CyLib.c ****         {
 590:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 590 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 14


 152 0012 0AE0     		b	.L10
 153              	.L11:
 591:Generated_Source\PSoC4/CyLib.c ****         }
 592:Generated_Source\PSoC4/CyLib.c ****         else
 593:Generated_Source\PSoC4/CyLib.c ****         {
 594:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 594 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 595:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 596:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 596 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 597:Generated_Source\PSoC4/CyLib.c ****         }
 598:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 599:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 600:Generated_Source\PSoC4/CyLib.c ****         {
 601:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 602:Generated_Source\PSoC4/CyLib.c ****         }
 603:Generated_Source\PSoC4/CyLib.c ****         else
 604:Generated_Source\PSoC4/CyLib.c ****         {
 605:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 606:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 607:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 608:Generated_Source\PSoC4/CyLib.c ****         }
 609:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 610:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 610 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB6:
 611:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 15


 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 616:Generated_Source\PSoC4/CyLib.c **** *
 617:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 618:Generated_Source\PSoC4/CyLib.c **** *
 619:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 623:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 623 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 624:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 625:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 626:Generated_Source\PSoC4/CyLib.c **** 
 627:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 627 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 630:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 631:Generated_Source\PSoC4/CyLib.c ****     {
 632:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 633:Generated_Source\PSoC4/CyLib.c ****     }
 634:Generated_Source\PSoC4/CyLib.c ****     else
 635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 636:Generated_Source\PSoC4/CyLib.c ****     {
 637:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 637 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 640:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 641:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 642:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 643:Generated_Source\PSoC4/CyLib.c ****         
 644:Generated_Source\PSoC4/CyLib.c ****     }
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 646 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 16


 649:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 649 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 650:Generated_Source\PSoC4/CyLib.c **** 
 651:Generated_Source\PSoC4/CyLib.c **** 
 652:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 653:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 654:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 657:Generated_Source\PSoC4/CyLib.c **** *
 658:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 659:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 660:Generated_Source\PSoC4/CyLib.c **** *
 661:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 662:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 663:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 666:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 667:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 668:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 669:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 670:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 671:Generated_Source\PSoC4/CyLib.c **** *
 672:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 673:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 674:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 675:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 676:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 677:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 678:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 679:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 680:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 683:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 684:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 684 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 17


 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 685:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 686:Generated_Source\PSoC4/CyLib.c **** 
 687:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 687 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 689 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 691:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 691 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 690 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 689:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 689 0
 257 001e 2360     		str	r3, [r4]
 692:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 694 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 695:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 695 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkEcoStop,"ax",%progbits
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 18


 273              		.align	2
 274              		.global	CySysClkEcoStop
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysClkEcoStop, %function
 278              	CySysClkEcoStop:
 279              	.LFB10:
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 701:Generated_Source\PSoC4/CyLib.c **** *
 702:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 703:Generated_Source\PSoC4/CyLib.c **** *
 704:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 705:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 708:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 709:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 712:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 713:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 714:Generated_Source\PSoC4/CyLib.c **** *
 715:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 716:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 717:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 718:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 721:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 722:Generated_Source\PSoC4/CyLib.c **** *
 723:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 724:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 725:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 726:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 727:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 728:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 731:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 732:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 735:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 736:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 737:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 741:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 742:Generated_Source\PSoC4/CyLib.c ****     {
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 744:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 745:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c ****         #else
 747:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 748:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 749:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 750:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 751:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 754:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 755:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 756:Generated_Source\PSoC4/CyLib.c **** 
 757:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 758:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 759:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 760:Generated_Source\PSoC4/CyLib.c **** 
 761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c **** 
 764:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 767:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 768:Generated_Source\PSoC4/CyLib.c ****             {
 769:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 770:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 771:Generated_Source\PSoC4/CyLib.c ****             }
 772:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 776:Generated_Source\PSoC4/CyLib.c **** 
 777:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 778:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 779:Generated_Source\PSoC4/CyLib.c ****                 {
 780:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 781:Generated_Source\PSoC4/CyLib.c **** 
 782:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 783:Generated_Source\PSoC4/CyLib.c ****                 {
 784:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 785:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 786:Generated_Source\PSoC4/CyLib.c ****                 }
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 789:Generated_Source\PSoC4/CyLib.c ****                 }
 790:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c **** 
 795:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 798:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 799:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 800:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 801:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 802:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 804:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 805:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 806:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 809:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 810:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 815:Generated_Source\PSoC4/CyLib.c ****         {
 816:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 819:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 822:Generated_Source\PSoC4/CyLib.c ****             {
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 824:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             }
 826:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 827:Generated_Source\PSoC4/CyLib.c ****             {
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 829:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 830:Generated_Source\PSoC4/CyLib.c ****             }
 831:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 832:Generated_Source\PSoC4/CyLib.c ****             {
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 834:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 835:Generated_Source\PSoC4/CyLib.c ****             }
 836:Generated_Source\PSoC4/CyLib.c ****             else
 837:Generated_Source\PSoC4/CyLib.c ****             {
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 839:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 840:Generated_Source\PSoC4/CyLib.c ****             }
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 843:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c **** 
 846:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 847:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 848:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 849:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 850:Generated_Source\PSoC4/CyLib.c ****             *
 851:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 852:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 853:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 854:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 855:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 856:Generated_Source\PSoC4/CyLib.c ****             {
 857:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 858:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 859:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 864:Generated_Source\PSoC4/CyLib.c ****             }
 865:Generated_Source\PSoC4/CyLib.c ****             else
 866:Generated_Source\PSoC4/CyLib.c ****             {
 867:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 868:Generated_Source\PSoC4/CyLib.c ****             }
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 872:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 873:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 874:Generated_Source\PSoC4/CyLib.c ****             *
 875:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 876:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 877:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 878:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 879:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 880:Generated_Source\PSoC4/CyLib.c ****             {
 881:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 882:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 883:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 884:Generated_Source\PSoC4/CyLib.c ****             }
 885:Generated_Source\PSoC4/CyLib.c **** 
 886:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 887:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 889:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 890:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 891:Generated_Source\PSoC4/CyLib.c **** 
 892:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 895:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 896:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 897:Generated_Source\PSoC4/CyLib.c ****             }
 898:Generated_Source\PSoC4/CyLib.c ****         }
 899:Generated_Source\PSoC4/CyLib.c ****         else
 900:Generated_Source\PSoC4/CyLib.c ****         {
 901:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 902:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 903:Generated_Source\PSoC4/CyLib.c ****         }
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 908:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 909:Generated_Source\PSoC4/CyLib.c ****             {
 910:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 915:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 916:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 918:Generated_Source\PSoC4/CyLib.c ****             }
 919:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 922:Generated_Source\PSoC4/CyLib.c ****     }
 923:Generated_Source\PSoC4/CyLib.c **** 
 924:Generated_Source\PSoC4/CyLib.c **** #else
 925:Generated_Source\PSoC4/CyLib.c **** 
 926:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 927:Generated_Source\PSoC4/CyLib.c ****     {
 928:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 929:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 932:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 933:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 937:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 940:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 941:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 942:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 943:Generated_Source\PSoC4/CyLib.c ****         #else
 944:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 945:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 946:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 947:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 948:Generated_Source\PSoC4/CyLib.c ****         {
 949:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 952:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 953:Generated_Source\PSoC4/CyLib.c ****                 {
 954:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 955:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 956:Generated_Source\PSoC4/CyLib.c ****                 }
 957:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 960:Generated_Source\PSoC4/CyLib.c **** 
 961:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 962:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 963:Generated_Source\PSoC4/CyLib.c ****                     {
 964:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 967:Generated_Source\PSoC4/CyLib.c ****                     {
 968:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 969:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 970:Generated_Source\PSoC4/CyLib.c ****                     }
 971:Generated_Source\PSoC4/CyLib.c **** 
 972:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 973:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 975:Generated_Source\PSoC4/CyLib.c **** 
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 984:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 985:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 988:Generated_Source\PSoC4/CyLib.c ****                 }
 989:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 990:Generated_Source\PSoC4/CyLib.c ****                 {
 991:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 992:Generated_Source\PSoC4/CyLib.c ****                 }
 993:Generated_Source\PSoC4/CyLib.c ****                 else
 994:Generated_Source\PSoC4/CyLib.c ****                 {
 995:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 996:Generated_Source\PSoC4/CyLib.c ****                 }
 997:Generated_Source\PSoC4/CyLib.c ****             #else
 998:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 999:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1000:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1003:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1007:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1012:Generated_Source\PSoC4/CyLib.c ****             {
1013:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1014:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1015:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1018:Generated_Source\PSoC4/CyLib.c **** 
1019:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1020:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1021:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1022:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1023:Generated_Source\PSoC4/CyLib.c ****             }
1024:Generated_Source\PSoC4/CyLib.c **** 
1025:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1026:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1027:Generated_Source\PSoC4/CyLib.c ****                 {
1028:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1029:Generated_Source\PSoC4/CyLib.c ****                 }
1030:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****         
1032:Generated_Source\PSoC4/CyLib.c ****         
1033:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1034:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1035:Generated_Source\PSoC4/CyLib.c ****                 {
1036:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1037:Generated_Source\PSoC4/CyLib.c ****                 }
1038:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1039:Generated_Source\PSoC4/CyLib.c **** 
1040:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1041:Generated_Source\PSoC4/CyLib.c ****         }
1042:Generated_Source\PSoC4/CyLib.c ****         else
1043:Generated_Source\PSoC4/CyLib.c ****         {
1044:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1045:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1046:Generated_Source\PSoC4/CyLib.c ****         }
1047:Generated_Source\PSoC4/CyLib.c ****     }
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1053:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1055:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1056:Generated_Source\PSoC4/CyLib.c ****     *
1057:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1058:Generated_Source\PSoC4/CyLib.c ****     *
1059:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1060:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1061:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1062:Generated_Source\PSoC4/CyLib.c ****     *
1063:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1064:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1067:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1068:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1069:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1070:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1071:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1072:Generated_Source\PSoC4/CyLib.c ****     *
1073:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1074:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1075:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1076:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1077:Generated_Source\PSoC4/CyLib.c ****     *
1078:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1080:Generated_Source\PSoC4/CyLib.c ****     {
1081:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1082:Generated_Source\PSoC4/CyLib.c **** 
1083:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1086:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1087:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c **** 
1089:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1090:Generated_Source\PSoC4/CyLib.c ****     }
1091:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1095:Generated_Source\PSoC4/CyLib.c **** 
1096:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1097:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1098:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1101:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1102:Generated_Source\PSoC4/CyLib.c ****     *
1103:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1104:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1105:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1106:Generated_Source\PSoC4/CyLib.c ****     * called.
1107:Generated_Source\PSoC4/CyLib.c ****     *
1108:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1109:Generated_Source\PSoC4/CyLib.c ****     *
1110:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1113:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1114:Generated_Source\PSoC4/CyLib.c ****     *
1115:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1116:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1117:Generated_Source\PSoC4/CyLib.c ****     *
1118:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1119:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1120:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1121:Generated_Source\PSoC4/CyLib.c ****     *
1122:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1125:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1126:Generated_Source\PSoC4/CyLib.c ****     {
1127:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1128:Generated_Source\PSoC4/CyLib.c **** 
1129:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1130:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1132:Generated_Source\PSoC4/CyLib.c **** 
1133:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1135:Generated_Source\PSoC4/CyLib.c **** 
1136:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1137:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1138:Generated_Source\PSoC4/CyLib.c ****         
1139:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1140:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1141:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1142:Generated_Source\PSoC4/CyLib.c ****             
1143:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1144:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1146:Generated_Source\PSoC4/CyLib.c ****             }
1147:Generated_Source\PSoC4/CyLib.c ****             else
1148:Generated_Source\PSoC4/CyLib.c ****             {
1149:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1150:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1151:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1152:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1153:Generated_Source\PSoC4/CyLib.c ****             
1154:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1155:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1156:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1157:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1158:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1159:Generated_Source\PSoC4/CyLib.c ****                 
1160:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1161:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1162:Generated_Source\PSoC4/CyLib.c ****                 {
1163:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1164:Generated_Source\PSoC4/CyLib.c ****                 }
1165:Generated_Source\PSoC4/CyLib.c ****                 
1166:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1167:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1168:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1169:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1170:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1173:Generated_Source\PSoC4/CyLib.c ****                 {
1174:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1175:Generated_Source\PSoC4/CyLib.c ****                 }
1176:Generated_Source\PSoC4/CyLib.c **** 
1177:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1178:Generated_Source\PSoC4/CyLib.c ****                 {
1179:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1180:Generated_Source\PSoC4/CyLib.c ****                 }
1181:Generated_Source\PSoC4/CyLib.c ****                 
1182:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1183:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1189:Generated_Source\PSoC4/CyLib.c ****                 #else
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1191:Generated_Source\PSoC4/CyLib.c ****                 #endif
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1195:Generated_Source\PSoC4/CyLib.c ****                 {
1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1197:Generated_Source\PSoC4/CyLib.c ****                 }
1198:Generated_Source\PSoC4/CyLib.c ****                 
1199:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1200:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1201:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****                                             
1203:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c **** 
1208:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1209:Generated_Source\PSoC4/CyLib.c ****                 
1210:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1213:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1214:Generated_Source\PSoC4/CyLib.c ****                 
1215:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1216:Generated_Source\PSoC4/CyLib.c ****                 {
1217:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1218:Generated_Source\PSoC4/CyLib.c ****                 }
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1222:Generated_Source\PSoC4/CyLib.c ****                 
1223:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1224:Generated_Source\PSoC4/CyLib.c ****                 {
1225:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1226:Generated_Source\PSoC4/CyLib.c ****                 }
1227:Generated_Source\PSoC4/CyLib.c ****                 
1228:Generated_Source\PSoC4/CyLib.c ****             }
1229:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1230:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1231:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1232:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1233:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1236:Generated_Source\PSoC4/CyLib.c ****         {
1237:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1240:Generated_Source\PSoC4/CyLib.c ****             {
1241:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1242:Generated_Source\PSoC4/CyLib.c **** 
1243:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1244:Generated_Source\PSoC4/CyLib.c ****                 {
1245:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1246:Generated_Source\PSoC4/CyLib.c ****                     break;
1247:Generated_Source\PSoC4/CyLib.c ****                 }
1248:Generated_Source\PSoC4/CyLib.c ****             }
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****         }
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1253:Generated_Source\PSoC4/CyLib.c ****     }
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c **** 
1256:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1257:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1258:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****     *
1260:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1261:Generated_Source\PSoC4/CyLib.c ****     *
1262:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1263:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1264:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1267:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1268:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 1268 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
1269:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1270:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1271:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 285              		.loc 1 1271 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0121     		movs	r1, #1
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1274:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 291              		.loc 1 1274 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1168     		ldr	r1, [r2]
 294 000e 044B     		ldr	r3, .L22+8
 295 0010 0B40     		ands	r3, r1
 296 0012 1360     		str	r3, [r2]
1275:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1277:Generated_Source\PSoC4/CyLib.c ****         #else
1278:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1279:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1280:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 1280 0
 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 60F02E40 		.word	1076818016
 304 001c 10002E40 		.word	1076756496
 305 0020 FF7FFFFF 		.word	-32769
 306              		.cfi_endproc
 307              	.LFE10:
 308              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 309              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 310              		.align	2
 311              		.global	CySysClkEcoReadStatus
 312              		.code	16
 313              		.thumb_func
 314              		.type	CySysClkEcoReadStatus, %function
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 29


 315              	CySysClkEcoReadStatus:
 316              	.LFB11:
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c **** 
1283:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1284:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1285:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1286:Generated_Source\PSoC4/CyLib.c ****     *
1287:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1288:Generated_Source\PSoC4/CyLib.c ****     *
1289:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1290:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1293:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1294:Generated_Source\PSoC4/CyLib.c ****     *
1295:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1296:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1299:Generated_Source\PSoC4/CyLib.c ****     *
1300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1302:Generated_Source\PSoC4/CyLib.c ****     {
 317              		.loc 1 1302 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
1303:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1304:Generated_Source\PSoC4/CyLib.c **** 
1305:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1306:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 322              		.loc 1 1306 0
 323 0000 024B     		ldr	r3, .L25
 324 0002 1B68     		ldr	r3, [r3]
 325 0004 0120     		movs	r0, #1
 326 0006 1840     		ands	r0, r3
 327              	.LVL16:
1307:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1308:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1309:Generated_Source\PSoC4/CyLib.c **** 
1310:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1311:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1312:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1313:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1314:Generated_Source\PSoC4/CyLib.c ****         #else
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1316:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1319:Generated_Source\PSoC4/CyLib.c ****     }
 328              		.loc 1 1319 0
 329              		@ sp needed
 330 0008 7047     		bx	lr
 331              	.L26:
 332 000a C046     		.align	2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 30


 333              	.L25:
 334 000c 0C002E40 		.word	1076756492
 335              		.cfi_endproc
 336              	.LFE11:
 337              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 338              		.section	.text.CySysLvdDisable,"ax",%progbits
 339              		.align	2
 340              		.global	CySysLvdDisable
 341              		.code	16
 342              		.thumb_func
 343              		.type	CySysLvdDisable, %function
 344              	CySysLvdDisable:
 345              	.LFB14:
1320:Generated_Source\PSoC4/CyLib.c **** 
1321:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1322:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1323:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1324:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLib.c ****         *
1326:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1327:Generated_Source\PSoC4/CyLib.c ****         *
1328:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1329:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1330:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1331:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1332:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1333:Generated_Source\PSoC4/CyLib.c ****         *
1334:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1335:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1336:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1337:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1338:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1340:Generated_Source\PSoC4/CyLib.c ****         *
1341:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1342:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1343:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1344:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1345:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1346:Generated_Source\PSoC4/CyLib.c ****         *
1347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1349:Generated_Source\PSoC4/CyLib.c ****         {
1350:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1353:Generated_Source\PSoC4/CyLib.c ****             {
1354:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1357:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1360:Generated_Source\PSoC4/CyLib.c ****             }
1361:Generated_Source\PSoC4/CyLib.c ****             else
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 31


1364:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1365:Generated_Source\PSoC4/CyLib.c ****             }
1366:Generated_Source\PSoC4/CyLib.c ****         }
1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****     #else
1369:Generated_Source\PSoC4/CyLib.c **** 
1370:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1371:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1372:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1375:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1376:Generated_Source\PSoC4/CyLib.c ****         *
1377:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1378:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1381:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1384:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1385:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1386:Generated_Source\PSoC4/CyLib.c ****         *
1387:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1388:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1389:Generated_Source\PSoC4/CyLib.c ****         *
1390:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1391:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1392:Generated_Source\PSoC4/CyLib.c ****         *
1393:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1394:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1397:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1403:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1406:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1407:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1413:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1414:Generated_Source\PSoC4/CyLib.c ****         *
1415:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1420:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 32


1421:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1428:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1429:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1430:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1437:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1438:Generated_Source\PSoC4/CyLib.c ****         {
1439:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1440:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1441:Generated_Source\PSoC4/CyLib.c **** 
1442:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1445:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1446:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1447:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1450:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1451:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1452:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1455:Generated_Source\PSoC4/CyLib.c **** 
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1459:Generated_Source\PSoC4/CyLib.c ****         }
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c **** 
1462:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1463:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1464:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1465:Generated_Source\PSoC4/CyLib.c ****         *
1466:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1467:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1468:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1471:Generated_Source\PSoC4/CyLib.c ****         *
1472:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1473:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1474:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1475:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1476:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1477:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 33


1478:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1479:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1480:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1481:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1482:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1483:Generated_Source\PSoC4/CyLib.c ****         *
1484:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1485:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1486:Generated_Source\PSoC4/CyLib.c ****         *
1487:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1488:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1489:Generated_Source\PSoC4/CyLib.c ****         {
1490:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1493:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1494:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1495:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1496:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1497:Generated_Source\PSoC4/CyLib.c **** 
1498:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1502:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1503:Generated_Source\PSoC4/CyLib.c ****             {
1504:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1505:Generated_Source\PSoC4/CyLib.c ****             }
1506:Generated_Source\PSoC4/CyLib.c ****             else
1507:Generated_Source\PSoC4/CyLib.c ****             {
1508:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1509:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1512:Generated_Source\PSoC4/CyLib.c ****                 {
1513:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1514:Generated_Source\PSoC4/CyLib.c ****                 }
1515:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1516:Generated_Source\PSoC4/CyLib.c ****                 {
1517:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1518:Generated_Source\PSoC4/CyLib.c ****                 }
1519:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1520:Generated_Source\PSoC4/CyLib.c ****                 {
1521:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1522:Generated_Source\PSoC4/CyLib.c ****                 }
1523:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1524:Generated_Source\PSoC4/CyLib.c ****                 {
1525:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1526:Generated_Source\PSoC4/CyLib.c ****                 }
1527:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1528:Generated_Source\PSoC4/CyLib.c ****                 {
1529:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1534:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 34


1535:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c ****                 else
1540:Generated_Source\PSoC4/CyLib.c ****                 {
1541:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1542:Generated_Source\PSoC4/CyLib.c ****                 }
1543:Generated_Source\PSoC4/CyLib.c **** 
1544:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1545:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1548:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1549:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1552:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1553:Generated_Source\PSoC4/CyLib.c ****                 }
1554:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1555:Generated_Source\PSoC4/CyLib.c ****                 {
1556:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1557:Generated_Source\PSoC4/CyLib.c ****                 }
1558:Generated_Source\PSoC4/CyLib.c ****                 else
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1561:Generated_Source\PSoC4/CyLib.c ****                 }
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1567:Generated_Source\PSoC4/CyLib.c ****                 }
1568:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1569:Generated_Source\PSoC4/CyLib.c ****                 {
1570:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1571:Generated_Source\PSoC4/CyLib.c ****                 }
1572:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1573:Generated_Source\PSoC4/CyLib.c ****                 {
1574:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****                 else
1577:Generated_Source\PSoC4/CyLib.c ****                 {
1578:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1582:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1583:Generated_Source\PSoC4/CyLib.c **** 
1584:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1587:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1588:Generated_Source\PSoC4/CyLib.c ****                 {
1589:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1590:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1591:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 35


1592:Generated_Source\PSoC4/CyLib.c ****                 else
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1595:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1596:Generated_Source\PSoC4/CyLib.c ****                     */
1597:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1598:Generated_Source\PSoC4/CyLib.c ****                 }
1599:Generated_Source\PSoC4/CyLib.c ****             }
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****         }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1605:Generated_Source\PSoC4/CyLib.c **** 
1606:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1607:Generated_Source\PSoC4/CyLib.c **** 
1608:Generated_Source\PSoC4/CyLib.c **** 
1609:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1610:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1611:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1612:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1613:Generated_Source\PSoC4/CyLib.c ****     *
1614:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1615:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1618:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1619:Generated_Source\PSoC4/CyLib.c ****     *
1620:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1623:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1624:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1625:Generated_Source\PSoC4/CyLib.c ****     *
1626:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1627:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1628:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1629:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1632:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1633:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1634:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1635:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1636:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1639:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1640:Generated_Source\PSoC4/CyLib.c ****     {
1641:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1642:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1643:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1644:Generated_Source\PSoC4/CyLib.c **** 
1645:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1646:Generated_Source\PSoC4/CyLib.c ****         {
1647:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1648:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 36


1649:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1650:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1651:Generated_Source\PSoC4/CyLib.c **** 
1652:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1653:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1654:Generated_Source\PSoC4/CyLib.c **** 
1655:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1658:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1659:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1660:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1661:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1662:Generated_Source\PSoC4/CyLib.c **** 
1663:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1664:Generated_Source\PSoC4/CyLib.c ****             {
1665:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1668:Generated_Source\PSoC4/CyLib.c ****                 {
1669:Generated_Source\PSoC4/CyLib.c **** 
1670:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1671:Generated_Source\PSoC4/CyLib.c ****                     {
1672:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1673:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1674:Generated_Source\PSoC4/CyLib.c ****                         break;
1675:Generated_Source\PSoC4/CyLib.c ****                     }
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1678:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c ****         }
1682:Generated_Source\PSoC4/CyLib.c ****         else
1683:Generated_Source\PSoC4/CyLib.c ****         {
1684:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1685:Generated_Source\PSoC4/CyLib.c ****         }
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1688:Generated_Source\PSoC4/CyLib.c ****     }
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** 
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1696:Generated_Source\PSoC4/CyLib.c ****     *
1697:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1700:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1701:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 37


1706:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1707:Generated_Source\PSoC4/CyLib.c ****     {
1708:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1709:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1710:Generated_Source\PSoC4/CyLib.c **** 
1711:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CyLib.c **** 
1715:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1716:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1717:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1718:Generated_Source\PSoC4/CyLib.c ****         {
1719:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1720:Generated_Source\PSoC4/CyLib.c ****         }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1725:Generated_Source\PSoC4/CyLib.c ****     }
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1734:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1737:Generated_Source\PSoC4/CyLib.c ****     *
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1739:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1740:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1743:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1744:Generated_Source\PSoC4/CyLib.c ****     {
1745:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1748:Generated_Source\PSoC4/CyLib.c ****         {
1749:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1750:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1751:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c ****     }
1754:Generated_Source\PSoC4/CyLib.c **** 
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1757:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1758:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1761:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1762:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 38


1763:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1766:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1775:Generated_Source\PSoC4/CyLib.c ****     * divider.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1780:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1781:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1784:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1785:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1788:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1789:Generated_Source\PSoC4/CyLib.c ****     {
1790:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1791:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1792:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1793:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1794:Generated_Source\PSoC4/CyLib.c **** 
1795:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1798:Generated_Source\PSoC4/CyLib.c **** 
1799:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1800:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1801:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1802:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1803:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1804:Generated_Source\PSoC4/CyLib.c ****         {
1805:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1806:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1807:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1808:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1809:Generated_Source\PSoC4/CyLib.c **** 
1810:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1811:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1812:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1815:Generated_Source\PSoC4/CyLib.c **** 
1816:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1817:Generated_Source\PSoC4/CyLib.c ****         }
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 39


1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1822:Generated_Source\PSoC4/CyLib.c ****     }
1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1826:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1827:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1828:Generated_Source\PSoC4/CyLib.c ****     *
1829:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1830:Generated_Source\PSoC4/CyLib.c ****     *
1831:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1832:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1833:Generated_Source\PSoC4/CyLib.c ****     *
1834:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1835:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1836:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1837:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1838:Generated_Source\PSoC4/CyLib.c ****     *
1839:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1842:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1843:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1844:Generated_Source\PSoC4/CyLib.c ****     *
1845:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1846:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1847:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1848:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1851:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1856:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1857:Generated_Source\PSoC4/CyLib.c ****     {
1858:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1859:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1860:Generated_Source\PSoC4/CyLib.c **** 
1861:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1864:Generated_Source\PSoC4/CyLib.c ****         {
1865:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1866:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1867:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         }
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1871:Generated_Source\PSoC4/CyLib.c ****     }
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1876:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 40


1877:Generated_Source\PSoC4/CyLib.c ****     *
1878:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1879:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1882:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1883:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1886:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1889:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1890:Generated_Source\PSoC4/CyLib.c ****     {
1891:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1892:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1893:Generated_Source\PSoC4/CyLib.c **** 
1894:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1897:Generated_Source\PSoC4/CyLib.c **** 
1898:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1899:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1900:Generated_Source\PSoC4/CyLib.c **** 
1901:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1904:Generated_Source\PSoC4/CyLib.c ****     }
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1909:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1912:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1917:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1918:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1921:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1924:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1925:Generated_Source\PSoC4/CyLib.c ****     {
1926:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1927:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1928:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1931:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 41


1934:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1936:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1937:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1938:Generated_Source\PSoC4/CyLib.c ****             )
1939:Generated_Source\PSoC4/CyLib.c ****         {
1940:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1941:Generated_Source\PSoC4/CyLib.c ****         }
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1944:Generated_Source\PSoC4/CyLib.c ****     }
1945:Generated_Source\PSoC4/CyLib.c **** 
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1949:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1952:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1953:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1954:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1955:Generated_Source\PSoC4/CyLib.c ****     *
1956:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1957:Generated_Source\PSoC4/CyLib.c ****     *
1958:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1959:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1960:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1963:Generated_Source\PSoC4/CyLib.c ****     *
1964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1966:Generated_Source\PSoC4/CyLib.c ****     {
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1968:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1969:Generated_Source\PSoC4/CyLib.c **** 
1970:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1973:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1976:Generated_Source\PSoC4/CyLib.c **** 
1977:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1978:Generated_Source\PSoC4/CyLib.c ****     }
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1982:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1983:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1986:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1987:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1988:Generated_Source\PSoC4/CyLib.c ****     *
1989:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1990:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 42


1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1993:Generated_Source\PSoC4/CyLib.c ****     *
1994:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1995:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1996:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2001:Generated_Source\PSoC4/CyLib.c ****     *
2002:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2003:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2004:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2005:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2006:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2007:Generated_Source\PSoC4/CyLib.c ****     *
2008:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2011:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2014:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2020:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2023:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2026:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2029:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2032:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2038:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2039:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2040:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2041:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2042:Generated_Source\PSoC4/CyLib.c ****         {
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2045:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2046:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2047:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 43


2048:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2049:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2050:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2053:Generated_Source\PSoC4/CyLib.c ****             {
2054:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2059:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2062:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2063:Generated_Source\PSoC4/CyLib.c **** 
2064:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2065:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2068:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2069:Generated_Source\PSoC4/CyLib.c ****                     {
2070:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2071:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2072:Generated_Source\PSoC4/CyLib.c ****                         break;
2073:Generated_Source\PSoC4/CyLib.c ****                     }
2074:Generated_Source\PSoC4/CyLib.c ****                 }
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2078:Generated_Source\PSoC4/CyLib.c ****                 {
2079:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2080:Generated_Source\PSoC4/CyLib.c ****                     {
2081:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2082:Generated_Source\PSoC4/CyLib.c ****                     }
2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c ****             }
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****         }
2087:Generated_Source\PSoC4/CyLib.c **** 
2088:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2089:Generated_Source\PSoC4/CyLib.c ****     }
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2096:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2099:Generated_Source\PSoC4/CyLib.c ****     *
2100:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2101:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2102:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     * \param source:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 44


2105:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2106:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2107:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2108:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2109:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2110:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2111:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
2113:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2114:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2115:Generated_Source\PSoC4/CyLib.c ****     {
2116:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2117:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2118:Generated_Source\PSoC4/CyLib.c ****         
2119:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2120:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2121:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2126:Generated_Source\PSoC4/CyLib.c ****         {
2127:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2128:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2129:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2130:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2131:Generated_Source\PSoC4/CyLib.c ****             #else
2132:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2133:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2134:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2135:Generated_Source\PSoC4/CyLib.c ****                 
2136:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2137:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2138:Generated_Source\PSoC4/CyLib.c ****                 
2139:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2140:Generated_Source\PSoC4/CyLib.c ****                 {
2141:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2142:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2143:Generated_Source\PSoC4/CyLib.c ****                 }
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2148:Generated_Source\PSoC4/CyLib.c ****         }
2149:Generated_Source\PSoC4/CyLib.c **** 
2150:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2151:Generated_Source\PSoC4/CyLib.c ****     }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****     
2154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2157:Generated_Source\PSoC4/CyLib.c ****     *
2158:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2159:Generated_Source\PSoC4/CyLib.c ****     *
2160:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2161:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 45


2162:Generated_Source\PSoC4/CyLib.c ****     *
2163:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2166:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2167:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2170:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2171:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2172:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2173:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2176:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2177:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2178:Generated_Source\PSoC4/CyLib.c ****     *
2179:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2180:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2181:Generated_Source\PSoC4/CyLib.c ****     {
2182:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2183:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2184:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2185:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2191:Generated_Source\PSoC4/CyLib.c **** 
2192:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2193:Generated_Source\PSoC4/CyLib.c ****         {
2194:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2195:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2200:Generated_Source\PSoC4/CyLib.c ****         }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2205:Generated_Source\PSoC4/CyLib.c ****     }
2206:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** 
2209:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2212:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2213:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2214:Generated_Source\PSoC4/CyLib.c ****     *
2215:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2216:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2217:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2218:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 46


2219:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2220:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2221:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2222:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2223:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2224:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2225:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2226:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2227:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2228:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2229:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2230:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *
2239:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2241:Generated_Source\PSoC4/CyLib.c ****     {
2242:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2243:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2246:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2247:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2248:Generated_Source\PSoC4/CyLib.c **** 
2249:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2250:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2251:Generated_Source\PSoC4/CyLib.c **** 
2252:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2253:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2256:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2260:Generated_Source\PSoC4/CyLib.c ****     }
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2266:Generated_Source\PSoC4/CyLib.c ****     *
2267:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2268:Generated_Source\PSoC4/CyLib.c ****     *
2269:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2270:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2271:Generated_Source\PSoC4/CyLib.c ****     {
 346              		.loc 1 2271 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 47


 350              		@ link register save eliminated.
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 351              		.loc 1 2272 0
 352 0000 054A     		ldr	r2, .L28
 353 0002 1368     		ldr	r3, [r2]
 354 0004 0221     		movs	r1, #2
 355 0006 8B43     		bics	r3, r1
 356 0008 1360     		str	r3, [r2]
2273:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 357              		.loc 1 2273 0
 358 000a 044A     		ldr	r2, .L28+4
 359 000c 1368     		ldr	r3, [r2]
 360 000e 0139     		subs	r1, r1, #1
 361 0010 8B43     		bics	r3, r1
 362 0012 1360     		str	r3, [r2]
2274:Generated_Source\PSoC4/CyLib.c ****     }
 363              		.loc 1 2274 0
 364              		@ sp needed
 365 0014 7047     		bx	lr
 366              	.L29:
 367 0016 C046     		.align	2
 368              	.L28:
 369 0018 08000B40 		.word	1074462728
 370 001c 18000B40 		.word	1074462744
 371              		.cfi_endproc
 372              	.LFE14:
 373              		.size	CySysLvdDisable, .-CySysLvdDisable
 374              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 375              		.align	2
 376              		.global	CySysLvdGetInterruptSource
 377              		.code	16
 378              		.thumb_func
 379              		.type	CySysLvdGetInterruptSource, %function
 380              	CySysLvdGetInterruptSource:
 381              	.LFB15:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2279:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2280:Generated_Source\PSoC4/CyLib.c ****     *
2281:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2282:Generated_Source\PSoC4/CyLib.c ****     *
2283:Generated_Source\PSoC4/CyLib.c ****     * \return
2284:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2285:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2286:Generated_Source\PSoC4/CyLib.c ****     *
2287:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2289:Generated_Source\PSoC4/CyLib.c ****     {
 382              		.loc 1 2289 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
2290:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 387              		.loc 1 2290 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 48


 388 0000 024B     		ldr	r3, .L31
 389 0002 1B68     		ldr	r3, [r3]
 390 0004 0220     		movs	r0, #2
 391 0006 1840     		ands	r0, r3
2291:Generated_Source\PSoC4/CyLib.c ****     }
 392              		.loc 1 2291 0
 393              		@ sp needed
 394 0008 7047     		bx	lr
 395              	.L32:
 396 000a C046     		.align	2
 397              	.L31:
 398 000c 04000B40 		.word	1074462724
 399              		.cfi_endproc
 400              	.LFE15:
 401              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 402              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 403              		.align	2
 404              		.global	CySysLvdClearInterrupt
 405              		.code	16
 406              		.thumb_func
 407              		.type	CySysLvdClearInterrupt, %function
 408              	CySysLvdClearInterrupt:
 409              	.LFB16:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2296:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c ****     *
2298:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2299:Generated_Source\PSoC4/CyLib.c ****     *
2300:Generated_Source\PSoC4/CyLib.c ****     * \return
2301:Generated_Source\PSoC4/CyLib.c ****     *  None
2302:Generated_Source\PSoC4/CyLib.c ****     *
2303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2305:Generated_Source\PSoC4/CyLib.c ****     {
 410              		.loc 1 2305 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
2306:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 415              		.loc 1 2306 0
 416 0000 0222     		movs	r2, #2
 417 0002 014B     		ldr	r3, .L34
 418 0004 1A60     		str	r2, [r3]
2307:Generated_Source\PSoC4/CyLib.c ****     }
 419              		.loc 1 2307 0
 420              		@ sp needed
 421 0006 7047     		bx	lr
 422              	.L35:
 423              		.align	2
 424              	.L34:
 425 0008 04000B40 		.word	1074462724
 426              		.cfi_endproc
 427              	.LFE16:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 49


 428              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 429              		.section	.text.CySysGetResetReason,"ax",%progbits
 430              		.align	2
 431              		.global	CySysGetResetReason
 432              		.code	16
 433              		.thumb_func
 434              		.type	CySysGetResetReason, %function
 435              	CySysGetResetReason:
 436              	.LFB17:
2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2310:Generated_Source\PSoC4/CyLib.c **** 
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2313:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2314:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2317:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2318:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2319:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2322:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2323:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2324:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2325:Generated_Source\PSoC4/CyLib.c **** *
2326:Generated_Source\PSoC4/CyLib.c **** * \return
2327:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2331:Generated_Source\PSoC4/CyLib.c **** {
 437              		.loc 1 2331 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL17:
 443 0000 0200     		movs	r2, r0
2332:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2333:Generated_Source\PSoC4/CyLib.c **** 
2334:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 444              		.loc 1 2334 0
 445 0002 1920     		movs	r0, #25
 446              	.LVL18:
 447 0004 0240     		ands	r2, r0
 448              	.LVL19:
2335:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 449              		.loc 1 2335 0
 450 0006 0249     		ldr	r1, .L37
 451 0008 0B68     		ldr	r3, [r1]
 452 000a 1840     		ands	r0, r3
 453              	.LVL20:
2336:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2337:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 454              		.loc 1 2337 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 50


 455 000c 0A60     		str	r2, [r1]
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2340:Generated_Source\PSoC4/CyLib.c **** }
 456              		.loc 1 2340 0
 457              		@ sp needed
 458 000e 7047     		bx	lr
 459              	.L38:
 460              		.align	2
 461              	.L37:
 462 0010 00030B40 		.word	1074463488
 463              		.cfi_endproc
 464              	.LFE17:
 465              		.size	CySysGetResetReason, .-CySysGetResetReason
 466              		.section	.text.CyDisableInts,"ax",%progbits
 467              		.align	2
 468              		.global	CyDisableInts
 469              		.code	16
 470              		.thumb_func
 471              		.type	CyDisableInts, %function
 472              	CyDisableInts:
 473              	.LFB18:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2348:Generated_Source\PSoC4/CyLib.c **** *
2349:Generated_Source\PSoC4/CyLib.c **** * \return
2350:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2353:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2354:Generated_Source\PSoC4/CyLib.c **** {
 474              		.loc 1 2354 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
2355:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2358:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 479              		.loc 1 2358 0
 480 0000 024B     		ldr	r3, .L40
 481 0002 1868     		ldr	r0, [r3]
 482              	.LVL21:
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2361:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 483              		.loc 1 2361 0
 484 0004 0122     		movs	r2, #1
 485 0006 5242     		rsbs	r2, r2, #0
 486 0008 1A60     		str	r2, [r3]
2362:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 51


2363:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2364:Generated_Source\PSoC4/CyLib.c **** }
 487              		.loc 1 2364 0
 488              		@ sp needed
 489 000a 7047     		bx	lr
 490              	.L41:
 491              		.align	2
 492              	.L40:
 493 000c 80E100E0 		.word	-536813184
 494              		.cfi_endproc
 495              	.LFE18:
 496              		.size	CyDisableInts, .-CyDisableInts
 497              		.section	.text.CyEnableInts,"ax",%progbits
 498              		.align	2
 499              		.global	CyEnableInts
 500              		.code	16
 501              		.thumb_func
 502              		.type	CyEnableInts, %function
 503              	CyEnableInts:
 504              	.LFB19:
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2368:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2369:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2370:Generated_Source\PSoC4/CyLib.c **** *
2371:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2376:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2377:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 2377 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL22:
2378:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 511              		.loc 1 2378 0
 512 0000 014B     		ldr	r3, .L43
 513 0002 1860     		str	r0, [r3]
2379:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2379 0
 515              		@ sp needed
 516 0004 7047     		bx	lr
 517              	.L44:
 518 0006 C046     		.align	2
 519              	.L43:
 520 0008 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE19:
 523              		.size	CyEnableInts, .-CyEnableInts
 524              		.section	.text.CyIntEnable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntEnable
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 52


 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntEnable, %function
 530              	CyIntEnable:
 531              	.LFB26:
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2383:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2384:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2387:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2393:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2394:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2395:Generated_Source\PSoC4/CyLib.c **** *
2396:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2399:Generated_Source\PSoC4/CyLib.c **** *
2400:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2401:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2402:Generated_Source\PSoC4/CyLib.c **** {
2403:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2404:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2409:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2410:Generated_Source\PSoC4/CyLib.c **** 
2411:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2412:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2415:Generated_Source\PSoC4/CyLib.c **** }
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c **** 
2418:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2420:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2423:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2426:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2427:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2428:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2429:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2430:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2431:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 53


2432:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2435:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2436:Generated_Source\PSoC4/CyLib.c **** {
2437:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2442:Generated_Source\PSoC4/CyLib.c **** }
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2446:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2447:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2452:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2455:Generated_Source\PSoC4/CyLib.c **** *
2456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2457:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2458:Generated_Source\PSoC4/CyLib.c **** {
2459:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2460:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2465:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2468:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2471:Generated_Source\PSoC4/CyLib.c **** }
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2475:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2476:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2488:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 54


2489:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2492:Generated_Source\PSoC4/CyLib.c **** }
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2495:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2496:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2497:Generated_Source\PSoC4/CyLib.c **** *
2498:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2501:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2502:Generated_Source\PSoC4/CyLib.c **** *
2503:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2504:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2505:Generated_Source\PSoC4/CyLib.c **** {
2506:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2507:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2508:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2511:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2512:Generated_Source\PSoC4/CyLib.c **** 
2513:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2518:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2519:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2520:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2523:Generated_Source\PSoC4/CyLib.c **** }
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2536:Generated_Source\PSoC4/CyLib.c **** *
2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
2540:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2541:Generated_Source\PSoC4/CyLib.c **** 
2542:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2545:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 55


2546:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2547:Generated_Source\PSoC4/CyLib.c **** }
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2560:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2560 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL23:
2561:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2561 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL24:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2562:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 2562 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 00E100E0 		.word	-536813312
 553              		.cfi_endproc
 554              	.LFE26:
 555              		.size	CyIntEnable, .-CyIntEnable
 556              		.section	.text.CyIntGetState,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntGetState
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntGetState, %function
 562              	CyIntGetState:
 563              	.LFB27:
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c **** 
2565:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2566:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2567:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2568:Generated_Source\PSoC4/CyLib.c **** *
2569:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2570:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 56


2571:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2572:Generated_Source\PSoC4/CyLib.c **** *
2573:Generated_Source\PSoC4/CyLib.c **** * \return
2574:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2575:Generated_Source\PSoC4/CyLib.c **** *
2576:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2577:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2578:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 2578 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL25:
2579:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2580:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 570              		.loc 1 2580 0
 571 0000 044B     		ldr	r3, .L49
 572 0002 1B68     		ldr	r3, [r3]
 573 0004 1F22     		movs	r2, #31
 574 0006 1040     		ands	r0, r2
 575              	.LVL26:
 576 0008 C340     		lsrs	r3, r3, r0
 577 000a 1800     		movs	r0, r3
 578 000c 0123     		movs	r3, #1
 579 000e 1840     		ands	r0, r3
2581:Generated_Source\PSoC4/CyLib.c **** }
 580              		.loc 1 2581 0
 581              		@ sp needed
 582 0010 7047     		bx	lr
 583              	.L50:
 584 0012 C046     		.align	2
 585              	.L49:
 586 0014 00E100E0 		.word	-536813312
 587              		.cfi_endproc
 588              	.LFE27:
 589              		.size	CyIntGetState, .-CyIntGetState
 590              		.section	.text.CyIntDisable,"ax",%progbits
 591              		.align	2
 592              		.global	CyIntDisable
 593              		.code	16
 594              		.thumb_func
 595              		.type	CyIntDisable, %function
 596              	CyIntDisable:
 597              	.LFB28:
2582:Generated_Source\PSoC4/CyLib.c **** 
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2585:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2586:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2587:Generated_Source\PSoC4/CyLib.c **** *
2588:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2589:Generated_Source\PSoC4/CyLib.c **** *
2590:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 57


2594:Generated_Source\PSoC4/CyLib.c **** {
 598              		.loc 1 2594 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603              	.LVL27:
2595:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 604              		.loc 1 2595 0
 605 0000 1F23     		movs	r3, #31
 606 0002 1840     		ands	r0, r3
 607              	.LVL28:
 608 0004 1E3B     		subs	r3, r3, #30
 609 0006 8340     		lsls	r3, r3, r0
 610 0008 014A     		ldr	r2, .L52
 611 000a 1360     		str	r3, [r2]
2596:Generated_Source\PSoC4/CyLib.c **** }
 612              		.loc 1 2596 0
 613              		@ sp needed
 614 000c 7047     		bx	lr
 615              	.L53:
 616 000e C046     		.align	2
 617              	.L52:
 618 0010 80E100E0 		.word	-536813184
 619              		.cfi_endproc
 620              	.LFE28:
 621              		.size	CyIntDisable, .-CyIntDisable
 622              		.section	.text.CyIntSetPending,"ax",%progbits
 623              		.align	2
 624              		.global	CyIntSetPending
 625              		.code	16
 626              		.thumb_func
 627              		.type	CyIntSetPending, %function
 628              	CyIntSetPending:
 629              	.LFB29:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2599:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2600:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2605:Generated_Source\PSoC4/CyLib.c **** *
2606:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2607:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2608:Generated_Source\PSoC4/CyLib.c **** {
 630              		.loc 1 2608 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL29:
2609:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 636              		.loc 1 2609 0
 637 0000 1F23     		movs	r3, #31
 638 0002 1840     		ands	r0, r3
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 58


 639              	.LVL30:
 640 0004 1E3B     		subs	r3, r3, #30
 641 0006 8340     		lsls	r3, r3, r0
 642 0008 014A     		ldr	r2, .L55
 643 000a 1360     		str	r3, [r2]
2610:Generated_Source\PSoC4/CyLib.c **** }
 644              		.loc 1 2610 0
 645              		@ sp needed
 646 000c 7047     		bx	lr
 647              	.L56:
 648 000e C046     		.align	2
 649              	.L55:
 650 0010 00E200E0 		.word	-536813056
 651              		.cfi_endproc
 652              	.LFE29:
 653              		.size	CyIntSetPending, .-CyIntSetPending
 654              		.section	.text.CyIntClearPending,"ax",%progbits
 655              		.align	2
 656              		.global	CyIntClearPending
 657              		.code	16
 658              		.thumb_func
 659              		.type	CyIntClearPending, %function
 660              	CyIntClearPending:
 661              	.LFB30:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2623:Generated_Source\PSoC4/CyLib.c **** {
 662              		.loc 1 2623 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL31:
2624:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 668              		.loc 1 2624 0
 669 0000 1F23     		movs	r3, #31
 670 0002 1840     		ands	r0, r3
 671              	.LVL32:
 672 0004 1E3B     		subs	r3, r3, #30
 673 0006 8340     		lsls	r3, r3, r0
 674 0008 014A     		ldr	r2, .L58
 675 000a 1360     		str	r3, [r2]
2625:Generated_Source\PSoC4/CyLib.c **** }
 676              		.loc 1 2625 0
 677              		@ sp needed
 678 000c 7047     		bx	lr
 679              	.L59:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 59


 680 000e C046     		.align	2
 681              	.L58:
 682 0010 80E200E0 		.word	-536812928
 683              		.cfi_endproc
 684              	.LFE30:
 685              		.size	CyIntClearPending, .-CyIntClearPending
 686              		.section	.text.CyHalt,"ax",%progbits
 687              		.align	2
 688              		.global	CyHalt
 689              		.code	16
 690              		.thumb_func
 691              		.type	CyHalt, %function
 692              	CyHalt:
 693              	.LFB31:
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2629:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2630:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2633:Generated_Source\PSoC4/CyLib.c **** *
2634:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2638:Generated_Source\PSoC4/CyLib.c **** {
 694              		.loc 1 2638 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699              	.LVL33:
2639:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2640:Generated_Source\PSoC4/CyLib.c ****     {
2641:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2645:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2646:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2647:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 700              		.loc 1 2647 0
 701              		.syntax divided
 702              	@ 2647 "Generated_Source\PSoC4\CyLib.c" 1
 703 0000 01BE     		    bkpt    1
 704              	@ 0 "" 2
2648:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2649:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2650:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2651:Generated_Source\PSoC4/CyLib.c **** }
 705              		.loc 1 2651 0
 706              		.thumb
 707              		.syntax unified
 708              		@ sp needed
 709 0002 7047     		bx	lr
 710              		.cfi_endproc
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 60


 711              	.LFE31:
 712              		.size	CyHalt, .-CyHalt
 713              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 714              		.align	2
 715              		.global	CySysClkWriteEcoDiv
 716              		.code	16
 717              		.thumb_func
 718              		.type	CySysClkWriteEcoDiv, %function
 719              	CySysClkWriteEcoDiv:
 720              	.LFB12:
1349:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 721              		.loc 1 1349 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL34:
 726 0000 10B5     		push	{r4, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 4, -8
 729              		.cfi_offset 14, -4
 730 0002 0400     		movs	r4, r0
1352:Generated_Source\PSoC4/CyLib.c ****             {
 731              		.loc 1 1352 0
 732 0004 0A4B     		ldr	r3, .L64
 733 0006 1B68     		ldr	r3, [r3]
 734 0008 0722     		movs	r2, #7
 735 000a 1340     		ands	r3, r2
 736 000c 022B     		cmp	r3, #2
 737 000e 0BD0     		beq	.L62
1354:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 1354 0
 739 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL35:
1356:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 741              		.loc 1 1356 0
 742 0014 0321     		movs	r1, #3
 743 0016 0C40     		ands	r4, r1
 744              	.LVL36:
1357:Generated_Source\PSoC4/CyLib.c **** 
 745              		.loc 1 1357 0
 746 0018 064A     		ldr	r2, .L64+4
 747 001a 1368     		ldr	r3, [r2]
 748 001c 8B43     		bics	r3, r1
1356:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 749              		.loc 1 1356 0
 750 001e 2343     		orrs	r3, r4
 751 0020 1360     		str	r3, [r2]
1359:Generated_Source\PSoC4/CyLib.c ****             }
 752              		.loc 1 1359 0
 753 0022 FFF7FEFF 		bl	CyExitCriticalSection
 754              	.LVL37:
 755 0026 02E0     		b	.L61
 756              	.LVL38:
 757              	.L62:
1364:Generated_Source\PSoC4/CyLib.c ****             }
 758              		.loc 1 1364 0 discriminator 1
 759 0028 0020     		movs	r0, #0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 61


 760              	.LVL39:
 761 002a FFF7FEFF 		bl	CyHalt
 762              	.LVL40:
 763              	.L61:
1366:Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 1366 0
 765              		@ sp needed
 766 002e 10BD     		pop	{r4, pc}
 767              	.L65:
 768              		.align	2
 769              	.L64:
 770 0030 00010B40 		.word	1074462976
 771 0034 64F02E40 		.word	1076818020
 772              		.cfi_endproc
 773              	.LFE12:
 774              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 775              		.section	.text.CyIntSetSysVector,"ax",%progbits
 776              		.align	2
 777              		.global	CyIntSetSysVector
 778              		.code	16
 779              		.thumb_func
 780              		.type	CyIntSetSysVector, %function
 781              	CyIntSetSysVector:
 782              	.LFB20:
2402:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 783              		.loc 1 2402 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL41:
 788 0000 70B5     		push	{r4, r5, r6, lr}
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 4, -16
 791              		.cfi_offset 5, -12
 792              		.cfi_offset 6, -8
 793              		.cfi_offset 14, -4
 794 0002 0400     		movs	r4, r0
 795 0004 0D00     		movs	r5, r1
 796              	.LVL42:
2406:Generated_Source\PSoC4/CyLib.c **** 
 797              		.loc 1 2406 0
 798 0006 0F28     		cmp	r0, #15
 799 0008 02D9     		bls	.L67
2406:Generated_Source\PSoC4/CyLib.c **** 
 800              		.loc 1 2406 0 is_stmt 0 discriminator 1
 801 000a 0020     		movs	r0, #0
 802              	.LVL43:
 803 000c FFF7FEFF 		bl	CyHalt
 804              	.LVL44:
 805              	.L67:
2409:Generated_Source\PSoC4/CyLib.c **** 
 806              		.loc 1 2409 0 is_stmt 1
 807 0010 A400     		lsls	r4, r4, #2
 808 0012 8023     		movs	r3, #128
 809 0014 9B05     		lsls	r3, r3, #22
 810 0016 9C46     		mov	ip, r3
 811 0018 6444     		add	r4, r4, ip
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 62


 812 001a 2068     		ldr	r0, [r4]
 813              	.LVL45:
2412:Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2412 0
 815 001c 2560     		str	r5, [r4]
2415:Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2415 0
 817              		@ sp needed
 818              	.LVL46:
 819 001e 70BD     		pop	{r4, r5, r6, pc}
 820              		.cfi_endproc
 821              	.LFE20:
 822              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 823              		.section	.text.CyIntGetSysVector,"ax",%progbits
 824              		.align	2
 825              		.global	CyIntGetSysVector
 826              		.code	16
 827              		.thumb_func
 828              		.type	CyIntGetSysVector, %function
 829              	CyIntGetSysVector:
 830              	.LFB21:
2436:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 831              		.loc 1 2436 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              	.LVL47:
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 0400     		movs	r4, r0
 841              	.LVL48:
2439:Generated_Source\PSoC4/CyLib.c **** 
 842              		.loc 1 2439 0
 843 0004 0F28     		cmp	r0, #15
 844 0006 02D9     		bls	.L69
2439:Generated_Source\PSoC4/CyLib.c **** 
 845              		.loc 1 2439 0 is_stmt 0 discriminator 1
 846 0008 0020     		movs	r0, #0
 847              	.LVL49:
 848 000a FFF7FEFF 		bl	CyHalt
 849              	.LVL50:
 850              	.L69:
2441:Generated_Source\PSoC4/CyLib.c **** }
 851              		.loc 1 2441 0 is_stmt 1
 852 000e A400     		lsls	r4, r4, #2
 853 0010 8023     		movs	r3, #128
 854 0012 9B05     		lsls	r3, r3, #22
 855 0014 9C46     		mov	ip, r3
 856 0016 6444     		add	r4, r4, ip
 857 0018 2068     		ldr	r0, [r4]
2442:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2442 0
 859              		@ sp needed
 860 001a 10BD     		pop	{r4, pc}
 861              		.cfi_endproc
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 63


 862              	.LFE21:
 863              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 864              		.section	.text.CyIntSetVector,"ax",%progbits
 865              		.align	2
 866              		.global	CyIntSetVector
 867              		.code	16
 868              		.thumb_func
 869              		.type	CyIntSetVector, %function
 870              	CyIntSetVector:
 871              	.LFB22:
2458:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 872              		.loc 1 2458 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL51:
 877 0000 70B5     		push	{r4, r5, r6, lr}
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 0400     		movs	r4, r0
 884 0004 0D00     		movs	r5, r1
 885              	.LVL52:
2462:Generated_Source\PSoC4/CyLib.c **** 
 886              		.loc 1 2462 0
 887 0006 1F28     		cmp	r0, #31
 888 0008 02D9     		bls	.L71
2462:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2462 0 is_stmt 0 discriminator 1
 890 000a 0020     		movs	r0, #0
 891              	.LVL53:
 892 000c FFF7FEFF 		bl	CyHalt
 893              	.LVL54:
 894              	.L71:
2465:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2465 0 is_stmt 1
 896 0010 1034     		adds	r4, r4, #16
 897 0012 A400     		lsls	r4, r4, #2
 898 0014 8023     		movs	r3, #128
 899 0016 9B05     		lsls	r3, r3, #22
 900 0018 9C46     		mov	ip, r3
 901 001a 6444     		add	r4, r4, ip
 902 001c 2068     		ldr	r0, [r4]
 903              	.LVL55:
2468:Generated_Source\PSoC4/CyLib.c **** 
 904              		.loc 1 2468 0
 905 001e 2560     		str	r5, [r4]
2471:Generated_Source\PSoC4/CyLib.c **** 
 906              		.loc 1 2471 0
 907              		@ sp needed
 908              	.LVL56:
 909 0020 70BD     		pop	{r4, r5, r6, pc}
 910              		.cfi_endproc
 911              	.LFE22:
 912              		.size	CyIntSetVector, .-CyIntSetVector
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 64


 913 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 914              		.align	2
 915              		.global	CyIntGetVector
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntGetVector, %function
 919              	CyIntGetVector:
 920              	.LFB23:
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 921              		.loc 1 2486 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL57:
 926 0000 10B5     		push	{r4, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 4, -8
 929              		.cfi_offset 14, -4
 930 0002 0400     		movs	r4, r0
 931              	.LVL58:
2489:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2489 0
 933 0004 1F28     		cmp	r0, #31
 934 0006 02D9     		bls	.L73
2489:Generated_Source\PSoC4/CyLib.c **** 
 935              		.loc 1 2489 0 is_stmt 0 discriminator 1
 936 0008 0020     		movs	r0, #0
 937              	.LVL59:
 938 000a FFF7FEFF 		bl	CyHalt
 939              	.LVL60:
 940              	.L73:
2491:Generated_Source\PSoC4/CyLib.c **** }
 941              		.loc 1 2491 0 is_stmt 1
 942 000e 1034     		adds	r4, r4, #16
 943 0010 A400     		lsls	r4, r4, #2
 944 0012 8023     		movs	r3, #128
 945 0014 9B05     		lsls	r3, r3, #22
 946 0016 9C46     		mov	ip, r3
 947 0018 6444     		add	r4, r4, ip
 948 001a 2068     		ldr	r0, [r4]
2492:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2492 0
 950              		@ sp needed
 951 001c 10BD     		pop	{r4, pc}
 952              		.cfi_endproc
 953              	.LFE23:
 954              		.size	CyIntGetVector, .-CyIntGetVector
 955 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 956              		.align	2
 957              		.global	CyIntSetPriority
 958              		.code	16
 959              		.thumb_func
 960              		.type	CyIntSetPriority, %function
 961              	CyIntSetPriority:
 962              	.LFB24:
2505:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 963              		.loc 1 2505 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 65


 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL61:
 968 0000 70B5     		push	{r4, r5, r6, lr}
 969              		.cfi_def_cfa_offset 16
 970              		.cfi_offset 4, -16
 971              		.cfi_offset 5, -12
 972              		.cfi_offset 6, -8
 973              		.cfi_offset 14, -4
 974 0002 0400     		movs	r4, r0
 975 0004 0E00     		movs	r6, r1
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 976              		.loc 1 2510 0
 977 0006 0329     		cmp	r1, #3
 978 0008 02D9     		bls	.L75
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 979              		.loc 1 2510 0 is_stmt 0 discriminator 1
 980 000a 0020     		movs	r0, #0
 981              	.LVL62:
 982 000c FFF7FEFF 		bl	CyHalt
 983              	.LVL63:
 984              	.L75:
2511:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2511 0 is_stmt 1
 986 0010 1F2C     		cmp	r4, #31
 987 0012 02D9     		bls	.L76
2511:Generated_Source\PSoC4/CyLib.c **** 
 988              		.loc 1 2511 0 is_stmt 0 discriminator 1
 989 0014 0020     		movs	r0, #0
 990 0016 FFF7FEFF 		bl	CyHalt
 991              	.LVL64:
 992              	.L76:
2513:Generated_Source\PSoC4/CyLib.c **** 
 993              		.loc 1 2513 0 is_stmt 1
 994 001a 0325     		movs	r5, #3
 995 001c 2540     		ands	r5, r4
 996 001e ED00     		lsls	r5, r5, #3
 997 0020 0635     		adds	r5, r5, #6
 998              	.LVL65:
2515:Generated_Source\PSoC4/CyLib.c **** 
 999              		.loc 1 2515 0
 1000 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1001              	.LVL66:
2517:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1002              		.loc 1 2517 0
 1003 0026 A408     		lsrs	r4, r4, #2
 1004 0028 A400     		lsls	r4, r4, #2
 1005 002a 074B     		ldr	r3, .L77
 1006 002c 9C46     		mov	ip, r3
 1007 002e 6444     		add	r4, r4, ip
 1008 0030 2168     		ldr	r1, [r4]
 1009              	.LVL67:
2518:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1010              		.loc 1 2518 0
 1011 0032 0323     		movs	r3, #3
 1012 0034 AB40     		lsls	r3, r3, r5
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 66


 1013 0036 9943     		bics	r1, r3
 1014              	.LVL68:
 1015 0038 0B00     		movs	r3, r1
 1016              	.LVL69:
2519:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1017              		.loc 1 2519 0
 1018 003a 3100     		movs	r1, r6
 1019              	.LVL70:
 1020 003c A940     		lsls	r1, r1, r5
 1021 003e 1943     		orrs	r1, r3
 1022              	.LVL71:
2520:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2520 0
 1024 0040 2160     		str	r1, [r4]
2522:Generated_Source\PSoC4/CyLib.c **** }
 1025              		.loc 1 2522 0
 1026 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1027              	.LVL72:
2523:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2523 0
 1029              		@ sp needed
 1030              	.LVL73:
 1031 0046 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L78:
 1033              		.align	2
 1034              	.L77:
 1035 0048 00E400E0 		.word	-536812544
 1036              		.cfi_endproc
 1037              	.LFE24:
 1038              		.size	CyIntSetPriority, .-CyIntSetPriority
 1039              		.section	.text.CyIntGetPriority,"ax",%progbits
 1040              		.align	2
 1041              		.global	CyIntGetPriority
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	CyIntGetPriority, %function
 1045              	CyIntGetPriority:
 1046              	.LFB25:
2539:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1047              		.loc 1 2539 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              	.LVL74:
 1052 0000 10B5     		push	{r4, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
 1056 0002 0400     		movs	r4, r0
2542:Generated_Source\PSoC4/CyLib.c **** 
 1057              		.loc 1 2542 0
 1058 0004 1F28     		cmp	r0, #31
 1059 0006 02D9     		bls	.L80
2542:Generated_Source\PSoC4/CyLib.c **** 
 1060              		.loc 1 2542 0 is_stmt 0 discriminator 1
 1061 0008 0020     		movs	r0, #0
 1062              	.LVL75:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 67


 1063 000a FFF7FEFF 		bl	CyHalt
 1064              	.LVL76:
 1065              	.L80:
2544:Generated_Source\PSoC4/CyLib.c **** 
 1066              		.loc 1 2544 0 is_stmt 1
 1067 000e A308     		lsrs	r3, r4, #2
 1068 0010 9B00     		lsls	r3, r3, #2
 1069 0012 054A     		ldr	r2, .L81
 1070 0014 9446     		mov	ip, r2
 1071 0016 6344     		add	r3, r3, ip
 1072 0018 1868     		ldr	r0, [r3]
 1073 001a 0323     		movs	r3, #3
 1074 001c 1C40     		ands	r4, r3
 1075 001e E400     		lsls	r4, r4, #3
 1076 0020 0634     		adds	r4, r4, #6
 1077 0022 E040     		lsrs	r0, r0, r4
 1078              	.LVL77:
2546:Generated_Source\PSoC4/CyLib.c **** }
 1079              		.loc 1 2546 0
 1080 0024 1840     		ands	r0, r3
 1081              	.LVL78:
2547:Generated_Source\PSoC4/CyLib.c **** 
 1082              		.loc 1 2547 0
 1083              		@ sp needed
 1084 0026 10BD     		pop	{r4, pc}
 1085              	.L82:
 1086              		.align	2
 1087              	.L81:
 1088 0028 00E400E0 		.word	-536812544
 1089              		.cfi_endproc
 1090              	.LFE25:
 1091              		.size	CyIntGetPriority, .-CyIntGetPriority
 1092              		.section	.text.CySoftwareReset,"ax",%progbits
 1093              		.align	2
 1094              		.global	CySoftwareReset
 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CySoftwareReset, %function
 1098              	CySoftwareReset:
 1099              	.LFB32:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2661:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2662:Generated_Source\PSoC4/CyLib.c **** {
 1100              		.loc 1 2662 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
2663:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 68


2664:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2665:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2666:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2667:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1105              		.loc 1 2667 0
 1106 0000 034A     		ldr	r2, .L84
 1107 0002 1368     		ldr	r3, [r2]
 1108 0004 1B04     		lsls	r3, r3, #16
 1109 0006 1B0C     		lsrs	r3, r3, #16
2668:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1110              		.loc 1 2668 0
 1111 0008 0249     		ldr	r1, .L84+4
 1112 000a 0B43     		orrs	r3, r1
2667:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1113              		.loc 1 2667 0
 1114 000c 1360     		str	r3, [r2]
2669:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 2669 0
 1116              		@ sp needed
 1117 000e 7047     		bx	lr
 1118              	.L85:
 1119              		.align	2
 1120              	.L84:
 1121 0010 0CED00E0 		.word	-536810228
 1122 0014 0400FA05 		.word	100270084
 1123              		.cfi_endproc
 1124              	.LFE32:
 1125              		.size	CySoftwareReset, .-CySoftwareReset
 1126              		.section	.text.CyDelay,"ax",%progbits
 1127              		.align	2
 1128              		.global	CyDelay
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CyDelay, %function
 1132              	CyDelay:
 1133              	.LFB33:
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2673:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2674:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2682:Generated_Source\PSoC4/CyLib.c **** {
 1134              		.loc 1 2682 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              	.LVL79:
 1139 0000 10B5     		push	{r4, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 4, -8
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 69


 1142              		.cfi_offset 14, -4
 1143 0002 0400     		movs	r4, r0
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1144              		.loc 1 2683 0
 1145 0004 06E0     		b	.L87
 1146              	.LVL80:
 1147              	.L88:
2684:Generated_Source\PSoC4/CyLib.c ****     {
2685:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2686:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2687:Generated_Source\PSoC4/CyLib.c ****          */
2688:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1148              		.loc 1 2688 0
 1149 0006 084B     		ldr	r3, .L89
 1150 0008 5868     		ldr	r0, [r3, #4]
 1151 000a FFF7FEFF 		bl	CyDelayCycles
 1152              	.LVL81:
2689:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1153              		.loc 1 2689 0
 1154 000e 074B     		ldr	r3, .L89+4
 1155 0010 9C46     		mov	ip, r3
 1156 0012 6444     		add	r4, r4, ip
 1157              	.LVL82:
 1158              	.L87:
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1159              		.loc 1 2683 0
 1160 0014 8023     		movs	r3, #128
 1161 0016 1B02     		lsls	r3, r3, #8
 1162 0018 9C42     		cmp	r4, r3
 1163 001a F4D8     		bhi	.L88
2690:Generated_Source\PSoC4/CyLib.c ****     }
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1164              		.loc 1 2692 0
 1165 001c 024B     		ldr	r3, .L89
 1166 001e 9868     		ldr	r0, [r3, #8]
 1167 0020 6043     		muls	r0, r4
 1168 0022 FFF7FEFF 		bl	CyDelayCycles
 1169              	.LVL83:
2693:Generated_Source\PSoC4/CyLib.c **** }
 1170              		.loc 1 2693 0
 1171              		@ sp needed
 1172              	.LVL84:
 1173 0026 10BD     		pop	{r4, pc}
 1174              	.L90:
 1175              		.align	2
 1176              	.L89:
 1177 0028 00000000 		.word	.LANCHOR0
 1178 002c 0080FFFF 		.word	-32768
 1179              		.cfi_endproc
 1180              	.LFE33:
 1181              		.size	CyDelay, .-CyDelay
 1182              		.section	.text.CyDelayUs,"ax",%progbits
 1183              		.align	2
 1184              		.global	CyDelayUs
 1185              		.code	16
 1186              		.thumb_func
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 70


 1187              		.type	CyDelayUs, %function
 1188              	CyDelayUs:
 1189              	.LFB34:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1190              		.loc 1 2705 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              	.LVL85:
 1195 0000 10B5     		push	{r4, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 4, -8
 1198              		.cfi_offset 14, -4
2706:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1199              		.loc 1 2706 0
 1200 0002 034B     		ldr	r3, .L92
 1201 0004 1B7B     		ldrb	r3, [r3, #12]
 1202 0006 5843     		muls	r0, r3
 1203              	.LVL86:
 1204 0008 FFF7FEFF 		bl	CyDelayCycles
 1205              	.LVL87:
2707:Generated_Source\PSoC4/CyLib.c **** }
 1206              		.loc 1 2707 0
 1207              		@ sp needed
 1208 000c 10BD     		pop	{r4, pc}
 1209              	.L93:
 1210 000e C046     		.align	2
 1211              	.L92:
 1212 0010 00000000 		.word	.LANCHOR0
 1213              		.cfi_endproc
 1214              	.LFE34:
 1215              		.size	CyDelayUs, .-CyDelayUs
 1216              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1217              		.align	2
 1218              		.global	CySysClkWriteImoFreq
 1219              		.code	16
 1220              		.thumb_func
 1221              		.type	CySysClkWriteImoFreq, %function
 1222              	CySysClkWriteImoFreq:
 1223              	.LFB8:
 742:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1224              		.loc 1 742 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 8
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL88:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 71


 1229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 5746     		mov	r7, r10
 1237 0004 4E46     		mov	r6, r9
 1238 0006 C0B4     		push	{r6, r7}
 1239              		.cfi_def_cfa_offset 28
 1240              		.cfi_offset 9, -28
 1241              		.cfi_offset 10, -24
 1242 0008 83B0     		sub	sp, sp, #12
 1243              		.cfi_def_cfa_offset 40
 1244 000a 0400     		movs	r4, r0
 764:Generated_Source\PSoC4/CyLib.c **** 
 1245              		.loc 1 764 0
 1246 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1247              	.LVL89:
 1248 0010 0190     		str	r0, [sp, #4]
 1249              	.LVL90:
 814:Generated_Source\PSoC4/CyLib.c ****         {
 1250              		.loc 1 814 0
 1251 0012 E71E     		subs	r7, r4, #3
 1252 0014 2D2F     		cmp	r7, #45
 1253 0016 74D8     		bhi	.L95
 816:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 816 0
 1255 0018 3F4B     		ldr	r3, .L105
 1256 001a 1B78     		ldrb	r3, [r3]
 1257 001c DBB2     		uxtb	r3, r3
 1258 001e 9C42     		cmp	r4, r3
 1259 0020 08D8     		bhi	.L96
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1260              		.loc 1 818 0
 1261 0022 3E4B     		ldr	r3, .L105+4
 1262 0024 1B78     		ldrb	r3, [r3]
 1263 0026 DBB2     		uxtb	r3, r3
 1264 0028 9A46     		mov	r10, r3
 1265              	.LVL91:
 819:Generated_Source\PSoC4/CyLib.c ****             }
 1266              		.loc 1 819 0
 1267 002a 3D4B     		ldr	r3, .L105+8
 1268 002c 1B78     		ldrb	r3, [r3]
 1269 002e DBB2     		uxtb	r3, r3
 1270 0030 9946     		mov	r9, r3
 1271              	.LVL92:
 1272 0032 31E0     		b	.L97
 1273              	.LVL93:
 1274              	.L96:
 821:Generated_Source\PSoC4/CyLib.c ****             {
 1275              		.loc 1 821 0
 1276 0034 3B4B     		ldr	r3, .L105+12
 1277 0036 1B78     		ldrb	r3, [r3]
 1278 0038 DBB2     		uxtb	r3, r3
 1279 003a 9C42     		cmp	r4, r3
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 72


 1280 003c 08D8     		bhi	.L98
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1281              		.loc 1 823 0
 1282 003e 3A4B     		ldr	r3, .L105+16
 1283 0040 1B78     		ldrb	r3, [r3]
 1284 0042 DBB2     		uxtb	r3, r3
 1285 0044 9A46     		mov	r10, r3
 1286              	.LVL94:
 824:Generated_Source\PSoC4/CyLib.c ****             }
 1287              		.loc 1 824 0
 1288 0046 394B     		ldr	r3, .L105+20
 1289 0048 1B78     		ldrb	r3, [r3]
 1290 004a DBB2     		uxtb	r3, r3
 1291 004c 9946     		mov	r9, r3
 1292              	.LVL95:
 1293 004e 23E0     		b	.L97
 1294              	.LVL96:
 1295              	.L98:
 826:Generated_Source\PSoC4/CyLib.c ****             {
 1296              		.loc 1 826 0
 1297 0050 374B     		ldr	r3, .L105+24
 1298 0052 1B78     		ldrb	r3, [r3]
 1299 0054 DBB2     		uxtb	r3, r3
 1300 0056 9C42     		cmp	r4, r3
 1301 0058 08D8     		bhi	.L99
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1302              		.loc 1 828 0
 1303 005a 364B     		ldr	r3, .L105+28
 1304 005c 1B78     		ldrb	r3, [r3]
 1305 005e DBB2     		uxtb	r3, r3
 1306 0060 9A46     		mov	r10, r3
 1307              	.LVL97:
 829:Generated_Source\PSoC4/CyLib.c ****             }
 1308              		.loc 1 829 0
 1309 0062 354B     		ldr	r3, .L105+32
 1310 0064 1B78     		ldrb	r3, [r3]
 1311 0066 DBB2     		uxtb	r3, r3
 1312 0068 9946     		mov	r9, r3
 1313              	.LVL98:
 1314 006a 15E0     		b	.L97
 1315              	.LVL99:
 1316              	.L99:
 831:Generated_Source\PSoC4/CyLib.c ****             {
 1317              		.loc 1 831 0
 1318 006c 334B     		ldr	r3, .L105+36
 1319 006e 1B78     		ldrb	r3, [r3]
 1320 0070 DBB2     		uxtb	r3, r3
 1321 0072 9C42     		cmp	r4, r3
 1322 0074 08D8     		bhi	.L100
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1323              		.loc 1 833 0
 1324 0076 324B     		ldr	r3, .L105+40
 1325 0078 1B78     		ldrb	r3, [r3]
 1326 007a DBB2     		uxtb	r3, r3
 1327 007c 9A46     		mov	r10, r3
 1328              	.LVL100:
 834:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 73


 1329              		.loc 1 834 0
 1330 007e 314B     		ldr	r3, .L105+44
 1331 0080 1B78     		ldrb	r3, [r3]
 1332 0082 DBB2     		uxtb	r3, r3
 1333 0084 9946     		mov	r9, r3
 1334              	.LVL101:
 1335 0086 07E0     		b	.L97
 1336              	.LVL102:
 1337              	.L100:
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1338              		.loc 1 838 0
 1339 0088 2F4B     		ldr	r3, .L105+48
 1340 008a 1B78     		ldrb	r3, [r3]
 1341 008c DBB2     		uxtb	r3, r3
 1342 008e 9A46     		mov	r10, r3
 1343              	.LVL103:
 839:Generated_Source\PSoC4/CyLib.c ****             }
 1344              		.loc 1 839 0
 1345 0090 2E4B     		ldr	r3, .L105+52
 1346 0092 1B78     		ldrb	r3, [r3]
 1347 0094 DBB2     		uxtb	r3, r3
 1348 0096 9946     		mov	r9, r3
 1349              	.LVL104:
 1350              	.L97:
 843:Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 843 0
 1352 0098 2D4B     		ldr	r3, .L105+56
 1353 009a DE5D     		ldrb	r6, [r3, r7]
 1354              	.LVL105:
 855:Generated_Source\PSoC4/CyLib.c ****             {
 1355              		.loc 1 855 0
 1356 009c 2F2E     		cmp	r6, #47
 1357 009e 09D9     		bls	.L101
 855:Generated_Source\PSoC4/CyLib.c ****             {
 1358              		.loc 1 855 0 is_stmt 0 discriminator 1
 1359 00a0 2A2C     		cmp	r4, #42
 1360 00a2 07D9     		bls	.L101
 858:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1361              		.loc 1 858 0 is_stmt 1
 1362 00a4 1922     		movs	r2, #25
 1363 00a6 2B4B     		ldr	r3, .L105+60
 1364 00a8 1A60     		str	r2, [r3]
 1365              	.LVL106:
 861:Generated_Source\PSoC4/CyLib.c **** 
 1366              		.loc 1 861 0
 1367 00aa 0520     		movs	r0, #5
 1368 00ac FFF7FEFF 		bl	CyDelayCycles
 1369              	.LVL107:
 863:Generated_Source\PSoC4/CyLib.c ****             }
 1370              		.loc 1 863 0
 1371 00b0 1925     		movs	r5, #25
 1372 00b2 03E0     		b	.L102
 1373              	.LVL108:
 1374              	.L101:
 867:Generated_Source\PSoC4/CyLib.c ****             }
 1375              		.loc 1 867 0
 1376 00b4 274B     		ldr	r3, .L105+60
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 74


 1377 00b6 1D68     		ldr	r5, [r3]
 1378 00b8 3F23     		movs	r3, #63
 1379 00ba 1D40     		ands	r5, r3
 1380              	.LVL109:
 1381              	.L102:
 879:Generated_Source\PSoC4/CyLib.c ****             {
 1382              		.loc 1 879 0
 1383 00bc B542     		cmp	r5, r6
 1384 00be 06D9     		bls	.L103
 882:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1385              		.loc 1 882 0
 1386 00c0 234B     		ldr	r3, .L105+56
 1387 00c2 DA5D     		ldrb	r2, [r3, r7]
 1388 00c4 234B     		ldr	r3, .L105+60
 1389 00c6 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c ****             }
 1390              		.loc 1 883 0
 1391 00c8 0520     		movs	r0, #5
 1392 00ca FFF7FEFF 		bl	CyDelayCycles
 1393              	.LVL110:
 1394              	.L103:
 887:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1395              		.loc 1 887 0
 1396 00ce 1F4B     		ldr	r3, .L105+52
 1397 00d0 9C46     		mov	ip, r3
 1398 00d2 6444     		add	r4, r4, ip
 1399              	.LVL111:
 1400 00d4 2378     		ldrb	r3, [r4]
 1401 00d6 DBB2     		uxtb	r3, r3
 1402 00d8 1F4A     		ldr	r2, .L105+64
 1403 00da 1360     		str	r3, [r2]
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1404              		.loc 1 888 0
 1405 00dc 1F4B     		ldr	r3, .L105+68
 1406 00de 5246     		mov	r2, r10
 1407 00e0 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1408              		.loc 1 889 0
 1409 00e2 1F4B     		ldr	r3, .L105+72
 1410 00e4 4A46     		mov	r2, r9
 1411 00e6 1A60     		str	r2, [r3]
 890:Generated_Source\PSoC4/CyLib.c **** 
 1412              		.loc 1 890 0
 1413 00e8 0520     		movs	r0, #5
 1414 00ea FFF7FEFF 		bl	CyDelayUs
 1415              	.LVL112:
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1416              		.loc 1 892 0
 1417 00ee B542     		cmp	r5, r6
 1418 00f0 0AD2     		bcs	.L104
 895:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1419              		.loc 1 895 0
 1420 00f2 174B     		ldr	r3, .L105+56
 1421 00f4 DA5D     		ldrb	r2, [r3, r7]
 1422 00f6 174B     		ldr	r3, .L105+60
 1423 00f8 1A60     		str	r2, [r3]
 896:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 75


 1424              		.loc 1 896 0
 1425 00fa 0520     		movs	r0, #5
 1426 00fc FFF7FEFF 		bl	CyDelayCycles
 1427              	.LVL113:
 1428 0100 02E0     		b	.L104
 1429              	.LVL114:
 1430              	.L95:
 902:Generated_Source\PSoC4/CyLib.c ****         }
 1431              		.loc 1 902 0 discriminator 1
 1432 0102 0020     		movs	r0, #0
 1433 0104 FFF7FEFF 		bl	CyHalt
 1434              	.LVL115:
 1435              	.L104:
 921:Generated_Source\PSoC4/CyLib.c ****     }
 1436              		.loc 1 921 0
 1437 0108 0198     		ldr	r0, [sp, #4]
 1438 010a FFF7FEFF 		bl	CyExitCriticalSection
 1439              	.LVL116:
 922:Generated_Source\PSoC4/CyLib.c **** 
 1440              		.loc 1 922 0
 1441 010e 03B0     		add	sp, sp, #12
 1442              		@ sp needed
 1443              	.LVL117:
 1444 0110 0CBC     		pop	{r2, r3}
 1445 0112 9146     		mov	r9, r2
 1446 0114 9A46     		mov	r10, r3
 1447 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1448              	.L106:
 1449              		.align	2
 1450              	.L105:
 1451 0118 40F3FF0F 		.word	268432192
 1452 011c 41F3FF0F 		.word	268432193
 1453 0120 42F3FF0F 		.word	268432194
 1454 0124 43F3FF0F 		.word	268432195
 1455 0128 44F3FF0F 		.word	268432196
 1456 012c 45F3FF0F 		.word	268432197
 1457 0130 46F3FF0F 		.word	268432198
 1458 0134 47F3FF0F 		.word	268432199
 1459 0138 48F3FF0F 		.word	268432200
 1460 013c 49F3FF0F 		.word	268432201
 1461 0140 4AF3FF0F 		.word	268432202
 1462 0144 4BF3FF0F 		.word	268432203
 1463 0148 4CF3FF0F 		.word	268432204
 1464 014c 4DF3FF0F 		.word	268432205
 1465 0150 00000000 		.word	.LANCHOR1
 1466 0154 2CFF0B40 		.word	1074528044
 1467 0158 28FF0B40 		.word	1074528040
 1468 015c 1CFF0B40 		.word	1074528028
 1469 0160 20FF0B40 		.word	1074528032
 1470              		.cfi_endproc
 1471              	.LFE8:
 1472              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1473              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1474              		.align	2
 1475              		.global	CySysClkEcoStart
 1476              		.code	16
 1477              		.thumb_func
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 76


 1478              		.type	CySysClkEcoStart, %function
 1479              	CySysClkEcoStart:
 1480              	.LFB9:
1126:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1481              		.loc 1 1126 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              	.LVL118:
 1486 0000 10B5     		push	{r4, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0002 0400     		movs	r4, r0
 1491              	.LVL119:
1131:Generated_Source\PSoC4/CyLib.c **** 
 1492              		.loc 1 1131 0
 1493 0004 0F4A     		ldr	r2, .L112
 1494 0006 1168     		ldr	r1, [r2]
 1495 0008 0123     		movs	r3, #1
 1496 000a 0B43     		orrs	r3, r1
 1497 000c 1360     		str	r3, [r2]
1134:Generated_Source\PSoC4/CyLib.c **** 
 1498              		.loc 1 1134 0
 1499 000e 0E4A     		ldr	r2, .L112+4
 1500 0010 0E4B     		ldr	r3, .L112+8
 1501 0012 1A60     		str	r2, [r3]
1137:Generated_Source\PSoC4/CyLib.c ****         
 1502              		.loc 1 1137 0
 1503 0014 0E4A     		ldr	r2, .L112+12
 1504 0016 1368     		ldr	r3, [r2]
 1505 0018 8021     		movs	r1, #128
 1506 001a 0902     		lsls	r1, r1, #8
 1507 001c 0B43     		orrs	r3, r1
 1508 001e 1360     		str	r3, [r2]
1235:Generated_Source\PSoC4/CyLib.c ****         {
 1509              		.loc 1 1235 0
 1510 0020 0028     		cmp	r0, #0
 1511 0022 09D1     		bne	.L108
1127:Generated_Source\PSoC4/CyLib.c **** 
 1512              		.loc 1 1127 0
 1513 0024 0020     		movs	r0, #0
 1514              	.LVL120:
 1515 0026 0CE0     		b	.L109
 1516              	.L110:
1241:Generated_Source\PSoC4/CyLib.c **** 
 1517              		.loc 1 1241 0
 1518 0028 0120     		movs	r0, #1
 1519 002a FFF7FEFF 		bl	CyDelayUs
 1520              	.LVL121:
1243:Generated_Source\PSoC4/CyLib.c ****                 {
 1521              		.loc 1 1243 0
 1522 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1523              	.LVL122:
 1524 0032 0028     		cmp	r0, #0
 1525 0034 04D1     		bne	.L111
1239:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 77


 1526              		.loc 1 1239 0
 1527 0036 013C     		subs	r4, r4, #1
 1528              	.LVL123:
 1529              	.L108:
1239:Generated_Source\PSoC4/CyLib.c ****             {
 1530              		.loc 1 1239 0 is_stmt 0 discriminator 1
 1531 0038 002C     		cmp	r4, #0
 1532 003a F5D1     		bne	.L110
1237:Generated_Source\PSoC4/CyLib.c **** 
 1533              		.loc 1 1237 0 is_stmt 1
 1534 003c 1020     		movs	r0, #16
 1535 003e 00E0     		b	.L109
 1536              	.L111:
1245:Generated_Source\PSoC4/CyLib.c ****                     break;
 1537              		.loc 1 1245 0
 1538 0040 0020     		movs	r0, #0
 1539              	.L109:
 1540              	.LVL124:
1253:Generated_Source\PSoC4/CyLib.c **** 
 1541              		.loc 1 1253 0
 1542              		@ sp needed
 1543              	.LVL125:
 1544 0042 10BD     		pop	{r4, pc}
 1545              	.L113:
 1546              		.align	2
 1547              	.L112:
 1548 0044 60F02E40 		.word	1076818016
 1549 0048 02200000 		.word	8194
 1550 004c 78002E40 		.word	1076756600
 1551 0050 10002E40 		.word	1076756496
 1552              		.cfi_endproc
 1553              	.LFE9:
 1554              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1555              		.section	.text.CySysLvdEnable,"ax",%progbits
 1556              		.align	2
 1557              		.global	CySysLvdEnable
 1558              		.code	16
 1559              		.thumb_func
 1560              		.type	CySysLvdEnable, %function
 1561              	CySysLvdEnable:
 1562              	.LFB13:
2241:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1563              		.loc 1 2241 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              	.LVL126:
 1568 0000 70B5     		push	{r4, r5, r6, lr}
 1569              		.cfi_def_cfa_offset 16
 1570              		.cfi_offset 4, -16
 1571              		.cfi_offset 5, -12
 1572              		.cfi_offset 6, -8
 1573              		.cfi_offset 14, -4
 1574 0002 0300     		movs	r3, r0
2243:Generated_Source\PSoC4/CyLib.c **** 
 1575              		.loc 1 2243 0
 1576 0004 0D4C     		ldr	r4, .L115
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 78


 1577 0006 2268     		ldr	r2, [r4]
 1578 0008 0225     		movs	r5, #2
 1579 000a AA43     		bics	r2, r5
 1580 000c 2260     		str	r2, [r4]
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1581              		.loc 1 2246 0
 1582 000e 0C4A     		ldr	r2, .L115+4
 1583 0010 1168     		ldr	r1, [r2]
 1584 0012 1E20     		movs	r0, #30
 1585              	.LVL127:
 1586 0014 8143     		bics	r1, r0
2247:Generated_Source\PSoC4/CyLib.c **** 
 1587              		.loc 1 2247 0
 1588 0016 5B00     		lsls	r3, r3, #1
 1589              	.LVL128:
 1590 0018 1840     		ands	r0, r3
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1591              		.loc 1 2246 0
 1592 001a 0843     		orrs	r0, r1
 1593 001c 1060     		str	r0, [r2]
2250:Generated_Source\PSoC4/CyLib.c **** 
 1594              		.loc 1 2250 0
 1595 001e 1168     		ldr	r1, [r2]
 1596 0020 0123     		movs	r3, #1
 1597 0022 0B43     		orrs	r3, r1
 1598 0024 1360     		str	r3, [r2]
2253:Generated_Source\PSoC4/CyLib.c **** 
 1599              		.loc 1 2253 0
 1600 0026 FA20     		movs	r0, #250
 1601 0028 8000     		lsls	r0, r0, #2
 1602 002a FFF7FEFF 		bl	CyDelayUs
 1603              	.LVL129:
2256:Generated_Source\PSoC4/CyLib.c **** 
 1604              		.loc 1 2256 0
 1605 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1606              	.LVL130:
2259:Generated_Source\PSoC4/CyLib.c ****     }
 1607              		.loc 1 2259 0
 1608 0032 2368     		ldr	r3, [r4]
 1609 0034 1D43     		orrs	r5, r3
 1610 0036 2560     		str	r5, [r4]
2260:Generated_Source\PSoC4/CyLib.c **** 
 1611              		.loc 1 2260 0
 1612              		@ sp needed
 1613 0038 70BD     		pop	{r4, r5, r6, pc}
 1614              	.L116:
 1615 003a C046     		.align	2
 1616              	.L115:
 1617 003c 08000B40 		.word	1074462728
 1618 0040 18000B40 		.word	1074462744
 1619              		.cfi_endproc
 1620              	.LFE13:
 1621              		.size	CySysLvdEnable, .-CySysLvdEnable
 1622              		.global	__aeabi_uidiv
 1623              		.section	.text.CyDelayFreq,"ax",%progbits
 1624              		.align	2
 1625              		.global	CyDelayFreq
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 79


 1626              		.code	16
 1627              		.thumb_func
 1628              		.type	CyDelayFreq, %function
 1629              	CyDelayFreq:
 1630              	.LFB35:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2718:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2719:Generated_Source\PSoC4/CyLib.c **** {
 1631              		.loc 1 2719 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL131:
 1636 0000 70B5     		push	{r4, r5, r6, lr}
 1637              		.cfi_def_cfa_offset 16
 1638              		.cfi_offset 4, -16
 1639              		.cfi_offset 5, -12
 1640              		.cfi_offset 6, -8
 1641              		.cfi_offset 14, -4
2720:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1642              		.loc 1 2720 0
 1643 0002 0028     		cmp	r0, #0
 1644 0004 02D0     		beq	.L118
2721:Generated_Source\PSoC4/CyLib.c ****     {
2722:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1645              		.loc 1 2722 0
 1646 0006 0C4B     		ldr	r3, .L120
 1647 0008 1861     		str	r0, [r3, #16]
 1648 000a 02E0     		b	.L119
 1649              	.L118:
2723:Generated_Source\PSoC4/CyLib.c ****     }
2724:Generated_Source\PSoC4/CyLib.c ****     else
2725:Generated_Source\PSoC4/CyLib.c ****     {
2726:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1650              		.loc 1 2726 0
 1651 000c 0B4A     		ldr	r2, .L120+4
 1652 000e 0A4B     		ldr	r3, .L120
 1653 0010 1A61     		str	r2, [r3, #16]
 1654              	.L119:
2727:Generated_Source\PSoC4/CyLib.c ****     }
2728:Generated_Source\PSoC4/CyLib.c **** 
2729:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1655              		.loc 1 2729 0
 1656 0012 094C     		ldr	r4, .L120
 1657 0014 2569     		ldr	r5, [r4, #16]
 1658 0016 0A4B     		ldr	r3, .L120+8
 1659 0018 E818     		adds	r0, r5, r3
 1660              	.LVL132:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 80


 1661 001a 0A49     		ldr	r1, .L120+12
 1662 001c FFF7FEFF 		bl	__aeabi_uidiv
 1663              	.LVL133:
 1664 0020 2073     		strb	r0, [r4, #12]
2730:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1665              		.loc 1 2730 0
 1666 0022 094B     		ldr	r3, .L120+16
 1667 0024 E818     		adds	r0, r5, r3
 1668 0026 FA21     		movs	r1, #250
 1669 0028 8900     		lsls	r1, r1, #2
 1670 002a FFF7FEFF 		bl	__aeabi_uidiv
 1671              	.LVL134:
 1672 002e A060     		str	r0, [r4, #8]
2731:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1673              		.loc 1 2731 0
 1674 0030 C003     		lsls	r0, r0, #15
 1675 0032 6060     		str	r0, [r4, #4]
2732:Generated_Source\PSoC4/CyLib.c **** }
 1676              		.loc 1 2732 0
 1677              		@ sp needed
 1678 0034 70BD     		pop	{r4, r5, r6, pc}
 1679              	.L121:
 1680 0036 C046     		.align	2
 1681              	.L120:
 1682 0038 00000000 		.word	.LANCHOR0
 1683 003c 006CDC02 		.word	48000000
 1684 0040 3F420F00 		.word	999999
 1685 0044 40420F00 		.word	1000000
 1686 0048 E7030000 		.word	999
 1687              		.cfi_endproc
 1688              	.LFE35:
 1689              		.size	CyDelayFreq, .-CyDelayFreq
 1690              		.section	.text.CySysTickStop,"ax",%progbits
 1691              		.align	2
 1692              		.global	CySysTickStop
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CySysTickStop, %function
 1696              	CySysTickStop:
 1697              	.LFB39:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2740:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2743:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2744:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2747:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2748:Generated_Source\PSoC4/CyLib.c **** *
2749:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 81


2750:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2751:Generated_Source\PSoC4/CyLib.c **** {
2752:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2753:Generated_Source\PSoC4/CyLib.c ****     {
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2755:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2756:Generated_Source\PSoC4/CyLib.c ****     }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2759:Generated_Source\PSoC4/CyLib.c **** }
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** 
2762:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2764:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2767:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2768:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2769:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2772:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2773:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2776:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2777:Generated_Source\PSoC4/CyLib.c **** *
2778:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2780:Generated_Source\PSoC4/CyLib.c **** {
2781:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2782:Generated_Source\PSoC4/CyLib.c **** 
2783:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2784:Generated_Source\PSoC4/CyLib.c ****     {
2785:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2786:Generated_Source\PSoC4/CyLib.c ****     }
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2791:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2792:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2795:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2796:Generated_Source\PSoC4/CyLib.c **** }
2797:Generated_Source\PSoC4/CyLib.c **** 
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2800:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2801:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2802:Generated_Source\PSoC4/CyLib.c **** *
2803:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2806:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 82


2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2809:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2810:Generated_Source\PSoC4/CyLib.c **** {
2811:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2812:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2813:Generated_Source\PSoC4/CyLib.c **** }
2814:Generated_Source\PSoC4/CyLib.c **** 
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2817:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2818:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2823:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2824:Generated_Source\PSoC4/CyLib.c **** *
2825:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2826:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2827:Generated_Source\PSoC4/CyLib.c **** {
 1698              		.loc 1 2827 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
2828:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1703              		.loc 1 2828 0
 1704 0000 024A     		ldr	r2, .L123
 1705 0002 1368     		ldr	r3, [r2]
 1706 0004 0121     		movs	r1, #1
 1707 0006 8B43     		bics	r3, r1
 1708 0008 1360     		str	r3, [r2]
2829:Generated_Source\PSoC4/CyLib.c **** }
 1709              		.loc 1 2829 0
 1710              		@ sp needed
 1711 000a 7047     		bx	lr
 1712              	.L124:
 1713              		.align	2
 1714              	.L123:
 1715 000c 10E000E0 		.word	-536813552
 1716              		.cfi_endproc
 1717              	.LFE39:
 1718              		.size	CySysTickStop, .-CySysTickStop
 1719              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1720              		.align	2
 1721              		.global	CySysTickEnableInterrupt
 1722              		.code	16
 1723              		.thumb_func
 1724              		.type	CySysTickEnableInterrupt, %function
 1725              	CySysTickEnableInterrupt:
 1726              	.LFB40:
2830:Generated_Source\PSoC4/CyLib.c **** 
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2833:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2834:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 83


2835:Generated_Source\PSoC4/CyLib.c **** *
2836:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2839:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2843:Generated_Source\PSoC4/CyLib.c **** {
 1727              		.loc 1 2843 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 0
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1732              		.loc 1 2844 0
 1733 0000 024A     		ldr	r2, .L126
 1734 0002 1168     		ldr	r1, [r2]
 1735 0004 0223     		movs	r3, #2
 1736 0006 0B43     		orrs	r3, r1
 1737 0008 1360     		str	r3, [r2]
2845:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 2845 0
 1739              		@ sp needed
 1740 000a 7047     		bx	lr
 1741              	.L127:
 1742              		.align	2
 1743              	.L126:
 1744 000c 10E000E0 		.word	-536813552
 1745              		.cfi_endproc
 1746              	.LFE40:
 1747              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1748              		.section	.text.CySysTickEnable,"ax",%progbits
 1749              		.align	2
 1750              		.global	CySysTickEnable
 1751              		.code	16
 1752              		.thumb_func
 1753              		.type	CySysTickEnable, %function
 1754              	CySysTickEnable:
 1755              	.LFB38:
2810:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1756              		.loc 1 2810 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760 0000 10B5     		push	{r4, lr}
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 4, -8
 1763              		.cfi_offset 14, -4
2811:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1764              		.loc 1 2811 0
 1765 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1766              	.LVL135:
2812:Generated_Source\PSoC4/CyLib.c **** }
 1767              		.loc 1 2812 0
 1768 0006 034A     		ldr	r2, .L129
 1769 0008 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 84


 1770 000a 0123     		movs	r3, #1
 1771 000c 0B43     		orrs	r3, r1
 1772 000e 1360     		str	r3, [r2]
2813:Generated_Source\PSoC4/CyLib.c **** 
 1773              		.loc 1 2813 0
 1774              		@ sp needed
 1775 0010 10BD     		pop	{r4, pc}
 1776              	.L130:
 1777 0012 C046     		.align	2
 1778              	.L129:
 1779 0014 10E000E0 		.word	-536813552
 1780              		.cfi_endproc
 1781              	.LFE38:
 1782              		.size	CySysTickEnable, .-CySysTickEnable
 1783              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTickDisableInterrupt
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CySysTickDisableInterrupt, %function
 1789              	CySysTickDisableInterrupt:
 1790              	.LFB41:
2846:Generated_Source\PSoC4/CyLib.c **** 
2847:Generated_Source\PSoC4/CyLib.c **** 
2848:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2849:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2850:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2855:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2858:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2859:Generated_Source\PSoC4/CyLib.c **** {
 1791              		.loc 1 2859 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
2860:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1796              		.loc 1 2860 0
 1797 0000 024A     		ldr	r2, .L132
 1798 0002 1368     		ldr	r3, [r2]
 1799 0004 0221     		movs	r1, #2
 1800 0006 8B43     		bics	r3, r1
 1801 0008 1360     		str	r3, [r2]
2861:Generated_Source\PSoC4/CyLib.c **** }
 1802              		.loc 1 2861 0
 1803              		@ sp needed
 1804 000a 7047     		bx	lr
 1805              	.L133:
 1806              		.align	2
 1807              	.L132:
 1808 000c 10E000E0 		.word	-536813552
 1809              		.cfi_endproc
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 85


 1810              	.LFE41:
 1811              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1812              		.section	.text.CySysTickSetReload,"ax",%progbits
 1813              		.align	2
 1814              		.global	CySysTickSetReload
 1815              		.code	16
 1816              		.thumb_func
 1817              		.type	CySysTickSetReload, %function
 1818              	CySysTickSetReload:
 1819              	.LFB42:
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c **** 
2864:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2865:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2866:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2869:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2870:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2871:Generated_Source\PSoC4/CyLib.c **** *
2872:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2873:Generated_Source\PSoC4/CyLib.c **** *
2874:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2875:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2876:Generated_Source\PSoC4/CyLib.c **** {
 1820              		.loc 1 2876 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		@ link register save eliminated.
 1825              	.LVL136:
2877:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1826              		.loc 1 2877 0
 1827 0000 0002     		lsls	r0, r0, #8
 1828              	.LVL137:
 1829 0002 000A     		lsrs	r0, r0, #8
 1830 0004 014B     		ldr	r3, .L135
 1831 0006 1860     		str	r0, [r3]
2878:Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 2878 0
 1833              		@ sp needed
 1834 0008 7047     		bx	lr
 1835              	.L136:
 1836 000a C046     		.align	2
 1837              	.L135:
 1838 000c 14E000E0 		.word	-536813548
 1839              		.cfi_endproc
 1840              	.LFE42:
 1841              		.size	CySysTickSetReload, .-CySysTickSetReload
 1842              		.section	.text.CySysTickGetReload,"ax",%progbits
 1843              		.align	2
 1844              		.global	CySysTickGetReload
 1845              		.code	16
 1846              		.thumb_func
 1847              		.type	CySysTickGetReload, %function
 1848              	CySysTickGetReload:
 1849              	.LFB43:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 86


2879:Generated_Source\PSoC4/CyLib.c **** 
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2882:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2883:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2884:Generated_Source\PSoC4/CyLib.c **** *
2885:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2886:Generated_Source\PSoC4/CyLib.c **** *
2887:Generated_Source\PSoC4/CyLib.c **** * \return
2888:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2889:Generated_Source\PSoC4/CyLib.c **** *
2890:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2891:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2892:Generated_Source\PSoC4/CyLib.c **** {
 1850              		.loc 1 2892 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
2893:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1855              		.loc 1 2893 0
 1856 0000 024B     		ldr	r3, .L138
 1857 0002 1868     		ldr	r0, [r3]
 1858 0004 0002     		lsls	r0, r0, #8
 1859 0006 000A     		lsrs	r0, r0, #8
2894:Generated_Source\PSoC4/CyLib.c **** }
 1860              		.loc 1 2894 0
 1861              		@ sp needed
 1862 0008 7047     		bx	lr
 1863              	.L139:
 1864 000a C046     		.align	2
 1865              	.L138:
 1866 000c 14E000E0 		.word	-536813548
 1867              		.cfi_endproc
 1868              	.LFE43:
 1869              		.size	CySysTickGetReload, .-CySysTickGetReload
 1870              		.section	.text.CySysTickGetValue,"ax",%progbits
 1871              		.align	2
 1872              		.global	CySysTickGetValue
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	CySysTickGetValue, %function
 1876              	CySysTickGetValue:
 1877              	.LFB44:
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** 
2897:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2898:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2899:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2902:Generated_Source\PSoC4/CyLib.c **** *
2903:Generated_Source\PSoC4/CyLib.c **** * \return
2904:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 87


2908:Generated_Source\PSoC4/CyLib.c **** {
 1878              		.loc 1 2908 0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		@ link register save eliminated.
2909:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1883              		.loc 1 2909 0
 1884 0000 024B     		ldr	r3, .L141
 1885 0002 1868     		ldr	r0, [r3]
 1886 0004 0002     		lsls	r0, r0, #8
 1887 0006 000A     		lsrs	r0, r0, #8
2910:Generated_Source\PSoC4/CyLib.c **** }
 1888              		.loc 1 2910 0
 1889              		@ sp needed
 1890 0008 7047     		bx	lr
 1891              	.L142:
 1892 000a C046     		.align	2
 1893              	.L141:
 1894 000c 18E000E0 		.word	-536813544
 1895              		.cfi_endproc
 1896              	.LFE44:
 1897              		.size	CySysTickGetValue, .-CySysTickGetValue
 1898              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1899              		.align	2
 1900              		.global	CySysTickSetClockSource
 1901              		.code	16
 1902              		.thumb_func
 1903              		.type	CySysTickSetClockSource, %function
 1904              	CySysTickSetClockSource:
 1905              	.LFB45:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2914:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2915:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2916:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2917:Generated_Source\PSoC4/CyLib.c ****     *
2918:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2919:Generated_Source\PSoC4/CyLib.c ****     *
2920:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2921:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2922:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2923:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2924:Generated_Source\PSoC4/CyLib.c ****     *
2925:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2926:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2927:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2930:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2931:Generated_Source\PSoC4/CyLib.c ****     *
2932:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2933:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2934:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2935:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2936:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 88


2937:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2938:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2939:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2940:Generated_Source\PSoC4/CyLib.c ****     {
 1906              		.loc 1 2940 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911              	.LVL138:
2941:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1912              		.loc 1 2941 0
 1913 0000 0128     		cmp	r0, #1
 1914 0002 05D1     		bne	.L144
2942:Generated_Source\PSoC4/CyLib.c ****         {
2943:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1915              		.loc 1 2943 0
 1916 0004 054A     		ldr	r2, .L146
 1917 0006 1168     		ldr	r1, [r2]
 1918 0008 0423     		movs	r3, #4
 1919 000a 0B43     		orrs	r3, r1
 1920 000c 1360     		str	r3, [r2]
 1921 000e 04E0     		b	.L143
 1922              	.L144:
2944:Generated_Source\PSoC4/CyLib.c ****         }
2945:Generated_Source\PSoC4/CyLib.c ****         else
2946:Generated_Source\PSoC4/CyLib.c ****         {
2947:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1923              		.loc 1 2947 0
 1924 0010 024A     		ldr	r2, .L146
 1925 0012 1368     		ldr	r3, [r2]
 1926 0014 0421     		movs	r1, #4
 1927 0016 8B43     		bics	r3, r1
 1928 0018 1360     		str	r3, [r2]
 1929              	.L143:
2948:Generated_Source\PSoC4/CyLib.c ****         }
2949:Generated_Source\PSoC4/CyLib.c ****     }
 1930              		.loc 1 2949 0
 1931              		@ sp needed
 1932 001a 7047     		bx	lr
 1933              	.L147:
 1934              		.align	2
 1935              	.L146:
 1936 001c 10E000E0 		.word	-536813552
 1937              		.cfi_endproc
 1938              	.LFE45:
 1939              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1940              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1941              		.align	2
 1942              		.global	CySysTickGetClockSource
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	CySysTickGetClockSource, %function
 1946              	CySysTickGetClockSource:
 1947              	.LFB46:
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c ****     
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 89


2952:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2954:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c ****     *
2956:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2959:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2961:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2963:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2964:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2965:Generated_Source\PSoC4/CyLib.c ****     {
 1948              		.loc 1 2965 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
2966:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1953              		.loc 1 2966 0
 1954 0000 024B     		ldr	r3, .L149
 1955 0002 1868     		ldr	r0, [r3]
 1956 0004 8008     		lsrs	r0, r0, #2
 1957 0006 0123     		movs	r3, #1
 1958 0008 1840     		ands	r0, r3
2967:Generated_Source\PSoC4/CyLib.c ****     }
 1959              		.loc 1 2967 0
 1960              		@ sp needed
 1961 000a 7047     		bx	lr
 1962              	.L150:
 1963              		.align	2
 1964              	.L149:
 1965 000c 10E000E0 		.word	-536813552
 1966              		.cfi_endproc
 1967              	.LFE46:
 1968              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1969              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1970              		.align	2
 1971              		.global	CySysTickGetCountFlag
 1972              		.code	16
 1973              		.thumb_func
 1974              		.type	CySysTickGetCountFlag, %function
 1975              	CySysTickGetCountFlag:
 1976              	.LFB47:
2968:Generated_Source\PSoC4/CyLib.c ****     
2969:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2977:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 90


2980:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *
2983:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2984:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2985:Generated_Source\PSoC4/CyLib.c **** *
2986:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2987:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2988:Generated_Source\PSoC4/CyLib.c **** {
 1977              		.loc 1 2988 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
2989:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1982              		.loc 1 2989 0
 1983 0000 024B     		ldr	r3, .L152
 1984 0002 1868     		ldr	r0, [r3]
 1985 0004 000C     		lsrs	r0, r0, #16
 1986 0006 0123     		movs	r3, #1
 1987 0008 1840     		ands	r0, r3
2990:Generated_Source\PSoC4/CyLib.c **** }
 1988              		.loc 1 2990 0
 1989              		@ sp needed
 1990 000a 7047     		bx	lr
 1991              	.L153:
 1992              		.align	2
 1993              	.L152:
 1994 000c 10E000E0 		.word	-536813552
 1995              		.cfi_endproc
 1996              	.LFE47:
 1997              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1998              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1999              		.align	2
 2000              		.code	16
 2001              		.thumb_func
 2002              		.type	CySysTickServiceCallbacks, %function
 2003              	CySysTickServiceCallbacks:
 2004              	.LFB51:
2991:Generated_Source\PSoC4/CyLib.c **** 
2992:Generated_Source\PSoC4/CyLib.c **** 
2993:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2994:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2995:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2996:Generated_Source\PSoC4/CyLib.c **** *
2997:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3000:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3001:Generated_Source\PSoC4/CyLib.c **** {
3002:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3003:Generated_Source\PSoC4/CyLib.c **** }
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 91


3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3011:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3012:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3015:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3016:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3017:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3018:Generated_Source\PSoC4/CyLib.c **** *  functions.
3019:Generated_Source\PSoC4/CyLib.c **** *
3020:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3021:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3024:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3025:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3026:Generated_Source\PSoC4/CyLib.c **** *
3027:Generated_Source\PSoC4/CyLib.c **** * \return
3028:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3029:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3032:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3033:Generated_Source\PSoC4/CyLib.c **** *
3034:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3036:Generated_Source\PSoC4/CyLib.c **** {
3037:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3040:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3041:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3042:Generated_Source\PSoC4/CyLib.c **** }
3043:Generated_Source\PSoC4/CyLib.c **** 
3044:Generated_Source\PSoC4/CyLib.c **** 
3045:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3046:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3047:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3050:Generated_Source\PSoC4/CyLib.c **** *
3051:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3052:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** * \return
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3056:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3060:Generated_Source\PSoC4/CyLib.c **** {
3061:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3062:Generated_Source\PSoC4/CyLib.c **** }
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 92


3066:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3067:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3073:Generated_Source\PSoC4/CyLib.c **** {
 2005              		.loc 1 3073 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009 0000 10B5     		push	{r4, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 4, -8
 2012              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3077:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2013              		.loc 1 3077 0
 2014 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2015              	.LVL139:
 2016 0006 0128     		cmp	r0, #1
 2017 0008 0BD1     		bne	.L154
 2018 000a 07E0     		b	.L159
 2019              	.LVL140:
 2020              	.L158:
3078:Generated_Source\PSoC4/CyLib.c ****     {
3079:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3080:Generated_Source\PSoC4/CyLib.c ****         {
3081:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2021              		.loc 1 3081 0
 2022 000c A300     		lsls	r3, r4, #2
 2023 000e 054A     		ldr	r2, .L160
 2024 0010 9B58     		ldr	r3, [r3, r2]
 2025 0012 002B     		cmp	r3, #0
 2026 0014 00D0     		beq	.L157
3082:Generated_Source\PSoC4/CyLib.c ****             {
3083:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2027              		.loc 1 3083 0
 2028 0016 9847     		blx	r3
 2029              	.LVL141:
 2030              	.L157:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2031              		.loc 1 3079 0 discriminator 2
 2032 0018 0134     		adds	r4, r4, #1
 2033              	.LVL142:
 2034 001a 00E0     		b	.L155
 2035              	.LVL143:
 2036              	.L159:
 2037 001c 0024     		movs	r4, #0
 2038              	.L155:
 2039              	.LVL144:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2040              		.loc 1 3079 0 is_stmt 0 discriminator 1
 2041 001e 042C     		cmp	r4, #4
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 93


 2042 0020 F4D9     		bls	.L158
 2043              	.LVL145:
 2044              	.L154:
3084:Generated_Source\PSoC4/CyLib.c ****             }
3085:Generated_Source\PSoC4/CyLib.c ****         }
3086:Generated_Source\PSoC4/CyLib.c ****     }
3087:Generated_Source\PSoC4/CyLib.c **** }
 2045              		.loc 1 3087 0 is_stmt 1
 2046              		@ sp needed
 2047 0022 10BD     		pop	{r4, pc}
 2048              	.L161:
 2049              		.align	2
 2050              	.L160:
 2051 0024 00000000 		.word	.LANCHOR2
 2052              		.cfi_endproc
 2053              	.LFE51:
 2054              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2055              		.section	.text.CySysTickClear,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickClear
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickClear, %function
 2061              	CySysTickClear:
 2062              	.LFB48:
3001:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2063              		.loc 1 3001 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
3002:Generated_Source\PSoC4/CyLib.c **** }
 2068              		.loc 1 3002 0
 2069 0000 0022     		movs	r2, #0
 2070 0002 014B     		ldr	r3, .L163
 2071 0004 1A60     		str	r2, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** 
 2072              		.loc 1 3003 0
 2073              		@ sp needed
 2074 0006 7047     		bx	lr
 2075              	.L164:
 2076              		.align	2
 2077              	.L163:
 2078 0008 18E000E0 		.word	-536813544
 2079              		.cfi_endproc
 2080              	.LFE48:
 2081              		.size	CySysTickClear, .-CySysTickClear
 2082              		.section	.text.CySysTickInit,"ax",%progbits
 2083              		.align	2
 2084              		.global	CySysTickInit
 2085              		.code	16
 2086              		.thumb_func
 2087              		.type	CySysTickInit, %function
 2088              	CySysTickInit:
 2089              	.LFB37:
2780:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2090              		.loc 1 2780 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 94


 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
 2094 0000 10B5     		push	{r4, lr}
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 4, -8
 2097              		.cfi_offset 14, -4
 2098              	.LVL146:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2099              		.loc 1 2783 0
 2100 0002 0023     		movs	r3, #0
 2101 0004 04E0     		b	.L166
 2102              	.LVL147:
 2103              	.L167:
2785:Generated_Source\PSoC4/CyLib.c ****     }
 2104              		.loc 1 2785 0 discriminator 3
 2105 0006 9900     		lsls	r1, r3, #2
 2106 0008 0020     		movs	r0, #0
 2107 000a 0B4A     		ldr	r2, .L168
 2108 000c 8850     		str	r0, [r1, r2]
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2109              		.loc 1 2783 0 discriminator 3
 2110 000e 0133     		adds	r3, r3, #1
 2111              	.LVL148:
 2112              	.L166:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2113              		.loc 1 2783 0 is_stmt 0 discriminator 1
 2114 0010 042B     		cmp	r3, #4
 2115 0012 F8D9     		bls	.L167
2788:Generated_Source\PSoC4/CyLib.c **** 
 2116              		.loc 1 2788 0 is_stmt 1
 2117 0014 0949     		ldr	r1, .L168+4
 2118 0016 0F20     		movs	r0, #15
 2119 0018 FFF7FEFF 		bl	CyIntSetSysVector
 2120              	.LVL149:
2791:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2121              		.loc 1 2791 0
 2122 001c 0120     		movs	r0, #1
 2123 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2124              	.LVL150:
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2125              		.loc 1 2794 0
 2126 0022 074B     		ldr	r3, .L168+8
 2127 0024 1869     		ldr	r0, [r3, #16]
 2128 0026 FA21     		movs	r1, #250
 2129 0028 8900     		lsls	r1, r1, #2
 2130 002a FFF7FEFF 		bl	__aeabi_uidiv
 2131              	.LVL151:
 2132 002e FFF7FEFF 		bl	CySysTickSetReload
 2133              	.LVL152:
2795:Generated_Source\PSoC4/CyLib.c **** }
 2134              		.loc 1 2795 0
 2135 0032 FFF7FEFF 		bl	CySysTickClear
 2136              	.LVL153:
2796:Generated_Source\PSoC4/CyLib.c **** 
 2137              		.loc 1 2796 0
 2138              		@ sp needed
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 95


 2139 0036 10BD     		pop	{r4, pc}
 2140              	.L169:
 2141              		.align	2
 2142              	.L168:
 2143 0038 00000000 		.word	.LANCHOR2
 2144 003c 00000000 		.word	CySysTickServiceCallbacks
 2145 0040 00000000 		.word	.LANCHOR0
 2146              		.cfi_endproc
 2147              	.LFE37:
 2148              		.size	CySysTickInit, .-CySysTickInit
 2149              		.section	.text.CySysTickStart,"ax",%progbits
 2150              		.align	2
 2151              		.global	CySysTickStart
 2152              		.code	16
 2153              		.thumb_func
 2154              		.type	CySysTickStart, %function
 2155              	CySysTickStart:
 2156              	.LFB36:
2751:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2157              		.loc 1 2751 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161 0000 10B5     		push	{r4, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 4, -8
 2164              		.cfi_offset 14, -4
2752:Generated_Source\PSoC4/CyLib.c ****     {
 2165              		.loc 1 2752 0
 2166 0002 064B     		ldr	r3, .L172
 2167 0004 5B69     		ldr	r3, [r3, #20]
 2168 0006 002B     		cmp	r3, #0
 2169 0008 04D1     		bne	.L171
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2170              		.loc 1 2754 0
 2171 000a FFF7FEFF 		bl	CySysTickInit
 2172              	.LVL154:
2755:Generated_Source\PSoC4/CyLib.c ****     }
 2173              		.loc 1 2755 0
 2174 000e 0122     		movs	r2, #1
 2175 0010 024B     		ldr	r3, .L172
 2176 0012 5A61     		str	r2, [r3, #20]
 2177              	.L171:
2758:Generated_Source\PSoC4/CyLib.c **** }
 2178              		.loc 1 2758 0
 2179 0014 FFF7FEFF 		bl	CySysTickEnable
 2180              	.LVL155:
2759:Generated_Source\PSoC4/CyLib.c **** 
 2181              		.loc 1 2759 0
 2182              		@ sp needed
 2183 0018 10BD     		pop	{r4, pc}
 2184              	.L173:
 2185 001a C046     		.align	2
 2186              	.L172:
 2187 001c 00000000 		.word	.LANCHOR2
 2188              		.cfi_endproc
 2189              	.LFE36:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 96


 2190              		.size	CySysTickStart, .-CySysTickStart
 2191              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2192              		.align	2
 2193              		.global	CySysTickSetCallback
 2194              		.code	16
 2195              		.thumb_func
 2196              		.type	CySysTickSetCallback, %function
 2197              	CySysTickSetCallback:
 2198              	.LFB49:
3036:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2199              		.loc 1 3036 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              		@ link register save eliminated.
 2204              	.LVL156:
3039:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2205              		.loc 1 3039 0
 2206 0000 024A     		ldr	r2, .L175
 2207 0002 8300     		lsls	r3, r0, #2
 2208 0004 9858     		ldr	r0, [r3, r2]
 2209              	.LVL157:
3040:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2210              		.loc 1 3040 0
 2211 0006 9950     		str	r1, [r3, r2]
3042:Generated_Source\PSoC4/CyLib.c **** 
 2212              		.loc 1 3042 0
 2213              		@ sp needed
 2214 0008 7047     		bx	lr
 2215              	.L176:
 2216 000a C046     		.align	2
 2217              	.L175:
 2218 000c 00000000 		.word	.LANCHOR2
 2219              		.cfi_endproc
 2220              	.LFE49:
 2221              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2222              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2223              		.align	2
 2224              		.global	CySysTickGetCallback
 2225              		.code	16
 2226              		.thumb_func
 2227              		.type	CySysTickGetCallback, %function
 2228              	CySysTickGetCallback:
 2229              	.LFB50:
3060:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2230              		.loc 1 3060 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 0
 2233              		@ frame_needed = 0, uses_anonymous_args = 0
 2234              		@ link register save eliminated.
 2235              	.LVL158:
3061:Generated_Source\PSoC4/CyLib.c **** }
 2236              		.loc 1 3061 0
 2237 0000 8000     		lsls	r0, r0, #2
 2238              	.LVL159:
 2239 0002 014B     		ldr	r3, .L178
 2240 0004 C058     		ldr	r0, [r0, r3]
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 97


3062:Generated_Source\PSoC4/CyLib.c **** 
 2241              		.loc 1 3062 0
 2242              		@ sp needed
 2243 0006 7047     		bx	lr
 2244              	.L179:
 2245              		.align	2
 2246              	.L178:
 2247 0008 00000000 		.word	.LANCHOR2
 2248              		.cfi_endproc
 2249              	.LFE50:
 2250              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2251              		.section	.text.CyGetUniqueId,"ax",%progbits
 2252              		.align	2
 2253              		.global	CyGetUniqueId
 2254              		.code	16
 2255              		.thumb_func
 2256              		.type	CyGetUniqueId, %function
 2257              	CyGetUniqueId:
 2258              	.LFB52:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3092:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c **** *
3094:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3095:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3096:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3097:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3098:Generated_Source\PSoC4/CyLib.c **** *
3099:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3100:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3101:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3104:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3105:Generated_Source\PSoC4/CyLib.c **** {
 2259              		.loc 1 3105 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 0
 2262              		@ frame_needed = 0, uses_anonymous_args = 0
 2263              		@ link register save eliminated.
 2264              	.LVL160:
3106:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3107:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2265              		.loc 1 3107 0
 2266 0000 134B     		ldr	r3, .L181
 2267 0002 1B78     		ldrb	r3, [r3]
 2268 0004 DAB2     		uxtb	r2, r3
 2269 0006 0260     		str	r2, [r0]
3108:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2270              		.loc 1 3108 0
 2271 0008 124B     		ldr	r3, .L181+4
 2272 000a 1B78     		ldrb	r3, [r3]
 2273 000c 1B02     		lsls	r3, r3, #8
 2274 000e 1343     		orrs	r3, r2
 2275 0010 0360     		str	r3, [r0]
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 98


3109:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2276              		.loc 1 3109 0
 2277 0012 114A     		ldr	r2, .L181+8
 2278 0014 1278     		ldrb	r2, [r2]
 2279 0016 1204     		lsls	r2, r2, #16
 2280 0018 1343     		orrs	r3, r2
 2281 001a 0360     		str	r3, [r0]
3110:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2282              		.loc 1 3110 0
 2283 001c 0F4A     		ldr	r2, .L181+12
 2284 001e 1278     		ldrb	r2, [r2]
 2285 0020 1206     		lsls	r2, r2, #24
 2286 0022 1343     		orrs	r3, r2
 2287 0024 0360     		str	r3, [r0]
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2288              		.loc 1 3112 0
 2289 0026 0E4B     		ldr	r3, .L181+16
 2290 0028 1B78     		ldrb	r3, [r3]
 2291 002a DAB2     		uxtb	r2, r3
 2292 002c 4260     		str	r2, [r0, #4]
3113:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2293              		.loc 1 3113 0
 2294 002e 0D4B     		ldr	r3, .L181+20
 2295 0030 1B78     		ldrb	r3, [r3]
 2296 0032 1B02     		lsls	r3, r3, #8
 2297 0034 1343     		orrs	r3, r2
 2298 0036 4360     		str	r3, [r0, #4]
3114:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2299              		.loc 1 3114 0
 2300 0038 0B4A     		ldr	r2, .L181+24
 2301 003a 1278     		ldrb	r2, [r2]
 2302 003c 1204     		lsls	r2, r2, #16
 2303 003e 1343     		orrs	r3, r2
 2304 0040 4360     		str	r3, [r0, #4]
3115:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2305              		.loc 1 3115 0
 2306 0042 0A4A     		ldr	r2, .L181+28
 2307 0044 1278     		ldrb	r2, [r2]
 2308 0046 1206     		lsls	r2, r2, #24
 2309 0048 1343     		orrs	r3, r2
 2310 004a 4360     		str	r3, [r0, #4]
3116:Generated_Source\PSoC4/CyLib.c **** #else
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3120:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3121:Generated_Source\PSoC4/CyLib.c **** 
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3125:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3126:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3127:Generated_Source\PSoC4/CyLib.c **** }
 2311              		.loc 1 3127 0
 2312              		@ sp needed
 2313 004c 7047     		bx	lr
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 99


 2314              	.L182:
 2315 004e C046     		.align	2
 2316              	.L181:
 2317 0050 78F2FF0F 		.word	268431992
 2318 0054 79F2FF0F 		.word	268431993
 2319 0058 7AF2FF0F 		.word	268431994
 2320 005c 7BF2FF0F 		.word	268431995
 2321 0060 7CF2FF0F 		.word	268431996
 2322 0064 7DF2FF0F 		.word	268431997
 2323 0068 7EF2FF0F 		.word	268431998
 2324 006c 7FF2FF0F 		.word	268431999
 2325              		.cfi_endproc
 2326              	.LFE52:
 2327              		.size	CyGetUniqueId, .-CyGetUniqueId
 2328              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2329              		.align	2
 2330              		.global	CySysSetRamAccessArbPriority
 2331              		.code	16
 2332              		.thumb_func
 2333              		.type	CySysSetRamAccessArbPriority, %function
 2334              	CySysSetRamAccessArbPriority:
 2335              	.LFB53:
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3131:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3132:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3133:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3134:Generated_Source\PSoC4/CyLib.c ****     *
3135:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3136:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3137:Generated_Source\PSoC4/CyLib.c ****     *  details.
3138:Generated_Source\PSoC4/CyLib.c ****     *
3139:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3140:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3141:Generated_Source\PSoC4/CyLib.c ****     *
3142:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3143:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3144:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3145:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3146:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3147:Generated_Source\PSoC4/CyLib.c ****     *
3148:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3149:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3150:Generated_Source\PSoC4/CyLib.c ****     {
 2336              		.loc 1 3150 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341              	.LVL161:
3151:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3152:Generated_Source\PSoC4/CyLib.c **** 
3153:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2342              		.loc 1 3153 0
 2343 0000 0549     		ldr	r1, .L184
 2344 0002 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 100


 2345 0004 054B     		ldr	r3, .L184+4
 2346 0006 1A40     		ands	r2, r3
 2347              	.LVL162:
3154:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2348              		.loc 1 3154 0
 2349 0008 4004     		lsls	r0, r0, #17
 2350              	.LVL163:
 2351 000a C023     		movs	r3, #192
 2352 000c DB02     		lsls	r3, r3, #11
 2353 000e 1840     		ands	r0, r3
 2354 0010 1043     		orrs	r0, r2
 2355              	.LVL164:
3155:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2356              		.loc 1 3155 0
 2357 0012 0860     		str	r0, [r1]
3156:Generated_Source\PSoC4/CyLib.c ****     }
 2358              		.loc 1 3156 0
 2359              		@ sp needed
 2360 0014 7047     		bx	lr
 2361              	.L185:
 2362 0016 C046     		.align	2
 2363              	.L184:
 2364 0018 38001040 		.word	1074790456
 2365 001c FFFFF9FF 		.word	-393217
 2366              		.cfi_endproc
 2367              	.LFE53:
 2368              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2369              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2370              		.align	2
 2371              		.global	CySysSetFlashAccessArbPriority
 2372              		.code	16
 2373              		.thumb_func
 2374              		.type	CySysSetFlashAccessArbPriority, %function
 2375              	CySysSetFlashAccessArbPriority:
 2376              	.LFB54:
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c **** 
3159:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3160:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3161:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3162:Generated_Source\PSoC4/CyLib.c ****     *
3163:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3164:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3165:Generated_Source\PSoC4/CyLib.c ****     *  details.
3166:Generated_Source\PSoC4/CyLib.c ****     *
3167:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3168:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3169:Generated_Source\PSoC4/CyLib.c ****     *
3170:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3171:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3172:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3173:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3174:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3175:Generated_Source\PSoC4/CyLib.c ****     *
3176:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3177:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3178:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 101


 2377              		.loc 1 3178 0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              		@ link register save eliminated.
 2382              	.LVL165:
3179:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3180:Generated_Source\PSoC4/CyLib.c **** 
3181:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2383              		.loc 1 3181 0
 2384 0000 0549     		ldr	r1, .L187
 2385 0002 0A68     		ldr	r2, [r1]
 2386 0004 054B     		ldr	r3, .L187+4
 2387 0006 1A40     		ands	r2, r3
 2388              	.LVL166:
3182:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2389              		.loc 1 3182 0
 2390 0008 4004     		lsls	r0, r0, #17
 2391              	.LVL167:
 2392 000a C023     		movs	r3, #192
 2393 000c DB02     		lsls	r3, r3, #11
 2394 000e 1840     		ands	r0, r3
 2395 0010 1043     		orrs	r0, r2
 2396              	.LVL168:
3183:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2397              		.loc 1 3183 0
 2398 0012 0860     		str	r0, [r1]
3184:Generated_Source\PSoC4/CyLib.c ****     }
 2399              		.loc 1 3184 0
 2400              		@ sp needed
 2401 0014 7047     		bx	lr
 2402              	.L188:
 2403 0016 C046     		.align	2
 2404              	.L187:
 2405 0018 30001040 		.word	1074790448
 2406 001c FFFFF9FF 		.word	-393217
 2407              		.cfi_endproc
 2408              	.LFE54:
 2409              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2410              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2411              		.align	2
 2412              		.global	CySysSetDmacAccessArbPriority
 2413              		.code	16
 2414              		.thumb_func
 2415              		.type	CySysSetDmacAccessArbPriority, %function
 2416              	CySysSetDmacAccessArbPriority:
 2417              	.LFB55:
3185:Generated_Source\PSoC4/CyLib.c **** 
3186:Generated_Source\PSoC4/CyLib.c **** 
3187:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3188:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3189:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3190:Generated_Source\PSoC4/CyLib.c ****     *
3191:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3192:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3193:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3194:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 102


3195:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3196:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3197:Generated_Source\PSoC4/CyLib.c ****     *
3198:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3199:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3200:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3201:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3202:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3203:Generated_Source\PSoC4/CyLib.c ****     *
3204:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3205:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3206:Generated_Source\PSoC4/CyLib.c ****     {
 2418              		.loc 1 3206 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 2422              		@ link register save eliminated.
 2423              	.LVL169:
3207:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3208:Generated_Source\PSoC4/CyLib.c **** 
3209:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2424              		.loc 1 3209 0
 2425 0000 0549     		ldr	r1, .L190
 2426 0002 0A68     		ldr	r2, [r1]
 2427 0004 054B     		ldr	r3, .L190+4
 2428 0006 1A40     		ands	r2, r3
 2429              	.LVL170:
3210:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2430              		.loc 1 3210 0
 2431 0008 4004     		lsls	r0, r0, #17
 2432              	.LVL171:
 2433 000a C023     		movs	r3, #192
 2434 000c DB02     		lsls	r3, r3, #11
 2435 000e 1840     		ands	r0, r3
 2436 0010 1043     		orrs	r0, r2
 2437              	.LVL172:
3211:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2438              		.loc 1 3211 0
 2439 0012 0860     		str	r0, [r1]
3212:Generated_Source\PSoC4/CyLib.c ****     }
 2440              		.loc 1 3212 0
 2441              		@ sp needed
 2442 0014 7047     		bx	lr
 2443              	.L191:
 2444 0016 C046     		.align	2
 2445              	.L190:
 2446 0018 3C001040 		.word	1074790460
 2447 001c FFFFF9FF 		.word	-393217
 2448              		.cfi_endproc
 2449              	.LFE55:
 2450              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2451              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2452              		.align	2
 2453              		.global	CySysSetPeripheralAccessArbPriority
 2454              		.code	16
 2455              		.thumb_func
 2456              		.type	CySysSetPeripheralAccessArbPriority, %function
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 103


 2457              	CySysSetPeripheralAccessArbPriority:
 2458              	.LFB56:
3213:Generated_Source\PSoC4/CyLib.c **** 
3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3216:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3217:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3218:Generated_Source\PSoC4/CyLib.c ****     *
3219:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3220:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3221:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3222:Generated_Source\PSoC4/CyLib.c ****     *
3223:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3224:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3225:Generated_Source\PSoC4/CyLib.c ****     *
3226:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3227:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3228:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3229:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3230:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3231:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3232:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3233:Generated_Source\PSoC4/CyLib.c ****     *
3234:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3235:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3236:Generated_Source\PSoC4/CyLib.c ****     {
 2459              		.loc 1 3236 0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
 2463              	.LVL173:
 2464 0000 10B5     		push	{r4, lr}
 2465              		.cfi_def_cfa_offset 8
 2466              		.cfi_offset 4, -8
 2467              		.cfi_offset 14, -4
3237:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3238:Generated_Source\PSoC4/CyLib.c **** 
3239:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2468              		.loc 1 3239 0
 2469 0002 0028     		cmp	r0, #0
 2470 0004 0AD1     		bne	.L193
3240:Generated_Source\PSoC4/CyLib.c ****         {
3241:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2471              		.loc 1 3241 0
 2472 0006 1448     		ldr	r0, .L197
 2473              	.LVL174:
 2474 0008 0268     		ldr	r2, [r0]
 2475 000a 144B     		ldr	r3, .L197+4
 2476 000c 1A40     		ands	r2, r3
 2477              	.LVL175:
3242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2478              		.loc 1 3242 0
 2479 000e 4904     		lsls	r1, r1, #17
 2480              	.LVL176:
 2481 0010 C023     		movs	r3, #192
 2482 0012 DB02     		lsls	r3, r3, #11
 2483 0014 1940     		ands	r1, r3
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 104


 2484 0016 1143     		orrs	r1, r2
 2485              	.LVL177:
3243:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2486              		.loc 1 3243 0
 2487 0018 0160     		str	r1, [r0]
 2488 001a 1CE0     		b	.L192
 2489              	.LVL178:
 2490              	.L193:
3244:Generated_Source\PSoC4/CyLib.c ****         } else
3245:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3246:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2491              		.loc 1 3246 0
 2492 001c 0128     		cmp	r0, #1
 2493 001e 0AD1     		bne	.L195
3247:Generated_Source\PSoC4/CyLib.c ****         {
3248:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2494              		.loc 1 3248 0
 2495 0020 0F48     		ldr	r0, .L197+8
 2496              	.LVL179:
 2497 0022 0268     		ldr	r2, [r0]
 2498 0024 0D4B     		ldr	r3, .L197+4
 2499 0026 1A40     		ands	r2, r3
 2500              	.LVL180:
3249:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2501              		.loc 1 3249 0
 2502 0028 4904     		lsls	r1, r1, #17
 2503              	.LVL181:
 2504 002a C023     		movs	r3, #192
 2505 002c DB02     		lsls	r3, r3, #11
 2506 002e 1940     		ands	r1, r3
 2507 0030 1143     		orrs	r1, r2
 2508              	.LVL182:
3250:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2509              		.loc 1 3250 0
 2510 0032 0160     		str	r1, [r0]
 2511 0034 0FE0     		b	.L192
 2512              	.LVL183:
 2513              	.L195:
3251:Generated_Source\PSoC4/CyLib.c ****         } else
3252:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3253:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3254:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2514              		.loc 1 3254 0
 2515 0036 0228     		cmp	r0, #2
 2516 0038 0AD1     		bne	.L196
3255:Generated_Source\PSoC4/CyLib.c ****         {
3256:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2517              		.loc 1 3256 0
 2518 003a 0A48     		ldr	r0, .L197+12
 2519              	.LVL184:
 2520 003c 0268     		ldr	r2, [r0]
 2521 003e 074B     		ldr	r3, .L197+4
 2522 0040 1A40     		ands	r2, r3
 2523              	.LVL185:
3257:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2524              		.loc 1 3257 0
 2525 0042 4904     		lsls	r1, r1, #17
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 105


 2526              	.LVL186:
 2527 0044 C023     		movs	r3, #192
 2528 0046 DB02     		lsls	r3, r3, #11
 2529 0048 1940     		ands	r1, r3
 2530 004a 1143     		orrs	r1, r2
 2531              	.LVL187:
3258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2532              		.loc 1 3258 0
 2533 004c 0160     		str	r1, [r0]
 2534 004e 02E0     		b	.L192
 2535              	.LVL188:
 2536              	.L196:
3259:Generated_Source\PSoC4/CyLib.c ****         } else
3260:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3261:Generated_Source\PSoC4/CyLib.c ****         {
3262:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3263:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2537              		.loc 1 3263 0 discriminator 1
 2538 0050 0020     		movs	r0, #0
 2539              	.LVL189:
 2540 0052 FFF7FEFF 		bl	CyHalt
 2541              	.LVL190:
 2542              	.L192:
3264:Generated_Source\PSoC4/CyLib.c ****         }
3265:Generated_Source\PSoC4/CyLib.c ****     }
 2543              		.loc 1 3265 0
 2544              		@ sp needed
 2545 0056 10BD     		pop	{r4, pc}
 2546              	.L198:
 2547              		.align	2
 2548              	.L197:
 2549 0058 00011040 		.word	1074790656
 2550 005c FFFFF9FF 		.word	-393217
 2551 0060 04011040 		.word	1074790660
 2552 0064 08011040 		.word	1074790664
 2553              		.cfi_endproc
 2554              	.LFE56:
 2555              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2556              		.global	CySysClkPumpConfig
 2557              		.global	cyImoFreqMhz2Reg
 2558              		.global	CySysTickInitVar
 2559              		.global	cydelay32kMs
 2560              		.global	cydelayFreqMhz
 2561              		.global	cydelayFreqKhz
 2562              		.global	cydelayFreqHz
 2563              		.section	.rodata
 2564              		.align	2
 2565              		.set	.LANCHOR1,. + 0
 2566              		.type	cyImoFreqMhz2Reg, %object
 2567              		.size	cyImoFreqMhz2Reg, 46
 2568              	cyImoFreqMhz2Reg:
 2569 0000 03       		.byte	3
 2570 0001 04       		.byte	4
 2571 0002 05       		.byte	5
 2572 0003 06       		.byte	6
 2573 0004 07       		.byte	7
 2574 0005 08       		.byte	8
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 106


 2575 0006 09       		.byte	9
 2576 0007 0A       		.byte	10
 2577 0008 0B       		.byte	11
 2578 0009 0C       		.byte	12
 2579 000a 0E       		.byte	14
 2580 000b 0F       		.byte	15
 2581 000c 10       		.byte	16
 2582 000d 11       		.byte	17
 2583 000e 12       		.byte	18
 2584 000f 13       		.byte	19
 2585 0010 14       		.byte	20
 2586 0011 15       		.byte	21
 2587 0012 16       		.byte	22
 2588 0013 17       		.byte	23
 2589 0014 18       		.byte	24
 2590 0015 19       		.byte	25
 2591 0016 1B       		.byte	27
 2592 0017 1C       		.byte	28
 2593 0018 1D       		.byte	29
 2594 0019 1E       		.byte	30
 2595 001a 1F       		.byte	31
 2596 001b 20       		.byte	32
 2597 001c 21       		.byte	33
 2598 001d 22       		.byte	34
 2599 001e 23       		.byte	35
 2600 001f 25       		.byte	37
 2601 0020 26       		.byte	38
 2602 0021 27       		.byte	39
 2603 0022 28       		.byte	40
 2604 0023 29       		.byte	41
 2605 0024 2A       		.byte	42
 2606 0025 2B       		.byte	43
 2607 0026 2E       		.byte	46
 2608 0027 2F       		.byte	47
 2609 0028 30       		.byte	48
 2610 0029 31       		.byte	49
 2611 002a 32       		.byte	50
 2612 002b 33       		.byte	51
 2613 002c 34       		.byte	52
 2614 002d 35       		.byte	53
 2615              		.data
 2616              		.align	2
 2617              		.set	.LANCHOR0,. + 0
 2618              		.type	CySysClkPumpConfig, %object
 2619              		.size	CySysClkPumpConfig, 4
 2620              	CySysClkPumpConfig:
 2621 0000 01000000 		.word	1
 2622              		.type	cydelay32kMs, %object
 2623              		.size	cydelay32kMs, 4
 2624              	cydelay32kMs:
 2625 0004 0000C05D 		.word	1572864000
 2626              		.type	cydelayFreqKhz, %object
 2627              		.size	cydelayFreqKhz, 4
 2628              	cydelayFreqKhz:
 2629 0008 80BB0000 		.word	48000
 2630              		.type	cydelayFreqMhz, %object
 2631              		.size	cydelayFreqMhz, 1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 107


 2632              	cydelayFreqMhz:
 2633 000c 30       		.byte	48
 2634 000d 000000   		.space	3
 2635              		.type	cydelayFreqHz, %object
 2636              		.size	cydelayFreqHz, 4
 2637              	cydelayFreqHz:
 2638 0010 006CDC02 		.word	48000000
 2639              		.bss
 2640              		.align	2
 2641              		.set	.LANCHOR2,. + 0
 2642              		.type	CySysTickCallbacks, %object
 2643              		.size	CySysTickCallbacks, 20
 2644              	CySysTickCallbacks:
 2645 0000 00000000 		.space	20
 2645      00000000 
 2645      00000000 
 2645      00000000 
 2645      00000000 
 2646              		.type	CySysTickInitVar, %object
 2647              		.size	CySysTickInitVar, 4
 2648              	CySysTickInitVar:
 2649 0014 00000000 		.space	4
 2650              		.text
 2651              	.Letext0:
 2652              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2653              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2654              		.section	.debug_info,"",%progbits
 2655              	.Ldebug_info0:
 2656 0000 270D0000 		.4byte	0xd27
 2657 0004 0400     		.2byte	0x4
 2658 0006 00000000 		.4byte	.Ldebug_abbrev0
 2659 000a 04       		.byte	0x4
 2660 000b 01       		.uleb128 0x1
 2661 000c 84000000 		.4byte	.LASF121
 2662 0010 0C       		.byte	0xc
 2663 0011 83070000 		.4byte	.LASF122
 2664 0015 BD060000 		.4byte	.LASF123
 2665 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2666 001d 00000000 		.4byte	0
 2667 0021 00000000 		.4byte	.Ldebug_line0
 2668 0025 02       		.uleb128 0x2
 2669 0026 01       		.byte	0x1
 2670 0027 06       		.byte	0x6
 2671 0028 9C010000 		.4byte	.LASF0
 2672 002c 02       		.uleb128 0x2
 2673 002d 01       		.byte	0x1
 2674 002e 08       		.byte	0x8
 2675 002f 98050000 		.4byte	.LASF1
 2676 0033 02       		.uleb128 0x2
 2677 0034 02       		.byte	0x2
 2678 0035 05       		.byte	0x5
 2679 0036 A6050000 		.4byte	.LASF2
 2680 003a 02       		.uleb128 0x2
 2681 003b 02       		.byte	0x2
 2682 003c 07       		.byte	0x7
 2683 003d 76030000 		.4byte	.LASF3
 2684 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 108


 2685 0042 04       		.byte	0x4
 2686 0043 05       		.byte	0x5
 2687 0044 DB010000 		.4byte	.LASF4
 2688 0048 02       		.uleb128 0x2
 2689 0049 04       		.byte	0x4
 2690 004a 07       		.byte	0x7
 2691 004b FE020000 		.4byte	.LASF5
 2692 004f 02       		.uleb128 0x2
 2693 0050 08       		.byte	0x8
 2694 0051 05       		.byte	0x5
 2695 0052 8E010000 		.4byte	.LASF6
 2696 0056 02       		.uleb128 0x2
 2697 0057 08       		.byte	0x8
 2698 0058 07       		.byte	0x7
 2699 0059 12010000 		.4byte	.LASF7
 2700 005d 03       		.uleb128 0x3
 2701 005e 04       		.byte	0x4
 2702 005f 05       		.byte	0x5
 2703 0060 696E7400 		.ascii	"int\000"
 2704 0064 02       		.uleb128 0x2
 2705 0065 04       		.byte	0x4
 2706 0066 07       		.byte	0x7
 2707 0067 E2020000 		.4byte	.LASF8
 2708 006b 04       		.uleb128 0x4
 2709 006c 06020000 		.4byte	.LASF9
 2710 0070 02       		.byte	0x2
 2711 0071 E401     		.2byte	0x1e4
 2712 0073 2C000000 		.4byte	0x2c
 2713 0077 04       		.uleb128 0x4
 2714 0078 17000000 		.4byte	.LASF10
 2715 007c 02       		.byte	0x2
 2716 007d E501     		.2byte	0x1e5
 2717 007f 3A000000 		.4byte	0x3a
 2718 0083 04       		.uleb128 0x4
 2719 0084 46020000 		.4byte	.LASF11
 2720 0088 02       		.byte	0x2
 2721 0089 E601     		.2byte	0x1e6
 2722 008b 48000000 		.4byte	0x48
 2723 008f 02       		.uleb128 0x2
 2724 0090 04       		.byte	0x4
 2725 0091 04       		.byte	0x4
 2726 0092 FE040000 		.4byte	.LASF12
 2727 0096 02       		.uleb128 0x2
 2728 0097 08       		.byte	0x8
 2729 0098 04       		.byte	0x4
 2730 0099 22020000 		.4byte	.LASF13
 2731 009d 02       		.uleb128 0x2
 2732 009e 01       		.byte	0x1
 2733 009f 08       		.byte	0x8
 2734 00a0 FA050000 		.4byte	.LASF14
 2735 00a4 04       		.uleb128 0x4
 2736 00a5 58070000 		.4byte	.LASF15
 2737 00a9 02       		.byte	0x2
 2738 00aa 8602     		.2byte	0x286
 2739 00ac 48000000 		.4byte	0x48
 2740 00b0 04       		.uleb128 0x4
 2741 00b1 65050000 		.4byte	.LASF16
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 109


 2742 00b5 02       		.byte	0x2
 2743 00b6 8E02     		.2byte	0x28e
 2744 00b8 BC000000 		.4byte	0xbc
 2745 00bc 05       		.uleb128 0x5
 2746 00bd 6B000000 		.4byte	0x6b
 2747 00c1 04       		.uleb128 0x4
 2748 00c2 22040000 		.4byte	.LASF17
 2749 00c6 02       		.byte	0x2
 2750 00c7 9002     		.2byte	0x290
 2751 00c9 CD000000 		.4byte	0xcd
 2752 00cd 05       		.uleb128 0x5
 2753 00ce 83000000 		.4byte	0x83
 2754 00d2 04       		.uleb128 0x4
 2755 00d3 FF050000 		.4byte	.LASF18
 2756 00d7 02       		.byte	0x2
 2757 00d8 A002     		.2byte	0x2a0
 2758 00da DE000000 		.4byte	0xde
 2759 00de 06       		.uleb128 0x6
 2760 00df 04       		.byte	0x4
 2761 00e0 E4000000 		.4byte	0xe4
 2762 00e4 07       		.uleb128 0x7
 2763 00e5 02       		.uleb128 0x2
 2764 00e6 08       		.byte	0x8
 2765 00e7 04       		.byte	0x4
 2766 00e8 8A040000 		.4byte	.LASF19
 2767 00ec 02       		.uleb128 0x2
 2768 00ed 04       		.byte	0x4
 2769 00ee 07       		.byte	0x7
 2770 00ef 4B040000 		.4byte	.LASF20
 2771 00f3 08       		.uleb128 0x8
 2772 00f4 29050000 		.4byte	.LASF21
 2773 00f8 03       		.byte	0x3
 2774 00f9 F5       		.byte	0xf5
 2775 00fa DE000000 		.4byte	0xde
 2776 00fe 09       		.uleb128 0x9
 2777 00ff 61070000 		.4byte	.LASF22
 2778 0103 01       		.byte	0x1
 2779 0104 6C       		.byte	0x6c
 2780 0105 00000000 		.4byte	.LFB2
 2781 0109 14000000 		.4byte	.LFE2-.LFB2
 2782 010d 01       		.uleb128 0x1
 2783 010e 9C       		.byte	0x9c
 2784 010f 09       		.uleb128 0x9
 2785 0110 2B030000 		.4byte	.LASF23
 2786 0114 01       		.byte	0x1
 2787 0115 8C       		.byte	0x8c
 2788 0116 00000000 		.4byte	.LFB3
 2789 011a 10000000 		.4byte	.LFE3-.LFB3
 2790 011e 01       		.uleb128 0x1
 2791 011f 9C       		.byte	0x9c
 2792 0120 0A       		.uleb128 0xa
 2793 0121 27000000 		.4byte	.LASF26
 2794 0125 01       		.byte	0x1
 2795 0126 0102     		.2byte	0x201
 2796 0128 00000000 		.4byte	.LFB4
 2797 012c 20000000 		.4byte	.LFE4-.LFB4
 2798 0130 01       		.uleb128 0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 110


 2799 0131 9C       		.byte	0x9c
 2800 0132 79010000 		.4byte	0x179
 2801 0136 0B       		.uleb128 0xb
 2802 0137 CE050000 		.4byte	.LASF28
 2803 013b 01       		.byte	0x1
 2804 013c 0102     		.2byte	0x201
 2805 013e 83000000 		.4byte	0x83
 2806 0142 00000000 		.4byte	.LLST0
 2807 0146 0C       		.uleb128 0xc
 2808 0147 B9010000 		.4byte	.LASF24
 2809 014b 01       		.byte	0x1
 2810 014c 0302     		.2byte	0x203
 2811 014e 6B000000 		.4byte	0x6b
 2812 0152 2C000000 		.4byte	.LLST1
 2813 0156 0C       		.uleb128 0xc
 2814 0157 AF070000 		.4byte	.LASF25
 2815 015b 01       		.byte	0x1
 2816 015c 0402     		.2byte	0x204
 2817 015e 83000000 		.4byte	0x83
 2818 0162 3F000000 		.4byte	.LLST2
 2819 0166 0D       		.uleb128 0xd
 2820 0167 08000000 		.4byte	.LVL1
 2821 016b 090D0000 		.4byte	0xd09
 2822 016f 0D       		.uleb128 0xd
 2823 0170 1A000000 		.4byte	.LVL5
 2824 0174 140D0000 		.4byte	0xd14
 2825 0178 00       		.byte	0
 2826 0179 0A       		.uleb128 0xa
 2827 017a 0D040000 		.4byte	.LASF27
 2828 017e 01       		.byte	0x1
 2829 017f 4902     		.2byte	0x249
 2830 0181 00000000 		.4byte	.LFB5
 2831 0185 38000000 		.4byte	.LFE5-.LFB5
 2832 0189 01       		.uleb128 0x1
 2833 018a 9C       		.byte	0x9c
 2834 018b 9E010000 		.4byte	0x19e
 2835 018f 0E       		.uleb128 0xe
 2836 0190 1B020000 		.4byte	.LASF29
 2837 0194 01       		.byte	0x1
 2838 0195 4902     		.2byte	0x249
 2839 0197 83000000 		.4byte	0x83
 2840 019b 01       		.uleb128 0x1
 2841 019c 50       		.byte	0x50
 2842 019d 00       		.byte	0
 2843 019e 0F       		.uleb128 0xf
 2844 019f 68020000 		.4byte	.LASF34
 2845 01a3 01       		.byte	0x1
 2846 01a4 6E02     		.2byte	0x26e
 2847 01a6 83000000 		.4byte	0x83
 2848 01aa 00000000 		.4byte	.LFB6
 2849 01ae 1C000000 		.4byte	.LFE6-.LFB6
 2850 01b2 01       		.uleb128 0x1
 2851 01b3 9C       		.byte	0x9c
 2852 01b4 EB010000 		.4byte	0x1eb
 2853 01b8 0C       		.uleb128 0xc
 2854 01b9 B9010000 		.4byte	.LASF24
 2855 01bd 01       		.byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 111


 2856 01be 7002     		.2byte	0x270
 2857 01c0 6B000000 		.4byte	0x6b
 2858 01c4 5D000000 		.4byte	.LLST3
 2859 01c8 0C       		.uleb128 0xc
 2860 01c9 A6040000 		.4byte	.LASF30
 2861 01cd 01       		.byte	0x1
 2862 01ce 7102     		.2byte	0x271
 2863 01d0 83000000 		.4byte	0x83
 2864 01d4 70000000 		.4byte	.LLST4
 2865 01d8 0D       		.uleb128 0xd
 2866 01d9 06000000 		.4byte	.LVL8
 2867 01dd 090D0000 		.4byte	0xd09
 2868 01e1 0D       		.uleb128 0xd
 2869 01e2 12000000 		.4byte	.LVL10
 2870 01e6 140D0000 		.4byte	0xd14
 2871 01ea 00       		.byte	0
 2872 01eb 0A       		.uleb128 0xa
 2873 01ec 1C060000 		.4byte	.LASF31
 2874 01f0 01       		.byte	0x1
 2875 01f1 AB02     		.2byte	0x2ab
 2876 01f3 00000000 		.4byte	.LFB7
 2877 01f7 30000000 		.4byte	.LFE7-.LFB7
 2878 01fb 01       		.uleb128 0x1
 2879 01fc 9C       		.byte	0x9c
 2880 01fd 34020000 		.4byte	0x234
 2881 0201 0B       		.uleb128 0xb
 2882 0202 3C070000 		.4byte	.LASF32
 2883 0206 01       		.byte	0x1
 2884 0207 AB02     		.2byte	0x2ab
 2885 0209 83000000 		.4byte	0x83
 2886 020d 8E000000 		.4byte	.LLST5
 2887 0211 0C       		.uleb128 0xc
 2888 0212 B9010000 		.4byte	.LASF24
 2889 0216 01       		.byte	0x1
 2890 0217 AD02     		.2byte	0x2ad
 2891 0219 6B000000 		.4byte	0x6b
 2892 021d BA000000 		.4byte	.LLST6
 2893 0221 0D       		.uleb128 0xd
 2894 0222 08000000 		.4byte	.LVL13
 2895 0226 090D0000 		.4byte	0xd09
 2896 022a 0D       		.uleb128 0xd
 2897 022b 24000000 		.4byte	.LVL15
 2898 022f 140D0000 		.4byte	0xd14
 2899 0233 00       		.byte	0
 2900 0234 10       		.uleb128 0x10
 2901 0235 F6060000 		.4byte	.LASF33
 2902 0239 01       		.byte	0x1
 2903 023a F304     		.2byte	0x4f3
 2904 023c 00000000 		.4byte	.LFB10
 2905 0240 24000000 		.4byte	.LFE10-.LFB10
 2906 0244 01       		.uleb128 0x1
 2907 0245 9C       		.byte	0x9c
 2908 0246 0F       		.uleb128 0xf
 2909 0247 4D020000 		.4byte	.LASF35
 2910 024b 01       		.byte	0x1
 2911 024c 1505     		.2byte	0x515
 2912 024e 83000000 		.4byte	0x83
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 112


 2913 0252 00000000 		.4byte	.LFB11
 2914 0256 10000000 		.4byte	.LFE11-.LFB11
 2915 025a 01       		.uleb128 0x1
 2916 025b 9C       		.byte	0x9c
 2917 025c 6F020000 		.4byte	0x26f
 2918 0260 11       		.uleb128 0x11
 2919 0261 E3070000 		.4byte	.LASF36
 2920 0265 01       		.byte	0x1
 2921 0266 1705     		.2byte	0x517
 2922 0268 83000000 		.4byte	0x83
 2923 026c 01       		.uleb128 0x1
 2924 026d 50       		.byte	0x50
 2925 026e 00       		.byte	0
 2926 026f 10       		.uleb128 0x10
 2927 0270 9E060000 		.4byte	.LASF37
 2928 0274 01       		.byte	0x1
 2929 0275 DE08     		.2byte	0x8de
 2930 0277 00000000 		.4byte	.LFB14
 2931 027b 20000000 		.4byte	.LFE14-.LFB14
 2932 027f 01       		.uleb128 0x1
 2933 0280 9C       		.byte	0x9c
 2934 0281 12       		.uleb128 0x12
 2935 0282 10030000 		.4byte	.LASF87
 2936 0286 01       		.byte	0x1
 2937 0287 F008     		.2byte	0x8f0
 2938 0289 83000000 		.4byte	0x83
 2939 028d 00000000 		.4byte	.LFB15
 2940 0291 10000000 		.4byte	.LFE15-.LFB15
 2941 0295 01       		.uleb128 0x1
 2942 0296 9C       		.byte	0x9c
 2943 0297 10       		.uleb128 0x10
 2944 0298 2F020000 		.4byte	.LASF38
 2945 029c 01       		.byte	0x1
 2946 029d 0009     		.2byte	0x900
 2947 029f 00000000 		.4byte	.LFB16
 2948 02a3 0C000000 		.4byte	.LFE16-.LFB16
 2949 02a7 01       		.uleb128 0x1
 2950 02a8 9C       		.byte	0x9c
 2951 02a9 0F       		.uleb128 0xf
 2952 02aa 62030000 		.4byte	.LASF39
 2953 02ae 01       		.byte	0x1
 2954 02af 1A09     		.2byte	0x91a
 2955 02b1 83000000 		.4byte	0x83
 2956 02b5 00000000 		.4byte	.LFB17
 2957 02b9 14000000 		.4byte	.LFE17-.LFB17
 2958 02bd 01       		.uleb128 0x1
 2959 02be 9C       		.byte	0x9c
 2960 02bf E2020000 		.4byte	0x2e2
 2961 02c3 0B       		.uleb128 0xb
 2962 02c4 F3050000 		.4byte	.LASF40
 2963 02c8 01       		.byte	0x1
 2964 02c9 1A09     		.2byte	0x91a
 2965 02cb 83000000 		.4byte	0x83
 2966 02cf CD000000 		.4byte	.LLST7
 2967 02d3 11       		.uleb128 0x11
 2968 02d4 37040000 		.4byte	.LASF41
 2969 02d8 01       		.byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 113


 2970 02d9 1C09     		.2byte	0x91c
 2971 02db 83000000 		.4byte	0x83
 2972 02df 01       		.uleb128 0x1
 2973 02e0 50       		.byte	0x50
 2974 02e1 00       		.byte	0
 2975 02e2 0F       		.uleb128 0xf
 2976 02e3 61000000 		.4byte	.LASF42
 2977 02e7 01       		.byte	0x1
 2978 02e8 3109     		.2byte	0x931
 2979 02ea 83000000 		.4byte	0x83
 2980 02ee 00000000 		.4byte	.LFB18
 2981 02f2 10000000 		.4byte	.LFE18-.LFB18
 2982 02f6 01       		.uleb128 0x1
 2983 02f7 9C       		.byte	0x9c
 2984 02f8 0B030000 		.4byte	0x30b
 2985 02fc 11       		.uleb128 0x11
 2986 02fd 1E000000 		.4byte	.LASF43
 2987 0301 01       		.byte	0x1
 2988 0302 3309     		.2byte	0x933
 2989 0304 83000000 		.4byte	0x83
 2990 0308 01       		.uleb128 0x1
 2991 0309 50       		.byte	0x50
 2992 030a 00       		.byte	0
 2993 030b 0A       		.uleb128 0xa
 2994 030c 3A010000 		.4byte	.LASF44
 2995 0310 01       		.byte	0x1
 2996 0311 4809     		.2byte	0x948
 2997 0313 00000000 		.4byte	.LFB19
 2998 0317 0C000000 		.4byte	.LFE19-.LFB19
 2999 031b 01       		.uleb128 0x1
 3000 031c 9C       		.byte	0x9c
 3001 031d 30030000 		.4byte	0x330
 3002 0321 0E       		.uleb128 0xe
 3003 0322 63020000 		.4byte	.LASF45
 3004 0326 01       		.byte	0x1
 3005 0327 4809     		.2byte	0x948
 3006 0329 83000000 		.4byte	0x83
 3007 032d 01       		.uleb128 0x1
 3008 032e 50       		.byte	0x50
 3009 032f 00       		.byte	0
 3010 0330 0A       		.uleb128 0xa
 3011 0331 B0050000 		.4byte	.LASF46
 3012 0335 01       		.byte	0x1
 3013 0336 FF09     		.2byte	0x9ff
 3014 0338 00000000 		.4byte	.LFB26
 3015 033c 14000000 		.4byte	.LFE26-.LFB26
 3016 0340 01       		.uleb128 0x1
 3017 0341 9C       		.byte	0x9c
 3018 0342 57030000 		.4byte	0x357
 3019 0346 0B       		.uleb128 0xb
 3020 0347 B7030000 		.4byte	.LASF47
 3021 034b 01       		.byte	0x1
 3022 034c FF09     		.2byte	0x9ff
 3023 034e 6B000000 		.4byte	0x6b
 3024 0352 EB000000 		.4byte	.LLST8
 3025 0356 00       		.byte	0
 3026 0357 0F       		.uleb128 0xf
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 114


 3027 0358 80010000 		.4byte	.LASF48
 3028 035c 01       		.byte	0x1
 3029 035d 110A     		.2byte	0xa11
 3030 035f 6B000000 		.4byte	0x6b
 3031 0363 00000000 		.4byte	.LFB27
 3032 0367 18000000 		.4byte	.LFE27-.LFB27
 3033 036b 01       		.uleb128 0x1
 3034 036c 9C       		.byte	0x9c
 3035 036d 82030000 		.4byte	0x382
 3036 0371 0B       		.uleb128 0xb
 3037 0372 B7030000 		.4byte	.LASF47
 3038 0376 01       		.byte	0x1
 3039 0377 110A     		.2byte	0xa11
 3040 0379 6B000000 		.4byte	0x6b
 3041 037d 0C010000 		.4byte	.LLST9
 3042 0381 00       		.byte	0
 3043 0382 0A       		.uleb128 0xa
 3044 0383 E4010000 		.4byte	.LASF49
 3045 0387 01       		.byte	0x1
 3046 0388 210A     		.2byte	0xa21
 3047 038a 00000000 		.4byte	.LFB28
 3048 038e 14000000 		.4byte	.LFE28-.LFB28
 3049 0392 01       		.uleb128 0x1
 3050 0393 9C       		.byte	0x9c
 3051 0394 A9030000 		.4byte	0x3a9
 3052 0398 0B       		.uleb128 0xb
 3053 0399 B7030000 		.4byte	.LASF47
 3054 039d 01       		.byte	0x1
 3055 039e 210A     		.2byte	0xa21
 3056 03a0 6B000000 		.4byte	0x6b
 3057 03a4 2D010000 		.4byte	.LLST10
 3058 03a8 00       		.byte	0
 3059 03a9 0A       		.uleb128 0xa
 3060 03aa 52030000 		.4byte	.LASF50
 3061 03ae 01       		.byte	0x1
 3062 03af 2F0A     		.2byte	0xa2f
 3063 03b1 00000000 		.4byte	.LFB29
 3064 03b5 14000000 		.4byte	.LFE29-.LFB29
 3065 03b9 01       		.uleb128 0x1
 3066 03ba 9C       		.byte	0x9c
 3067 03bb D0030000 		.4byte	0x3d0
 3068 03bf 0B       		.uleb128 0xb
 3069 03c0 B7030000 		.4byte	.LASF47
 3070 03c4 01       		.byte	0x1
 3071 03c5 2F0A     		.2byte	0xa2f
 3072 03c7 6B000000 		.4byte	0x6b
 3073 03cb 4E010000 		.4byte	.LLST11
 3074 03cf 00       		.byte	0
 3075 03d0 0A       		.uleb128 0xa
 3076 03d1 78040000 		.4byte	.LASF51
 3077 03d5 01       		.byte	0x1
 3078 03d6 3E0A     		.2byte	0xa3e
 3079 03d8 00000000 		.4byte	.LFB30
 3080 03dc 14000000 		.4byte	.LFE30-.LFB30
 3081 03e0 01       		.uleb128 0x1
 3082 03e1 9C       		.byte	0x9c
 3083 03e2 F7030000 		.4byte	0x3f7
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 115


 3084 03e6 0B       		.uleb128 0xb
 3085 03e7 B7030000 		.4byte	.LASF47
 3086 03eb 01       		.byte	0x1
 3087 03ec 3E0A     		.2byte	0xa3e
 3088 03ee 6B000000 		.4byte	0x6b
 3089 03f2 6F010000 		.4byte	.LLST12
 3090 03f6 00       		.byte	0
 3091 03f7 0A       		.uleb128 0xa
 3092 03f8 74050000 		.4byte	.LASF52
 3093 03fc 01       		.byte	0x1
 3094 03fd 4D0A     		.2byte	0xa4d
 3095 03ff 00000000 		.4byte	.LFB31
 3096 0403 04000000 		.4byte	.LFE31-.LFB31
 3097 0407 01       		.uleb128 0x1
 3098 0408 9C       		.byte	0x9c
 3099 0409 1C040000 		.4byte	0x41c
 3100 040d 0E       		.uleb128 0xe
 3101 040e F3050000 		.4byte	.LASF40
 3102 0412 01       		.byte	0x1
 3103 0413 4D0A     		.2byte	0xa4d
 3104 0415 6B000000 		.4byte	0x6b
 3105 0419 01       		.uleb128 0x1
 3106 041a 50       		.byte	0x50
 3107 041b 00       		.byte	0
 3108 041c 0A       		.uleb128 0xa
 3109 041d 44070000 		.4byte	.LASF53
 3110 0421 01       		.byte	0x1
 3111 0422 4405     		.2byte	0x544
 3112 0424 00000000 		.4byte	.LFB12
 3113 0428 38000000 		.4byte	.LFE12-.LFB12
 3114 042c 01       		.uleb128 0x1
 3115 042d 9C       		.byte	0x9c
 3116 042e 74040000 		.4byte	0x474
 3117 0432 0B       		.uleb128 0xb
 3118 0433 3C070000 		.4byte	.LASF32
 3119 0437 01       		.byte	0x1
 3120 0438 4405     		.2byte	0x544
 3121 043a 83000000 		.4byte	0x83
 3122 043e 90010000 		.4byte	.LLST13
 3123 0442 0C       		.uleb128 0xc
 3124 0443 B9010000 		.4byte	.LASF24
 3125 0447 01       		.byte	0x1
 3126 0448 4605     		.2byte	0x546
 3127 044a 6B000000 		.4byte	0x6b
 3128 044e E0010000 		.4byte	.LLST14
 3129 0452 0D       		.uleb128 0xd
 3130 0453 14000000 		.4byte	.LVL35
 3131 0457 090D0000 		.4byte	0xd09
 3132 045b 0D       		.uleb128 0xd
 3133 045c 26000000 		.4byte	.LVL37
 3134 0460 140D0000 		.4byte	0xd14
 3135 0464 13       		.uleb128 0x13
 3136 0465 2E000000 		.4byte	.LVL40
 3137 0469 F7030000 		.4byte	0x3f7
 3138 046d 14       		.uleb128 0x14
 3139 046e 01       		.uleb128 0x1
 3140 046f 50       		.byte	0x50
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 116


 3141 0470 01       		.uleb128 0x1
 3142 0471 30       		.byte	0x30
 3143 0472 00       		.byte	0
 3144 0473 00       		.byte	0
 3145 0474 0F       		.uleb128 0xf
 3146 0475 FB030000 		.4byte	.LASF54
 3147 0479 01       		.byte	0x1
 3148 047a 6109     		.2byte	0x961
 3149 047c D2000000 		.4byte	0xd2
 3150 0480 00000000 		.4byte	.LFB20
 3151 0484 20000000 		.4byte	.LFE20-.LFB20
 3152 0488 01       		.uleb128 0x1
 3153 0489 9C       		.byte	0x9c
 3154 048a DC040000 		.4byte	0x4dc
 3155 048e 0B       		.uleb128 0xb
 3156 048f B7030000 		.4byte	.LASF47
 3157 0493 01       		.byte	0x1
 3158 0494 6109     		.2byte	0x961
 3159 0496 6B000000 		.4byte	0x6b
 3160 049a F3010000 		.4byte	.LLST15
 3161 049e 0B       		.uleb128 0xb
 3162 049f 96040000 		.4byte	.LASF55
 3163 04a3 01       		.byte	0x1
 3164 04a4 6109     		.2byte	0x961
 3165 04a6 D2000000 		.4byte	0xd2
 3166 04aa 14020000 		.4byte	.LLST16
 3167 04ae 11       		.uleb128 0x11
 3168 04af 53000000 		.4byte	.LASF56
 3169 04b3 01       		.byte	0x1
 3170 04b4 6309     		.2byte	0x963
 3171 04b6 D2000000 		.4byte	0xd2
 3172 04ba 01       		.uleb128 0x1
 3173 04bb 50       		.byte	0x50
 3174 04bc 15       		.uleb128 0x15
 3175 04bd 00000000 		.4byte	.LASF57
 3176 04c1 01       		.byte	0x1
 3177 04c2 6409     		.2byte	0x964
 3178 04c4 DC040000 		.4byte	0x4dc
 3179 04c8 00000020 		.4byte	0x20000000
 3180 04cc 13       		.uleb128 0x13
 3181 04cd 10000000 		.4byte	.LVL44
 3182 04d1 F7030000 		.4byte	0x3f7
 3183 04d5 14       		.uleb128 0x14
 3184 04d6 01       		.uleb128 0x1
 3185 04d7 50       		.byte	0x50
 3186 04d8 01       		.uleb128 0x1
 3187 04d9 30       		.byte	0x30
 3188 04da 00       		.byte	0
 3189 04db 00       		.byte	0
 3190 04dc 06       		.uleb128 0x6
 3191 04dd 04       		.byte	0x4
 3192 04de D2000000 		.4byte	0xd2
 3193 04e2 0F       		.uleb128 0xf
 3194 04e3 BC050000 		.4byte	.LASF58
 3195 04e7 01       		.byte	0x1
 3196 04e8 8309     		.2byte	0x983
 3197 04ea D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 117


 3198 04ee 00000000 		.4byte	.LFB21
 3199 04f2 1C000000 		.4byte	.LFE21-.LFB21
 3200 04f6 01       		.uleb128 0x1
 3201 04f7 9C       		.byte	0x9c
 3202 04f8 2C050000 		.4byte	0x52c
 3203 04fc 0B       		.uleb128 0xb
 3204 04fd B7030000 		.4byte	.LASF47
 3205 0501 01       		.byte	0x1
 3206 0502 8309     		.2byte	0x983
 3207 0504 6B000000 		.4byte	0x6b
 3208 0508 40020000 		.4byte	.LLST17
 3209 050c 15       		.uleb128 0x15
 3210 050d 00000000 		.4byte	.LASF57
 3211 0511 01       		.byte	0x1
 3212 0512 8509     		.2byte	0x985
 3213 0514 DC040000 		.4byte	0x4dc
 3214 0518 00000020 		.4byte	0x20000000
 3215 051c 13       		.uleb128 0x13
 3216 051d 0E000000 		.4byte	.LVL50
 3217 0521 F7030000 		.4byte	0x3f7
 3218 0525 14       		.uleb128 0x14
 3219 0526 01       		.uleb128 0x1
 3220 0527 50       		.byte	0x50
 3221 0528 01       		.uleb128 0x1
 3222 0529 30       		.byte	0x30
 3223 052a 00       		.byte	0
 3224 052b 00       		.byte	0
 3225 052c 0F       		.uleb128 0xf
 3226 052d A8030000 		.4byte	.LASF59
 3227 0531 01       		.byte	0x1
 3228 0532 9909     		.2byte	0x999
 3229 0534 D2000000 		.4byte	0xd2
 3230 0538 00000000 		.4byte	.LFB22
 3231 053c 22000000 		.4byte	.LFE22-.LFB22
 3232 0540 01       		.uleb128 0x1
 3233 0541 9C       		.byte	0x9c
 3234 0542 94050000 		.4byte	0x594
 3235 0546 0B       		.uleb128 0xb
 3236 0547 B7030000 		.4byte	.LASF47
 3237 054b 01       		.byte	0x1
 3238 054c 9909     		.2byte	0x999
 3239 054e 6B000000 		.4byte	0x6b
 3240 0552 61020000 		.4byte	.LLST18
 3241 0556 0B       		.uleb128 0xb
 3242 0557 96040000 		.4byte	.LASF55
 3243 055b 01       		.byte	0x1
 3244 055c 9909     		.2byte	0x999
 3245 055e D2000000 		.4byte	0xd2
 3246 0562 82020000 		.4byte	.LLST19
 3247 0566 11       		.uleb128 0x11
 3248 0567 53000000 		.4byte	.LASF56
 3249 056b 01       		.byte	0x1
 3250 056c 9B09     		.2byte	0x99b
 3251 056e D2000000 		.4byte	0xd2
 3252 0572 01       		.uleb128 0x1
 3253 0573 50       		.byte	0x50
 3254 0574 15       		.uleb128 0x15
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 118


 3255 0575 00000000 		.4byte	.LASF57
 3256 0579 01       		.byte	0x1
 3257 057a 9C09     		.2byte	0x99c
 3258 057c DC040000 		.4byte	0x4dc
 3259 0580 00000020 		.4byte	0x20000000
 3260 0584 13       		.uleb128 0x13
 3261 0585 10000000 		.4byte	.LVL54
 3262 0589 F7030000 		.4byte	0x3f7
 3263 058d 14       		.uleb128 0x14
 3264 058e 01       		.uleb128 0x1
 3265 058f 50       		.byte	0x50
 3266 0590 01       		.uleb128 0x1
 3267 0591 30       		.byte	0x30
 3268 0592 00       		.byte	0
 3269 0593 00       		.byte	0
 3270 0594 0F       		.uleb128 0xf
 3271 0595 3B050000 		.4byte	.LASF60
 3272 0599 01       		.byte	0x1
 3273 059a B509     		.2byte	0x9b5
 3274 059c D2000000 		.4byte	0xd2
 3275 05a0 00000000 		.4byte	.LFB23
 3276 05a4 1E000000 		.4byte	.LFE23-.LFB23
 3277 05a8 01       		.uleb128 0x1
 3278 05a9 9C       		.byte	0x9c
 3279 05aa DE050000 		.4byte	0x5de
 3280 05ae 0B       		.uleb128 0xb
 3281 05af B7030000 		.4byte	.LASF47
 3282 05b3 01       		.byte	0x1
 3283 05b4 B509     		.2byte	0x9b5
 3284 05b6 6B000000 		.4byte	0x6b
 3285 05ba AE020000 		.4byte	.LLST20
 3286 05be 15       		.uleb128 0x15
 3287 05bf 00000000 		.4byte	.LASF57
 3288 05c3 01       		.byte	0x1
 3289 05c4 B709     		.2byte	0x9b7
 3290 05c6 DC040000 		.4byte	0x4dc
 3291 05ca 00000020 		.4byte	0x20000000
 3292 05ce 13       		.uleb128 0x13
 3293 05cf 0E000000 		.4byte	.LVL60
 3294 05d3 F7030000 		.4byte	0x3f7
 3295 05d7 14       		.uleb128 0x14
 3296 05d8 01       		.uleb128 0x1
 3297 05d9 50       		.byte	0x50
 3298 05da 01       		.uleb128 0x1
 3299 05db 30       		.byte	0x30
 3300 05dc 00       		.byte	0
 3301 05dd 00       		.byte	0
 3302 05de 0A       		.uleb128 0xa
 3303 05df ED040000 		.4byte	.LASF61
 3304 05e3 01       		.byte	0x1
 3305 05e4 C809     		.2byte	0x9c8
 3306 05e6 00000000 		.4byte	.LFB24
 3307 05ea 4C000000 		.4byte	.LFE24-.LFB24
 3308 05ee 01       		.uleb128 0x1
 3309 05ef 9C       		.byte	0x9c
 3310 05f0 7D060000 		.4byte	0x67d
 3311 05f4 0B       		.uleb128 0xb
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 119


 3312 05f5 B7030000 		.4byte	.LASF47
 3313 05f9 01       		.byte	0x1
 3314 05fa C809     		.2byte	0x9c8
 3315 05fc 6B000000 		.4byte	0x6b
 3316 0600 CF020000 		.4byte	.LLST21
 3317 0604 0B       		.uleb128 0xb
 3318 0605 BE030000 		.4byte	.LASF62
 3319 0609 01       		.byte	0x1
 3320 060a C809     		.2byte	0x9c8
 3321 060c 6B000000 		.4byte	0x6b
 3322 0610 F0020000 		.4byte	.LLST22
 3323 0614 0C       		.uleb128 0xc
 3324 0615 B9010000 		.4byte	.LASF24
 3325 0619 01       		.byte	0x1
 3326 061a CA09     		.2byte	0x9ca
 3327 061c 6B000000 		.4byte	0x6b
 3328 0620 11030000 		.4byte	.LLST23
 3329 0624 0C       		.uleb128 0xc
 3330 0625 29020000 		.4byte	.LASF63
 3331 0629 01       		.byte	0x1
 3332 062a CB09     		.2byte	0x9cb
 3333 062c 83000000 		.4byte	0x83
 3334 0630 24030000 		.4byte	.LLST24
 3335 0634 0C       		.uleb128 0xc
 3336 0635 AC020000 		.4byte	.LASF64
 3337 0639 01       		.byte	0x1
 3338 063a CC09     		.2byte	0x9cc
 3339 063c 83000000 		.4byte	0x83
 3340 0640 37030000 		.4byte	.LLST25
 3341 0644 16       		.uleb128 0x16
 3342 0645 10000000 		.4byte	.LVL63
 3343 0649 F7030000 		.4byte	0x3f7
 3344 064d 57060000 		.4byte	0x657
 3345 0651 14       		.uleb128 0x14
 3346 0652 01       		.uleb128 0x1
 3347 0653 50       		.byte	0x50
 3348 0654 01       		.uleb128 0x1
 3349 0655 30       		.byte	0x30
 3350 0656 00       		.byte	0
 3351 0657 16       		.uleb128 0x16
 3352 0658 1A000000 		.4byte	.LVL64
 3353 065c F7030000 		.4byte	0x3f7
 3354 0660 6A060000 		.4byte	0x66a
 3355 0664 14       		.uleb128 0x14
 3356 0665 01       		.uleb128 0x1
 3357 0666 50       		.byte	0x50
 3358 0667 01       		.uleb128 0x1
 3359 0668 30       		.byte	0x30
 3360 0669 00       		.byte	0
 3361 066a 0D       		.uleb128 0xd
 3362 066b 26000000 		.4byte	.LVL66
 3363 066f 090D0000 		.4byte	0xd09
 3364 0673 0D       		.uleb128 0xd
 3365 0674 46000000 		.4byte	.LVL72
 3366 0678 140D0000 		.4byte	0xd14
 3367 067c 00       		.byte	0
 3368 067d 0F       		.uleb128 0xf
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 120


 3369 067e 80020000 		.4byte	.LASF65
 3370 0682 01       		.byte	0x1
 3371 0683 EA09     		.2byte	0x9ea
 3372 0685 6B000000 		.4byte	0x6b
 3373 0689 00000000 		.4byte	.LFB25
 3374 068d 2C000000 		.4byte	.LFE25-.LFB25
 3375 0691 01       		.uleb128 0x1
 3376 0692 9C       		.byte	0x9c
 3377 0693 C7060000 		.4byte	0x6c7
 3378 0697 0B       		.uleb128 0xb
 3379 0698 B7030000 		.4byte	.LASF47
 3380 069c 01       		.byte	0x1
 3381 069d EA09     		.2byte	0x9ea
 3382 069f 6B000000 		.4byte	0x6b
 3383 06a3 6B030000 		.4byte	.LLST26
 3384 06a7 0C       		.uleb128 0xc
 3385 06a8 BE030000 		.4byte	.LASF62
 3386 06ac 01       		.byte	0x1
 3387 06ad EC09     		.2byte	0x9ec
 3388 06af 6B000000 		.4byte	0x6b
 3389 06b3 8C030000 		.4byte	.LLST27
 3390 06b7 13       		.uleb128 0x13
 3391 06b8 0E000000 		.4byte	.LVL76
 3392 06bc F7030000 		.4byte	0x3f7
 3393 06c0 14       		.uleb128 0x14
 3394 06c1 01       		.uleb128 0x1
 3395 06c2 50       		.byte	0x50
 3396 06c3 01       		.uleb128 0x1
 3397 06c4 30       		.byte	0x30
 3398 06c5 00       		.byte	0
 3399 06c6 00       		.byte	0
 3400 06c7 10       		.uleb128 0x10
 3401 06c8 57010000 		.4byte	.LASF66
 3402 06cc 01       		.byte	0x1
 3403 06cd 650A     		.2byte	0xa65
 3404 06cf 00000000 		.4byte	.LFB32
 3405 06d3 18000000 		.4byte	.LFE32-.LFB32
 3406 06d7 01       		.uleb128 0x1
 3407 06d8 9C       		.byte	0x9c
 3408 06d9 0A       		.uleb128 0xa
 3409 06da 64060000 		.4byte	.LASF67
 3410 06de 01       		.byte	0x1
 3411 06df 790A     		.2byte	0xa79
 3412 06e1 00000000 		.4byte	.LFB33
 3413 06e5 30000000 		.4byte	.LFE33-.LFB33
 3414 06e9 01       		.uleb128 0x1
 3415 06ea 9C       		.byte	0x9c
 3416 06eb 12070000 		.4byte	0x712
 3417 06ef 0B       		.uleb128 0xb
 3418 06f0 4A050000 		.4byte	.LASF68
 3419 06f4 01       		.byte	0x1
 3420 06f5 790A     		.2byte	0xa79
 3421 06f7 83000000 		.4byte	0x83
 3422 06fb 9F030000 		.4byte	.LLST28
 3423 06ff 0D       		.uleb128 0xd
 3424 0700 0E000000 		.4byte	.LVL81
 3425 0704 1F0D0000 		.4byte	0xd1f
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 121


 3426 0708 0D       		.uleb128 0xd
 3427 0709 26000000 		.4byte	.LVL83
 3428 070d 1F0D0000 		.4byte	0xd1f
 3429 0711 00       		.byte	0
 3430 0712 0A       		.uleb128 0xa
 3431 0713 E9050000 		.4byte	.LASF69
 3432 0717 01       		.byte	0x1
 3433 0718 900A     		.2byte	0xa90
 3434 071a 00000000 		.4byte	.LFB34
 3435 071e 14000000 		.4byte	.LFE34-.LFB34
 3436 0722 01       		.uleb128 0x1
 3437 0723 9C       		.byte	0x9c
 3438 0724 42070000 		.4byte	0x742
 3439 0728 0B       		.uleb128 0xb
 3440 0729 A2070000 		.4byte	.LASF70
 3441 072d 01       		.byte	0x1
 3442 072e 900A     		.2byte	0xa90
 3443 0730 77000000 		.4byte	0x77
 3444 0734 BD030000 		.4byte	.LLST29
 3445 0738 0D       		.uleb128 0xd
 3446 0739 0C000000 		.4byte	.LVL87
 3447 073d 1F0D0000 		.4byte	0xd1f
 3448 0741 00       		.byte	0
 3449 0742 0A       		.uleb128 0xa
 3450 0743 C7030000 		.4byte	.LASF71
 3451 0747 01       		.byte	0x1
 3452 0748 E502     		.2byte	0x2e5
 3453 074a 00000000 		.4byte	.LFB8
 3454 074e 64010000 		.4byte	.LFE8-.LFB8
 3455 0752 01       		.uleb128 0x1
 3456 0753 9C       		.byte	0x9c
 3457 0754 33080000 		.4byte	0x833
 3458 0758 0B       		.uleb128 0xb
 3459 0759 A8010000 		.4byte	.LASF72
 3460 075d 01       		.byte	0x1
 3461 075e E502     		.2byte	0x2e5
 3462 0760 83000000 		.4byte	0x83
 3463 0764 DE030000 		.4byte	.LLST30
 3464 0768 0C       		.uleb128 0xc
 3465 0769 0F000000 		.4byte	.LASF73
 3466 076d 01       		.byte	0x1
 3467 076e EB02     		.2byte	0x2eb
 3468 0770 6B000000 		.4byte	0x6b
 3469 0774 33040000 		.4byte	.LLST31
 3470 0778 0C       		.uleb128 0xc
 3471 0779 9E040000 		.4byte	.LASF74
 3472 077d 01       		.byte	0x1
 3473 077e EC02     		.2byte	0x2ec
 3474 0780 6B000000 		.4byte	0x6b
 3475 0784 72040000 		.4byte	.LLST32
 3476 0788 0C       		.uleb128 0xc
 3477 0789 72070000 		.4byte	.LASF75
 3478 078d 01       		.byte	0x1
 3479 078e ED02     		.2byte	0x2ed
 3480 0790 6B000000 		.4byte	0x6b
 3481 0794 B1040000 		.4byte	.LLST33
 3482 0798 0C       		.uleb128 0xc
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 122


 3483 0799 6F000000 		.4byte	.LASF76
 3484 079d 01       		.byte	0x1
 3485 079e EE02     		.2byte	0x2ee
 3486 07a0 6B000000 		.4byte	0x6b
 3487 07a4 C4040000 		.4byte	.LLST34
 3488 07a8 0C       		.uleb128 0xc
 3489 07a9 B9010000 		.4byte	.LASF24
 3490 07ad 01       		.byte	0x1
 3491 07ae F902     		.2byte	0x2f9
 3492 07b0 6B000000 		.4byte	0x6b
 3493 07b4 E3040000 		.4byte	.LLST35
 3494 07b8 0D       		.uleb128 0xd
 3495 07b9 10000000 		.4byte	.LVL89
 3496 07bd 090D0000 		.4byte	0xd09
 3497 07c1 16       		.uleb128 0x16
 3498 07c2 B0000000 		.4byte	.LVL107
 3499 07c6 1F0D0000 		.4byte	0xd1f
 3500 07ca D4070000 		.4byte	0x7d4
 3501 07ce 14       		.uleb128 0x14
 3502 07cf 01       		.uleb128 0x1
 3503 07d0 50       		.byte	0x50
 3504 07d1 01       		.uleb128 0x1
 3505 07d2 35       		.byte	0x35
 3506 07d3 00       		.byte	0
 3507 07d4 16       		.uleb128 0x16
 3508 07d5 CE000000 		.4byte	.LVL110
 3509 07d9 1F0D0000 		.4byte	0xd1f
 3510 07dd E7070000 		.4byte	0x7e7
 3511 07e1 14       		.uleb128 0x14
 3512 07e2 01       		.uleb128 0x1
 3513 07e3 50       		.byte	0x50
 3514 07e4 01       		.uleb128 0x1
 3515 07e5 35       		.byte	0x35
 3516 07e6 00       		.byte	0
 3517 07e7 16       		.uleb128 0x16
 3518 07e8 EE000000 		.4byte	.LVL112
 3519 07ec 12070000 		.4byte	0x712
 3520 07f0 FA070000 		.4byte	0x7fa
 3521 07f4 14       		.uleb128 0x14
 3522 07f5 01       		.uleb128 0x1
 3523 07f6 50       		.byte	0x50
 3524 07f7 01       		.uleb128 0x1
 3525 07f8 35       		.byte	0x35
 3526 07f9 00       		.byte	0
 3527 07fa 16       		.uleb128 0x16
 3528 07fb 00010000 		.4byte	.LVL113
 3529 07ff 1F0D0000 		.4byte	0xd1f
 3530 0803 0D080000 		.4byte	0x80d
 3531 0807 14       		.uleb128 0x14
 3532 0808 01       		.uleb128 0x1
 3533 0809 50       		.byte	0x50
 3534 080a 01       		.uleb128 0x1
 3535 080b 35       		.byte	0x35
 3536 080c 00       		.byte	0
 3537 080d 16       		.uleb128 0x16
 3538 080e 08010000 		.4byte	.LVL115
 3539 0812 F7030000 		.4byte	0x3f7
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 123


 3540 0816 20080000 		.4byte	0x820
 3541 081a 14       		.uleb128 0x14
 3542 081b 01       		.uleb128 0x1
 3543 081c 50       		.byte	0x50
 3544 081d 01       		.uleb128 0x1
 3545 081e 30       		.byte	0x30
 3546 081f 00       		.byte	0
 3547 0820 13       		.uleb128 0x13
 3548 0821 0E010000 		.4byte	.LVL116
 3549 0825 140D0000 		.4byte	0xd14
 3550 0829 14       		.uleb128 0x14
 3551 082a 01       		.uleb128 0x1
 3552 082b 50       		.byte	0x50
 3553 082c 04       		.uleb128 0x4
 3554 082d 91       		.byte	0x91
 3555 082e 5C       		.sleb128 -36
 3556 082f 94       		.byte	0x94
 3557 0830 01       		.byte	0x1
 3558 0831 00       		.byte	0
 3559 0832 00       		.byte	0
 3560 0833 0F       		.uleb128 0xf
 3561 0834 D8050000 		.4byte	.LASF77
 3562 0838 01       		.byte	0x1
 3563 0839 6504     		.2byte	0x465
 3564 083b A4000000 		.4byte	0xa4
 3565 083f 00000000 		.4byte	.LFB9
 3566 0843 54000000 		.4byte	.LFE9-.LFB9
 3567 0847 01       		.uleb128 0x1
 3568 0848 9C       		.byte	0x9c
 3569 0849 8A080000 		.4byte	0x88a
 3570 084d 0B       		.uleb128 0xb
 3571 084e 32070000 		.4byte	.LASF78
 3572 0852 01       		.byte	0x1
 3573 0853 6504     		.2byte	0x465
 3574 0855 83000000 		.4byte	0x83
 3575 0859 0F050000 		.4byte	.LLST36
 3576 085d 0C       		.uleb128 0xc
 3577 085e 37040000 		.4byte	.LASF41
 3578 0862 01       		.byte	0x1
 3579 0863 6704     		.2byte	0x467
 3580 0865 A4000000 		.4byte	0xa4
 3581 0869 2D050000 		.4byte	.LLST37
 3582 086d 16       		.uleb128 0x16
 3583 086e 2E000000 		.4byte	.LVL121
 3584 0872 12070000 		.4byte	0x712
 3585 0876 80080000 		.4byte	0x880
 3586 087a 14       		.uleb128 0x14
 3587 087b 01       		.uleb128 0x1
 3588 087c 50       		.byte	0x50
 3589 087d 01       		.uleb128 0x1
 3590 087e 31       		.byte	0x31
 3591 087f 00       		.byte	0
 3592 0880 0D       		.uleb128 0xd
 3593 0881 32000000 		.4byte	.LVL122
 3594 0885 46020000 		.4byte	0x246
 3595 0889 00       		.byte	0
 3596 088a 0A       		.uleb128 0xa
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 124


 3597 088b 1A050000 		.4byte	.LASF79
 3598 088f 01       		.byte	0x1
 3599 0890 C008     		.2byte	0x8c0
 3600 0892 00000000 		.4byte	.LFB13
 3601 0896 44000000 		.4byte	.LFE13-.LFB13
 3602 089a 01       		.uleb128 0x1
 3603 089b 9C       		.byte	0x9c
 3604 089c CF080000 		.4byte	0x8cf
 3605 08a0 0B       		.uleb128 0xb
 3606 08a1 6A050000 		.4byte	.LASF80
 3607 08a5 01       		.byte	0x1
 3608 08a6 C008     		.2byte	0x8c0
 3609 08a8 83000000 		.4byte	0x83
 3610 08ac 4C050000 		.4byte	.LLST38
 3611 08b0 16       		.uleb128 0x16
 3612 08b1 2E000000 		.4byte	.LVL129
 3613 08b5 12070000 		.4byte	0x712
 3614 08b9 C5080000 		.4byte	0x8c5
 3615 08bd 14       		.uleb128 0x14
 3616 08be 01       		.uleb128 0x1
 3617 08bf 50       		.byte	0x50
 3618 08c0 03       		.uleb128 0x3
 3619 08c1 0A       		.byte	0xa
 3620 08c2 E803     		.2byte	0x3e8
 3621 08c4 00       		.byte	0
 3622 08c5 0D       		.uleb128 0xd
 3623 08c6 32000000 		.4byte	.LVL130
 3624 08ca 97020000 		.4byte	0x297
 3625 08ce 00       		.byte	0
 3626 08cf 17       		.uleb128 0x17
 3627 08d0 AD010000 		.4byte	.LASF81
 3628 08d4 01       		.byte	0x1
 3629 08d5 9E0A     		.2byte	0xa9e
 3630 08d7 00000000 		.4byte	.LFB35
 3631 08db 4C000000 		.4byte	.LFE35-.LFB35
 3632 08df 01       		.uleb128 0x1
 3633 08e0 9C       		.byte	0x9c
 3634 08e1 F6080000 		.4byte	0x8f6
 3635 08e5 0B       		.uleb128 0xb
 3636 08e6 A8010000 		.4byte	.LASF72
 3637 08ea 01       		.byte	0x1
 3638 08eb 9E0A     		.2byte	0xa9e
 3639 08ed 83000000 		.4byte	0x83
 3640 08f1 78050000 		.4byte	.LLST39
 3641 08f5 00       		.byte	0
 3642 08f6 10       		.uleb128 0x10
 3643 08f7 24070000 		.4byte	.LASF82
 3644 08fb 01       		.byte	0x1
 3645 08fc 0A0B     		.2byte	0xb0a
 3646 08fe 00000000 		.4byte	.LFB39
 3647 0902 10000000 		.4byte	.LFE39-.LFB39
 3648 0906 01       		.uleb128 0x1
 3649 0907 9C       		.byte	0x9c
 3650 0908 10       		.uleb128 0x10
 3651 0909 67010000 		.4byte	.LASF83
 3652 090d 01       		.byte	0x1
 3653 090e 1A0B     		.2byte	0xb1a
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 125


 3654 0910 00000000 		.4byte	.LFB40
 3655 0914 10000000 		.4byte	.LFE40-.LFB40
 3656 0918 01       		.uleb128 0x1
 3657 0919 9C       		.byte	0x9c
 3658 091a 0A       		.uleb128 0xa
 3659 091b 0C060000 		.4byte	.LASF84
 3660 091f 01       		.byte	0x1
 3661 0920 F90A     		.2byte	0xaf9
 3662 0922 00000000 		.4byte	.LFB38
 3663 0926 18000000 		.4byte	.LFE38-.LFB38
 3664 092a 01       		.uleb128 0x1
 3665 092b 9C       		.byte	0x9c
 3666 092c 3A090000 		.4byte	0x93a
 3667 0930 0D       		.uleb128 0xd
 3668 0931 06000000 		.4byte	.LVL135
 3669 0935 08090000 		.4byte	0x908
 3670 0939 00       		.byte	0
 3671 093a 10       		.uleb128 0x10
 3672 093b 84060000 		.4byte	.LASF85
 3673 093f 01       		.byte	0x1
 3674 0940 2A0B     		.2byte	0xb2a
 3675 0942 00000000 		.4byte	.LFB41
 3676 0946 10000000 		.4byte	.LFE41-.LFB41
 3677 094a 01       		.uleb128 0x1
 3678 094b 9C       		.byte	0x9c
 3679 094c 0A       		.uleb128 0xa
 3680 094d B6070000 		.4byte	.LASF86
 3681 0951 01       		.byte	0x1
 3682 0952 3B0B     		.2byte	0xb3b
 3683 0954 00000000 		.4byte	.LFB42
 3684 0958 10000000 		.4byte	.LFE42-.LFB42
 3685 095c 01       		.uleb128 0x1
 3686 095d 9C       		.byte	0x9c
 3687 095e 73090000 		.4byte	0x973
 3688 0962 0B       		.uleb128 0xb
 3689 0963 AC020000 		.4byte	.LASF64
 3690 0967 01       		.byte	0x1
 3691 0968 3B0B     		.2byte	0xb3b
 3692 096a 83000000 		.4byte	0x83
 3693 096e 99050000 		.4byte	.LLST40
 3694 0972 00       		.byte	0
 3695 0973 12       		.uleb128 0x12
 3696 0974 C8010000 		.4byte	.LASF88
 3697 0978 01       		.byte	0x1
 3698 0979 4B0B     		.2byte	0xb4b
 3699 097b 83000000 		.4byte	0x83
 3700 097f 00000000 		.4byte	.LFB43
 3701 0983 10000000 		.4byte	.LFE43-.LFB43
 3702 0987 01       		.uleb128 0x1
 3703 0988 9C       		.byte	0x9c
 3704 0989 12       		.uleb128 0x12
 3705 098a CD040000 		.4byte	.LASF89
 3706 098e 01       		.byte	0x1
 3707 098f 5B0B     		.2byte	0xb5b
 3708 0991 83000000 		.4byte	0x83
 3709 0995 00000000 		.4byte	.LFB44
 3710 0999 10000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 126


 3711 099d 01       		.uleb128 0x1
 3712 099e 9C       		.byte	0x9c
 3713 099f 0A       		.uleb128 0xa
 3714 09a0 90030000 		.4byte	.LASF90
 3715 09a4 01       		.byte	0x1
 3716 09a5 7B0B     		.2byte	0xb7b
 3717 09a7 00000000 		.4byte	.LFB45
 3718 09ab 20000000 		.4byte	.LFE45-.LFB45
 3719 09af 01       		.uleb128 0x1
 3720 09b0 9C       		.byte	0x9c
 3721 09b1 C4090000 		.4byte	0x9c4
 3722 09b5 0E       		.uleb128 0xe
 3723 09b6 B2020000 		.4byte	.LASF91
 3724 09ba 01       		.byte	0x1
 3725 09bb 7B0B     		.2byte	0xb7b
 3726 09bd 83000000 		.4byte	0x83
 3727 09c1 01       		.uleb128 0x1
 3728 09c2 50       		.byte	0x50
 3729 09c3 00       		.byte	0
 3730 09c4 12       		.uleb128 0x12
 3731 09c5 6C060000 		.4byte	.LASF92
 3732 09c9 01       		.byte	0x1
 3733 09ca 940B     		.2byte	0xb94
 3734 09cc 83000000 		.4byte	0x83
 3735 09d0 00000000 		.4byte	.LFB46
 3736 09d4 10000000 		.4byte	.LFE46-.LFB46
 3737 09d8 01       		.uleb128 0x1
 3738 09d9 9C       		.byte	0x9c
 3739 09da 12       		.uleb128 0x12
 3740 09db CC020000 		.4byte	.LASF93
 3741 09df 01       		.byte	0x1
 3742 09e0 AB0B     		.2byte	0xbab
 3743 09e2 83000000 		.4byte	0x83
 3744 09e6 00000000 		.4byte	.LFB47
 3745 09ea 10000000 		.4byte	.LFE47-.LFB47
 3746 09ee 01       		.uleb128 0x1
 3747 09ef 9C       		.byte	0x9c
 3748 09f0 18       		.uleb128 0x18
 3749 09f1 C9070000 		.4byte	.LASF124
 3750 09f5 01       		.byte	0x1
 3751 09f6 000C     		.2byte	0xc00
 3752 09f8 00000000 		.4byte	.LFB51
 3753 09fc 28000000 		.4byte	.LFE51-.LFB51
 3754 0a00 01       		.uleb128 0x1
 3755 0a01 9C       		.byte	0x9c
 3756 0a02 1E0A0000 		.4byte	0xa1e
 3757 0a06 19       		.uleb128 0x19
 3758 0a07 6900     		.ascii	"i\000"
 3759 0a09 01       		.byte	0x1
 3760 0a0a 020C     		.2byte	0xc02
 3761 0a0c 83000000 		.4byte	0x83
 3762 0a10 BA050000 		.4byte	.LLST41
 3763 0a14 0D       		.uleb128 0xd
 3764 0a15 06000000 		.4byte	.LVL139
 3765 0a19 DA090000 		.4byte	0x9da
 3766 0a1d 00       		.byte	0
 3767 0a1e 10       		.uleb128 0x10
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 127


 3768 0a1f EF020000 		.4byte	.LASF94
 3769 0a23 01       		.byte	0x1
 3770 0a24 B80B     		.2byte	0xbb8
 3771 0a26 00000000 		.4byte	.LFB48
 3772 0a2a 0C000000 		.4byte	.LFE48-.LFB48
 3773 0a2e 01       		.uleb128 0x1
 3774 0a2f 9C       		.byte	0x9c
 3775 0a30 17       		.uleb128 0x17
 3776 0a31 9E020000 		.4byte	.LASF95
 3777 0a35 01       		.byte	0x1
 3778 0a36 DB0A     		.2byte	0xadb
 3779 0a38 00000000 		.4byte	.LFB37
 3780 0a3c 44000000 		.4byte	.LFE37-.LFB37
 3781 0a40 01       		.uleb128 0x1
 3782 0a41 9C       		.byte	0x9c
 3783 0a42 960A0000 		.4byte	0xa96
 3784 0a46 19       		.uleb128 0x19
 3785 0a47 6900     		.ascii	"i\000"
 3786 0a49 01       		.byte	0x1
 3787 0a4a DD0A     		.2byte	0xadd
 3788 0a4c 83000000 		.4byte	0x83
 3789 0a50 D8050000 		.4byte	.LLST42
 3790 0a54 16       		.uleb128 0x16
 3791 0a55 1C000000 		.4byte	.LVL149
 3792 0a59 74040000 		.4byte	0x474
 3793 0a5d 700A0000 		.4byte	0xa70
 3794 0a61 14       		.uleb128 0x14
 3795 0a62 01       		.uleb128 0x1
 3796 0a63 50       		.byte	0x50
 3797 0a64 01       		.uleb128 0x1
 3798 0a65 3F       		.byte	0x3f
 3799 0a66 14       		.uleb128 0x14
 3800 0a67 01       		.uleb128 0x1
 3801 0a68 51       		.byte	0x51
 3802 0a69 05       		.uleb128 0x5
 3803 0a6a 03       		.byte	0x3
 3804 0a6b 00000000 		.4byte	CySysTickServiceCallbacks
 3805 0a6f 00       		.byte	0
 3806 0a70 16       		.uleb128 0x16
 3807 0a71 22000000 		.4byte	.LVL150
 3808 0a75 9F090000 		.4byte	0x99f
 3809 0a79 830A0000 		.4byte	0xa83
 3810 0a7d 14       		.uleb128 0x14
 3811 0a7e 01       		.uleb128 0x1
 3812 0a7f 50       		.byte	0x50
 3813 0a80 01       		.uleb128 0x1
 3814 0a81 31       		.byte	0x31
 3815 0a82 00       		.byte	0
 3816 0a83 0D       		.uleb128 0xd
 3817 0a84 32000000 		.4byte	.LVL152
 3818 0a88 4C090000 		.4byte	0x94c
 3819 0a8c 0D       		.uleb128 0xd
 3820 0a8d 36000000 		.4byte	.LVL153
 3821 0a91 1E0A0000 		.4byte	0xa1e
 3822 0a95 00       		.byte	0
 3823 0a96 0A       		.uleb128 0xa
 3824 0a97 28040000 		.4byte	.LASF96
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 128


 3825 0a9b 01       		.byte	0x1
 3826 0a9c BE0A     		.2byte	0xabe
 3827 0a9e 00000000 		.4byte	.LFB36
 3828 0aa2 20000000 		.4byte	.LFE36-.LFB36
 3829 0aa6 01       		.uleb128 0x1
 3830 0aa7 9C       		.byte	0x9c
 3831 0aa8 BF0A0000 		.4byte	0xabf
 3832 0aac 0D       		.uleb128 0xd
 3833 0aad 0E000000 		.4byte	.LVL154
 3834 0ab1 300A0000 		.4byte	0xa30
 3835 0ab5 0D       		.uleb128 0xd
 3836 0ab6 18000000 		.4byte	.LVL155
 3837 0aba 1A090000 		.4byte	0x91a
 3838 0abe 00       		.byte	0
 3839 0abf 0F       		.uleb128 0xf
 3840 0ac0 33060000 		.4byte	.LASF97
 3841 0ac4 01       		.byte	0x1
 3842 0ac5 DB0B     		.2byte	0xbdb
 3843 0ac7 F3000000 		.4byte	0xf3
 3844 0acb 00000000 		.4byte	.LFB49
 3845 0acf 10000000 		.4byte	.LFE49-.LFB49
 3846 0ad3 01       		.uleb128 0x1
 3847 0ad4 9C       		.byte	0x9c
 3848 0ad5 060B0000 		.4byte	0xb06
 3849 0ad9 0B       		.uleb128 0xb
 3850 0ada B7030000 		.4byte	.LASF47
 3851 0ade 01       		.byte	0x1
 3852 0adf DB0B     		.2byte	0xbdb
 3853 0ae1 83000000 		.4byte	0x83
 3854 0ae5 F7050000 		.4byte	.LLST43
 3855 0ae9 0E       		.uleb128 0xe
 3856 0aea B3040000 		.4byte	.LASF98
 3857 0aee 01       		.byte	0x1
 3858 0aef DB0B     		.2byte	0xbdb
 3859 0af1 F3000000 		.4byte	0xf3
 3860 0af5 01       		.uleb128 0x1
 3861 0af6 51       		.byte	0x51
 3862 0af7 11       		.uleb128 0x11
 3863 0af8 5A000000 		.4byte	.LASF99
 3864 0afc 01       		.byte	0x1
 3865 0afd DD0B     		.2byte	0xbdd
 3866 0aff F3000000 		.4byte	0xf3
 3867 0b03 01       		.uleb128 0x1
 3868 0b04 50       		.byte	0x50
 3869 0b05 00       		.byte	0
 3870 0b06 0F       		.uleb128 0xf
 3871 0b07 F1010000 		.4byte	.LASF100
 3872 0b0b 01       		.byte	0x1
 3873 0b0c F30B     		.2byte	0xbf3
 3874 0b0e F3000000 		.4byte	0xf3
 3875 0b12 00000000 		.4byte	.LFB50
 3876 0b16 0C000000 		.4byte	.LFE50-.LFB50
 3877 0b1a 01       		.uleb128 0x1
 3878 0b1b 9C       		.byte	0x9c
 3879 0b1c 310B0000 		.4byte	0xb31
 3880 0b20 0B       		.uleb128 0xb
 3881 0b21 B7030000 		.4byte	.LASF47
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 129


 3882 0b25 01       		.byte	0x1
 3883 0b26 F30B     		.2byte	0xbf3
 3884 0b28 83000000 		.4byte	0x83
 3885 0b2c 18060000 		.4byte	.LLST44
 3886 0b30 00       		.byte	0
 3887 0b31 0A       		.uleb128 0xa
 3888 0b32 BE020000 		.4byte	.LASF101
 3889 0b36 01       		.byte	0x1
 3890 0b37 200C     		.2byte	0xc20
 3891 0b39 00000000 		.4byte	.LFB52
 3892 0b3d 70000000 		.4byte	.LFE52-.LFB52
 3893 0b41 01       		.uleb128 0x1
 3894 0b42 9C       		.byte	0x9c
 3895 0b43 560B0000 		.4byte	0xb56
 3896 0b47 0E       		.uleb128 0xe
 3897 0b48 5B060000 		.4byte	.LASF102
 3898 0b4c 01       		.byte	0x1
 3899 0b4d 200C     		.2byte	0xc20
 3900 0b4f 560B0000 		.4byte	0xb56
 3901 0b53 01       		.uleb128 0x1
 3902 0b54 50       		.byte	0x50
 3903 0b55 00       		.byte	0
 3904 0b56 06       		.uleb128 0x6
 3905 0b57 04       		.byte	0x4
 3906 0b58 83000000 		.4byte	0x83
 3907 0b5c 0A       		.uleb128 0xa
 3908 0b5d 7B050000 		.4byte	.LASF103
 3909 0b61 01       		.byte	0x1
 3910 0b62 4D0C     		.2byte	0xc4d
 3911 0b64 00000000 		.4byte	.LFB53
 3912 0b68 20000000 		.4byte	.LFE53-.LFB53
 3913 0b6c 01       		.uleb128 0x1
 3914 0b6d 9C       		.byte	0x9c
 3915 0b6e 930B0000 		.4byte	0xb93
 3916 0b72 0B       		.uleb128 0xb
 3917 0b73 44040000 		.4byte	.LASF104
 3918 0b77 01       		.byte	0x1
 3919 0b78 4D0C     		.2byte	0xc4d
 3920 0b7a 83000000 		.4byte	0x83
 3921 0b7e 39060000 		.4byte	.LLST45
 3922 0b82 0C       		.uleb128 0xc
 3923 0b83 89030000 		.4byte	.LASF105
 3924 0b87 01       		.byte	0x1
 3925 0b88 4F0C     		.2byte	0xc4f
 3926 0b8a 83000000 		.4byte	0x83
 3927 0b8e 5A060000 		.4byte	.LLST46
 3928 0b92 00       		.byte	0
 3929 0b93 0A       		.uleb128 0xa
 3930 0b94 DC030000 		.4byte	.LASF106
 3931 0b98 01       		.byte	0x1
 3932 0b99 690C     		.2byte	0xc69
 3933 0b9b 00000000 		.4byte	.LFB54
 3934 0b9f 20000000 		.4byte	.LFE54-.LFB54
 3935 0ba3 01       		.uleb128 0x1
 3936 0ba4 9C       		.byte	0x9c
 3937 0ba5 CA0B0000 		.4byte	0xbca
 3938 0ba9 0B       		.uleb128 0xb
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 130


 3939 0baa 44040000 		.4byte	.LASF104
 3940 0bae 01       		.byte	0x1
 3941 0baf 690C     		.2byte	0xc69
 3942 0bb1 83000000 		.4byte	0x83
 3943 0bb5 78060000 		.4byte	.LLST47
 3944 0bb9 0C       		.uleb128 0xc
 3945 0bba 89030000 		.4byte	.LASF105
 3946 0bbe 01       		.byte	0x1
 3947 0bbf 6B0C     		.2byte	0xc6b
 3948 0bc1 83000000 		.4byte	0x83
 3949 0bc5 99060000 		.4byte	.LLST48
 3950 0bc9 00       		.byte	0
 3951 0bca 0A       		.uleb128 0xa
 3952 0bcb 06070000 		.4byte	.LASF107
 3953 0bcf 01       		.byte	0x1
 3954 0bd0 850C     		.2byte	0xc85
 3955 0bd2 00000000 		.4byte	.LFB55
 3956 0bd6 20000000 		.4byte	.LFE55-.LFB55
 3957 0bda 01       		.uleb128 0x1
 3958 0bdb 9C       		.byte	0x9c
 3959 0bdc 010C0000 		.4byte	0xc01
 3960 0be0 0B       		.uleb128 0xb
 3961 0be1 44040000 		.4byte	.LASF104
 3962 0be5 01       		.byte	0x1
 3963 0be6 850C     		.2byte	0xc85
 3964 0be8 83000000 		.4byte	0x83
 3965 0bec B7060000 		.4byte	.LLST49
 3966 0bf0 0C       		.uleb128 0xc
 3967 0bf1 89030000 		.4byte	.LASF105
 3968 0bf5 01       		.byte	0x1
 3969 0bf6 870C     		.2byte	0xc87
 3970 0bf8 83000000 		.4byte	0x83
 3971 0bfc D8060000 		.4byte	.LLST50
 3972 0c00 00       		.byte	0
 3973 0c01 0A       		.uleb128 0xa
 3974 0c02 54040000 		.4byte	.LASF108
 3975 0c06 01       		.byte	0x1
 3976 0c07 A30C     		.2byte	0xca3
 3977 0c09 00000000 		.4byte	.LFB56
 3978 0c0d 68000000 		.4byte	.LFE56-.LFB56
 3979 0c11 01       		.uleb128 0x1
 3980 0c12 9C       		.byte	0x9c
 3981 0c13 570C0000 		.4byte	0xc57
 3982 0c17 0B       		.uleb128 0xb
 3983 0c18 47010000 		.4byte	.LASF109
 3984 0c1c 01       		.byte	0x1
 3985 0c1d A30C     		.2byte	0xca3
 3986 0c1f 83000000 		.4byte	0x83
 3987 0c23 F6060000 		.4byte	.LLST51
 3988 0c27 0B       		.uleb128 0xb
 3989 0c28 44040000 		.4byte	.LASF104
 3990 0c2c 01       		.byte	0x1
 3991 0c2d A30C     		.2byte	0xca3
 3992 0c2f 83000000 		.4byte	0x83
 3993 0c33 62070000 		.4byte	.LLST52
 3994 0c37 0C       		.uleb128 0xc
 3995 0c38 89030000 		.4byte	.LASF105
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 131


 3996 0c3c 01       		.byte	0x1
 3997 0c3d A50C     		.2byte	0xca5
 3998 0c3f 83000000 		.4byte	0x83
 3999 0c43 CE070000 		.4byte	.LLST53
 4000 0c47 13       		.uleb128 0x13
 4001 0c48 56000000 		.4byte	.LVL190
 4002 0c4c F7030000 		.4byte	0x3f7
 4003 0c50 14       		.uleb128 0x14
 4004 0c51 01       		.uleb128 0x1
 4005 0c52 50       		.byte	0x50
 4006 0c53 01       		.uleb128 0x1
 4007 0c54 30       		.byte	0x30
 4008 0c55 00       		.byte	0
 4009 0c56 00       		.byte	0
 4010 0c57 1A       		.uleb128 0x1a
 4011 0c58 F3000000 		.4byte	0xf3
 4012 0c5c 670C0000 		.4byte	0xc67
 4013 0c60 1B       		.uleb128 0x1b
 4014 0c61 EC000000 		.4byte	0xec
 4015 0c65 04       		.byte	0x4
 4016 0c66 00       		.byte	0
 4017 0c67 1C       		.uleb128 0x1c
 4018 0c68 48060000 		.4byte	.LASF110
 4019 0c6c 01       		.byte	0x1
 4020 0c6d 22       		.byte	0x22
 4021 0c6e 570C0000 		.4byte	0xc57
 4022 0c72 05       		.uleb128 0x5
 4023 0c73 03       		.byte	0x3
 4024 0c74 00000000 		.4byte	CySysTickCallbacks
 4025 0c78 1D       		.uleb128 0x1d
 4026 0c79 DF040000 		.4byte	.LASF111
 4027 0c7d 01       		.byte	0x1
 4028 0c7e 1B       		.byte	0x1b
 4029 0c7f 83000000 		.4byte	0x83
 4030 0c83 05       		.uleb128 0x5
 4031 0c84 03       		.byte	0x3
 4032 0c85 00000000 		.4byte	cydelayFreqHz
 4033 0c89 1D       		.uleb128 0x1d
 4034 0c8a 0C020000 		.4byte	.LASF112
 4035 0c8e 01       		.byte	0x1
 4036 0c8f 1C       		.byte	0x1c
 4037 0c90 83000000 		.4byte	0x83
 4038 0c94 05       		.uleb128 0x5
 4039 0c95 03       		.byte	0x3
 4040 0c96 00000000 		.4byte	cydelayFreqKhz
 4041 0c9a 1D       		.uleb128 0x1d
 4042 0c9b AE060000 		.4byte	.LASF113
 4043 0c9f 01       		.byte	0x1
 4044 0ca0 1D       		.byte	0x1d
 4045 0ca1 6B000000 		.4byte	0x6b
 4046 0ca5 05       		.uleb128 0x5
 4047 0ca6 03       		.byte	0x3
 4048 0ca7 00000000 		.4byte	cydelayFreqMhz
 4049 0cab 1D       		.uleb128 0x1d
 4050 0cac 91020000 		.4byte	.LASF114
 4051 0cb0 01       		.byte	0x1
 4052 0cb1 1E       		.byte	0x1e
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 132


 4053 0cb2 83000000 		.4byte	0x83
 4054 0cb6 05       		.uleb128 0x5
 4055 0cb7 03       		.byte	0x3
 4056 0cb8 00000000 		.4byte	cydelay32kMs
 4057 0cbc 1D       		.uleb128 0x1d
 4058 0cbd 29010000 		.4byte	.LASF115
 4059 0cc1 01       		.byte	0x1
 4060 0cc2 36       		.byte	0x36
 4061 0cc3 83000000 		.4byte	0x83
 4062 0cc7 05       		.uleb128 0x5
 4063 0cc8 03       		.byte	0x3
 4064 0cc9 00000000 		.4byte	CySysTickInitVar
 4065 0ccd 1A       		.uleb128 0x1a
 4066 0cce DD0C0000 		.4byte	0xcdd
 4067 0cd2 DD0C0000 		.4byte	0xcdd
 4068 0cd6 1B       		.uleb128 0x1b
 4069 0cd7 EC000000 		.4byte	0xec
 4070 0cdb 2D       		.byte	0x2d
 4071 0cdc 00       		.byte	0
 4072 0cdd 1E       		.uleb128 0x1e
 4073 0cde 6B000000 		.4byte	0x6b
 4074 0ce2 1D       		.uleb128 0x1d
 4075 0ce3 BC040000 		.4byte	.LASF116
 4076 0ce7 01       		.byte	0x1
 4077 0ce8 3B       		.byte	0x3b
 4078 0ce9 F30C0000 		.4byte	0xcf3
 4079 0ced 05       		.uleb128 0x5
 4080 0cee 03       		.byte	0x3
 4081 0cef 00000000 		.4byte	cyImoFreqMhz2Reg
 4082 0cf3 1E       		.uleb128 0x1e
 4083 0cf4 CD0C0000 		.4byte	0xccd
 4084 0cf8 1D       		.uleb128 0x1d
 4085 0cf9 40000000 		.4byte	.LASF117
 4086 0cfd 01       		.byte	0x1
 4087 0cfe 5C       		.byte	0x5c
 4088 0cff 83000000 		.4byte	0x83
 4089 0d03 05       		.uleb128 0x5
 4090 0d04 03       		.byte	0x3
 4091 0d05 00000000 		.4byte	CySysClkPumpConfig
 4092 0d09 1F       		.uleb128 0x1f
 4093 0d0a 3B030000 		.4byte	.LASF118
 4094 0d0e 3B030000 		.4byte	.LASF118
 4095 0d12 03       		.byte	0x3
 4096 0d13 E5       		.byte	0xe5
 4097 0d14 1F       		.uleb128 0x1f
 4098 0d15 04050000 		.4byte	.LASF119
 4099 0d19 04050000 		.4byte	.LASF119
 4100 0d1d 03       		.byte	0x3
 4101 0d1e E6       		.byte	0xe6
 4102 0d1f 1F       		.uleb128 0x1f
 4103 0d20 57050000 		.4byte	.LASF120
 4104 0d24 57050000 		.4byte	.LASF120
 4105 0d28 03       		.byte	0x3
 4106 0d29 DC       		.byte	0xdc
 4107 0d2a 00       		.byte	0
 4108              		.section	.debug_abbrev,"",%progbits
 4109              	.Ldebug_abbrev0:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 133


 4110 0000 01       		.uleb128 0x1
 4111 0001 11       		.uleb128 0x11
 4112 0002 01       		.byte	0x1
 4113 0003 25       		.uleb128 0x25
 4114 0004 0E       		.uleb128 0xe
 4115 0005 13       		.uleb128 0x13
 4116 0006 0B       		.uleb128 0xb
 4117 0007 03       		.uleb128 0x3
 4118 0008 0E       		.uleb128 0xe
 4119 0009 1B       		.uleb128 0x1b
 4120 000a 0E       		.uleb128 0xe
 4121 000b 55       		.uleb128 0x55
 4122 000c 17       		.uleb128 0x17
 4123 000d 11       		.uleb128 0x11
 4124 000e 01       		.uleb128 0x1
 4125 000f 10       		.uleb128 0x10
 4126 0010 17       		.uleb128 0x17
 4127 0011 00       		.byte	0
 4128 0012 00       		.byte	0
 4129 0013 02       		.uleb128 0x2
 4130 0014 24       		.uleb128 0x24
 4131 0015 00       		.byte	0
 4132 0016 0B       		.uleb128 0xb
 4133 0017 0B       		.uleb128 0xb
 4134 0018 3E       		.uleb128 0x3e
 4135 0019 0B       		.uleb128 0xb
 4136 001a 03       		.uleb128 0x3
 4137 001b 0E       		.uleb128 0xe
 4138 001c 00       		.byte	0
 4139 001d 00       		.byte	0
 4140 001e 03       		.uleb128 0x3
 4141 001f 24       		.uleb128 0x24
 4142 0020 00       		.byte	0
 4143 0021 0B       		.uleb128 0xb
 4144 0022 0B       		.uleb128 0xb
 4145 0023 3E       		.uleb128 0x3e
 4146 0024 0B       		.uleb128 0xb
 4147 0025 03       		.uleb128 0x3
 4148 0026 08       		.uleb128 0x8
 4149 0027 00       		.byte	0
 4150 0028 00       		.byte	0
 4151 0029 04       		.uleb128 0x4
 4152 002a 16       		.uleb128 0x16
 4153 002b 00       		.byte	0
 4154 002c 03       		.uleb128 0x3
 4155 002d 0E       		.uleb128 0xe
 4156 002e 3A       		.uleb128 0x3a
 4157 002f 0B       		.uleb128 0xb
 4158 0030 3B       		.uleb128 0x3b
 4159 0031 05       		.uleb128 0x5
 4160 0032 49       		.uleb128 0x49
 4161 0033 13       		.uleb128 0x13
 4162 0034 00       		.byte	0
 4163 0035 00       		.byte	0
 4164 0036 05       		.uleb128 0x5
 4165 0037 35       		.uleb128 0x35
 4166 0038 00       		.byte	0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 134


 4167 0039 49       		.uleb128 0x49
 4168 003a 13       		.uleb128 0x13
 4169 003b 00       		.byte	0
 4170 003c 00       		.byte	0
 4171 003d 06       		.uleb128 0x6
 4172 003e 0F       		.uleb128 0xf
 4173 003f 00       		.byte	0
 4174 0040 0B       		.uleb128 0xb
 4175 0041 0B       		.uleb128 0xb
 4176 0042 49       		.uleb128 0x49
 4177 0043 13       		.uleb128 0x13
 4178 0044 00       		.byte	0
 4179 0045 00       		.byte	0
 4180 0046 07       		.uleb128 0x7
 4181 0047 15       		.uleb128 0x15
 4182 0048 00       		.byte	0
 4183 0049 27       		.uleb128 0x27
 4184 004a 19       		.uleb128 0x19
 4185 004b 00       		.byte	0
 4186 004c 00       		.byte	0
 4187 004d 08       		.uleb128 0x8
 4188 004e 16       		.uleb128 0x16
 4189 004f 00       		.byte	0
 4190 0050 03       		.uleb128 0x3
 4191 0051 0E       		.uleb128 0xe
 4192 0052 3A       		.uleb128 0x3a
 4193 0053 0B       		.uleb128 0xb
 4194 0054 3B       		.uleb128 0x3b
 4195 0055 0B       		.uleb128 0xb
 4196 0056 49       		.uleb128 0x49
 4197 0057 13       		.uleb128 0x13
 4198 0058 00       		.byte	0
 4199 0059 00       		.byte	0
 4200 005a 09       		.uleb128 0x9
 4201 005b 2E       		.uleb128 0x2e
 4202 005c 00       		.byte	0
 4203 005d 3F       		.uleb128 0x3f
 4204 005e 19       		.uleb128 0x19
 4205 005f 03       		.uleb128 0x3
 4206 0060 0E       		.uleb128 0xe
 4207 0061 3A       		.uleb128 0x3a
 4208 0062 0B       		.uleb128 0xb
 4209 0063 3B       		.uleb128 0x3b
 4210 0064 0B       		.uleb128 0xb
 4211 0065 27       		.uleb128 0x27
 4212 0066 19       		.uleb128 0x19
 4213 0067 11       		.uleb128 0x11
 4214 0068 01       		.uleb128 0x1
 4215 0069 12       		.uleb128 0x12
 4216 006a 06       		.uleb128 0x6
 4217 006b 40       		.uleb128 0x40
 4218 006c 18       		.uleb128 0x18
 4219 006d 9742     		.uleb128 0x2117
 4220 006f 19       		.uleb128 0x19
 4221 0070 00       		.byte	0
 4222 0071 00       		.byte	0
 4223 0072 0A       		.uleb128 0xa
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 135


 4224 0073 2E       		.uleb128 0x2e
 4225 0074 01       		.byte	0x1
 4226 0075 3F       		.uleb128 0x3f
 4227 0076 19       		.uleb128 0x19
 4228 0077 03       		.uleb128 0x3
 4229 0078 0E       		.uleb128 0xe
 4230 0079 3A       		.uleb128 0x3a
 4231 007a 0B       		.uleb128 0xb
 4232 007b 3B       		.uleb128 0x3b
 4233 007c 05       		.uleb128 0x5
 4234 007d 27       		.uleb128 0x27
 4235 007e 19       		.uleb128 0x19
 4236 007f 11       		.uleb128 0x11
 4237 0080 01       		.uleb128 0x1
 4238 0081 12       		.uleb128 0x12
 4239 0082 06       		.uleb128 0x6
 4240 0083 40       		.uleb128 0x40
 4241 0084 18       		.uleb128 0x18
 4242 0085 9742     		.uleb128 0x2117
 4243 0087 19       		.uleb128 0x19
 4244 0088 01       		.uleb128 0x1
 4245 0089 13       		.uleb128 0x13
 4246 008a 00       		.byte	0
 4247 008b 00       		.byte	0
 4248 008c 0B       		.uleb128 0xb
 4249 008d 05       		.uleb128 0x5
 4250 008e 00       		.byte	0
 4251 008f 03       		.uleb128 0x3
 4252 0090 0E       		.uleb128 0xe
 4253 0091 3A       		.uleb128 0x3a
 4254 0092 0B       		.uleb128 0xb
 4255 0093 3B       		.uleb128 0x3b
 4256 0094 05       		.uleb128 0x5
 4257 0095 49       		.uleb128 0x49
 4258 0096 13       		.uleb128 0x13
 4259 0097 02       		.uleb128 0x2
 4260 0098 17       		.uleb128 0x17
 4261 0099 00       		.byte	0
 4262 009a 00       		.byte	0
 4263 009b 0C       		.uleb128 0xc
 4264 009c 34       		.uleb128 0x34
 4265 009d 00       		.byte	0
 4266 009e 03       		.uleb128 0x3
 4267 009f 0E       		.uleb128 0xe
 4268 00a0 3A       		.uleb128 0x3a
 4269 00a1 0B       		.uleb128 0xb
 4270 00a2 3B       		.uleb128 0x3b
 4271 00a3 05       		.uleb128 0x5
 4272 00a4 49       		.uleb128 0x49
 4273 00a5 13       		.uleb128 0x13
 4274 00a6 02       		.uleb128 0x2
 4275 00a7 17       		.uleb128 0x17
 4276 00a8 00       		.byte	0
 4277 00a9 00       		.byte	0
 4278 00aa 0D       		.uleb128 0xd
 4279 00ab 898201   		.uleb128 0x4109
 4280 00ae 00       		.byte	0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 136


 4281 00af 11       		.uleb128 0x11
 4282 00b0 01       		.uleb128 0x1
 4283 00b1 31       		.uleb128 0x31
 4284 00b2 13       		.uleb128 0x13
 4285 00b3 00       		.byte	0
 4286 00b4 00       		.byte	0
 4287 00b5 0E       		.uleb128 0xe
 4288 00b6 05       		.uleb128 0x5
 4289 00b7 00       		.byte	0
 4290 00b8 03       		.uleb128 0x3
 4291 00b9 0E       		.uleb128 0xe
 4292 00ba 3A       		.uleb128 0x3a
 4293 00bb 0B       		.uleb128 0xb
 4294 00bc 3B       		.uleb128 0x3b
 4295 00bd 05       		.uleb128 0x5
 4296 00be 49       		.uleb128 0x49
 4297 00bf 13       		.uleb128 0x13
 4298 00c0 02       		.uleb128 0x2
 4299 00c1 18       		.uleb128 0x18
 4300 00c2 00       		.byte	0
 4301 00c3 00       		.byte	0
 4302 00c4 0F       		.uleb128 0xf
 4303 00c5 2E       		.uleb128 0x2e
 4304 00c6 01       		.byte	0x1
 4305 00c7 3F       		.uleb128 0x3f
 4306 00c8 19       		.uleb128 0x19
 4307 00c9 03       		.uleb128 0x3
 4308 00ca 0E       		.uleb128 0xe
 4309 00cb 3A       		.uleb128 0x3a
 4310 00cc 0B       		.uleb128 0xb
 4311 00cd 3B       		.uleb128 0x3b
 4312 00ce 05       		.uleb128 0x5
 4313 00cf 27       		.uleb128 0x27
 4314 00d0 19       		.uleb128 0x19
 4315 00d1 49       		.uleb128 0x49
 4316 00d2 13       		.uleb128 0x13
 4317 00d3 11       		.uleb128 0x11
 4318 00d4 01       		.uleb128 0x1
 4319 00d5 12       		.uleb128 0x12
 4320 00d6 06       		.uleb128 0x6
 4321 00d7 40       		.uleb128 0x40
 4322 00d8 18       		.uleb128 0x18
 4323 00d9 9742     		.uleb128 0x2117
 4324 00db 19       		.uleb128 0x19
 4325 00dc 01       		.uleb128 0x1
 4326 00dd 13       		.uleb128 0x13
 4327 00de 00       		.byte	0
 4328 00df 00       		.byte	0
 4329 00e0 10       		.uleb128 0x10
 4330 00e1 2E       		.uleb128 0x2e
 4331 00e2 00       		.byte	0
 4332 00e3 3F       		.uleb128 0x3f
 4333 00e4 19       		.uleb128 0x19
 4334 00e5 03       		.uleb128 0x3
 4335 00e6 0E       		.uleb128 0xe
 4336 00e7 3A       		.uleb128 0x3a
 4337 00e8 0B       		.uleb128 0xb
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 137


 4338 00e9 3B       		.uleb128 0x3b
 4339 00ea 05       		.uleb128 0x5
 4340 00eb 27       		.uleb128 0x27
 4341 00ec 19       		.uleb128 0x19
 4342 00ed 11       		.uleb128 0x11
 4343 00ee 01       		.uleb128 0x1
 4344 00ef 12       		.uleb128 0x12
 4345 00f0 06       		.uleb128 0x6
 4346 00f1 40       		.uleb128 0x40
 4347 00f2 18       		.uleb128 0x18
 4348 00f3 9742     		.uleb128 0x2117
 4349 00f5 19       		.uleb128 0x19
 4350 00f6 00       		.byte	0
 4351 00f7 00       		.byte	0
 4352 00f8 11       		.uleb128 0x11
 4353 00f9 34       		.uleb128 0x34
 4354 00fa 00       		.byte	0
 4355 00fb 03       		.uleb128 0x3
 4356 00fc 0E       		.uleb128 0xe
 4357 00fd 3A       		.uleb128 0x3a
 4358 00fe 0B       		.uleb128 0xb
 4359 00ff 3B       		.uleb128 0x3b
 4360 0100 05       		.uleb128 0x5
 4361 0101 49       		.uleb128 0x49
 4362 0102 13       		.uleb128 0x13
 4363 0103 02       		.uleb128 0x2
 4364 0104 18       		.uleb128 0x18
 4365 0105 00       		.byte	0
 4366 0106 00       		.byte	0
 4367 0107 12       		.uleb128 0x12
 4368 0108 2E       		.uleb128 0x2e
 4369 0109 00       		.byte	0
 4370 010a 3F       		.uleb128 0x3f
 4371 010b 19       		.uleb128 0x19
 4372 010c 03       		.uleb128 0x3
 4373 010d 0E       		.uleb128 0xe
 4374 010e 3A       		.uleb128 0x3a
 4375 010f 0B       		.uleb128 0xb
 4376 0110 3B       		.uleb128 0x3b
 4377 0111 05       		.uleb128 0x5
 4378 0112 27       		.uleb128 0x27
 4379 0113 19       		.uleb128 0x19
 4380 0114 49       		.uleb128 0x49
 4381 0115 13       		.uleb128 0x13
 4382 0116 11       		.uleb128 0x11
 4383 0117 01       		.uleb128 0x1
 4384 0118 12       		.uleb128 0x12
 4385 0119 06       		.uleb128 0x6
 4386 011a 40       		.uleb128 0x40
 4387 011b 18       		.uleb128 0x18
 4388 011c 9742     		.uleb128 0x2117
 4389 011e 19       		.uleb128 0x19
 4390 011f 00       		.byte	0
 4391 0120 00       		.byte	0
 4392 0121 13       		.uleb128 0x13
 4393 0122 898201   		.uleb128 0x4109
 4394 0125 01       		.byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 138


 4395 0126 11       		.uleb128 0x11
 4396 0127 01       		.uleb128 0x1
 4397 0128 31       		.uleb128 0x31
 4398 0129 13       		.uleb128 0x13
 4399 012a 00       		.byte	0
 4400 012b 00       		.byte	0
 4401 012c 14       		.uleb128 0x14
 4402 012d 8A8201   		.uleb128 0x410a
 4403 0130 00       		.byte	0
 4404 0131 02       		.uleb128 0x2
 4405 0132 18       		.uleb128 0x18
 4406 0133 9142     		.uleb128 0x2111
 4407 0135 18       		.uleb128 0x18
 4408 0136 00       		.byte	0
 4409 0137 00       		.byte	0
 4410 0138 15       		.uleb128 0x15
 4411 0139 34       		.uleb128 0x34
 4412 013a 00       		.byte	0
 4413 013b 03       		.uleb128 0x3
 4414 013c 0E       		.uleb128 0xe
 4415 013d 3A       		.uleb128 0x3a
 4416 013e 0B       		.uleb128 0xb
 4417 013f 3B       		.uleb128 0x3b
 4418 0140 05       		.uleb128 0x5
 4419 0141 49       		.uleb128 0x49
 4420 0142 13       		.uleb128 0x13
 4421 0143 1C       		.uleb128 0x1c
 4422 0144 06       		.uleb128 0x6
 4423 0145 00       		.byte	0
 4424 0146 00       		.byte	0
 4425 0147 16       		.uleb128 0x16
 4426 0148 898201   		.uleb128 0x4109
 4427 014b 01       		.byte	0x1
 4428 014c 11       		.uleb128 0x11
 4429 014d 01       		.uleb128 0x1
 4430 014e 31       		.uleb128 0x31
 4431 014f 13       		.uleb128 0x13
 4432 0150 01       		.uleb128 0x1
 4433 0151 13       		.uleb128 0x13
 4434 0152 00       		.byte	0
 4435 0153 00       		.byte	0
 4436 0154 17       		.uleb128 0x17
 4437 0155 2E       		.uleb128 0x2e
 4438 0156 01       		.byte	0x1
 4439 0157 3F       		.uleb128 0x3f
 4440 0158 19       		.uleb128 0x19
 4441 0159 03       		.uleb128 0x3
 4442 015a 0E       		.uleb128 0xe
 4443 015b 3A       		.uleb128 0x3a
 4444 015c 0B       		.uleb128 0xb
 4445 015d 3B       		.uleb128 0x3b
 4446 015e 05       		.uleb128 0x5
 4447 015f 27       		.uleb128 0x27
 4448 0160 19       		.uleb128 0x19
 4449 0161 11       		.uleb128 0x11
 4450 0162 01       		.uleb128 0x1
 4451 0163 12       		.uleb128 0x12
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 139


 4452 0164 06       		.uleb128 0x6
 4453 0165 40       		.uleb128 0x40
 4454 0166 18       		.uleb128 0x18
 4455 0167 9642     		.uleb128 0x2116
 4456 0169 19       		.uleb128 0x19
 4457 016a 01       		.uleb128 0x1
 4458 016b 13       		.uleb128 0x13
 4459 016c 00       		.byte	0
 4460 016d 00       		.byte	0
 4461 016e 18       		.uleb128 0x18
 4462 016f 2E       		.uleb128 0x2e
 4463 0170 01       		.byte	0x1
 4464 0171 03       		.uleb128 0x3
 4465 0172 0E       		.uleb128 0xe
 4466 0173 3A       		.uleb128 0x3a
 4467 0174 0B       		.uleb128 0xb
 4468 0175 3B       		.uleb128 0x3b
 4469 0176 05       		.uleb128 0x5
 4470 0177 27       		.uleb128 0x27
 4471 0178 19       		.uleb128 0x19
 4472 0179 11       		.uleb128 0x11
 4473 017a 01       		.uleb128 0x1
 4474 017b 12       		.uleb128 0x12
 4475 017c 06       		.uleb128 0x6
 4476 017d 40       		.uleb128 0x40
 4477 017e 18       		.uleb128 0x18
 4478 017f 9642     		.uleb128 0x2116
 4479 0181 19       		.uleb128 0x19
 4480 0182 01       		.uleb128 0x1
 4481 0183 13       		.uleb128 0x13
 4482 0184 00       		.byte	0
 4483 0185 00       		.byte	0
 4484 0186 19       		.uleb128 0x19
 4485 0187 34       		.uleb128 0x34
 4486 0188 00       		.byte	0
 4487 0189 03       		.uleb128 0x3
 4488 018a 08       		.uleb128 0x8
 4489 018b 3A       		.uleb128 0x3a
 4490 018c 0B       		.uleb128 0xb
 4491 018d 3B       		.uleb128 0x3b
 4492 018e 05       		.uleb128 0x5
 4493 018f 49       		.uleb128 0x49
 4494 0190 13       		.uleb128 0x13
 4495 0191 02       		.uleb128 0x2
 4496 0192 17       		.uleb128 0x17
 4497 0193 00       		.byte	0
 4498 0194 00       		.byte	0
 4499 0195 1A       		.uleb128 0x1a
 4500 0196 01       		.uleb128 0x1
 4501 0197 01       		.byte	0x1
 4502 0198 49       		.uleb128 0x49
 4503 0199 13       		.uleb128 0x13
 4504 019a 01       		.uleb128 0x1
 4505 019b 13       		.uleb128 0x13
 4506 019c 00       		.byte	0
 4507 019d 00       		.byte	0
 4508 019e 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 140


 4509 019f 21       		.uleb128 0x21
 4510 01a0 00       		.byte	0
 4511 01a1 49       		.uleb128 0x49
 4512 01a2 13       		.uleb128 0x13
 4513 01a3 2F       		.uleb128 0x2f
 4514 01a4 0B       		.uleb128 0xb
 4515 01a5 00       		.byte	0
 4516 01a6 00       		.byte	0
 4517 01a7 1C       		.uleb128 0x1c
 4518 01a8 34       		.uleb128 0x34
 4519 01a9 00       		.byte	0
 4520 01aa 03       		.uleb128 0x3
 4521 01ab 0E       		.uleb128 0xe
 4522 01ac 3A       		.uleb128 0x3a
 4523 01ad 0B       		.uleb128 0xb
 4524 01ae 3B       		.uleb128 0x3b
 4525 01af 0B       		.uleb128 0xb
 4526 01b0 49       		.uleb128 0x49
 4527 01b1 13       		.uleb128 0x13
 4528 01b2 02       		.uleb128 0x2
 4529 01b3 18       		.uleb128 0x18
 4530 01b4 00       		.byte	0
 4531 01b5 00       		.byte	0
 4532 01b6 1D       		.uleb128 0x1d
 4533 01b7 34       		.uleb128 0x34
 4534 01b8 00       		.byte	0
 4535 01b9 03       		.uleb128 0x3
 4536 01ba 0E       		.uleb128 0xe
 4537 01bb 3A       		.uleb128 0x3a
 4538 01bc 0B       		.uleb128 0xb
 4539 01bd 3B       		.uleb128 0x3b
 4540 01be 0B       		.uleb128 0xb
 4541 01bf 49       		.uleb128 0x49
 4542 01c0 13       		.uleb128 0x13
 4543 01c1 3F       		.uleb128 0x3f
 4544 01c2 19       		.uleb128 0x19
 4545 01c3 02       		.uleb128 0x2
 4546 01c4 18       		.uleb128 0x18
 4547 01c5 00       		.byte	0
 4548 01c6 00       		.byte	0
 4549 01c7 1E       		.uleb128 0x1e
 4550 01c8 26       		.uleb128 0x26
 4551 01c9 00       		.byte	0
 4552 01ca 49       		.uleb128 0x49
 4553 01cb 13       		.uleb128 0x13
 4554 01cc 00       		.byte	0
 4555 01cd 00       		.byte	0
 4556 01ce 1F       		.uleb128 0x1f
 4557 01cf 2E       		.uleb128 0x2e
 4558 01d0 00       		.byte	0
 4559 01d1 3F       		.uleb128 0x3f
 4560 01d2 19       		.uleb128 0x19
 4561 01d3 3C       		.uleb128 0x3c
 4562 01d4 19       		.uleb128 0x19
 4563 01d5 6E       		.uleb128 0x6e
 4564 01d6 0E       		.uleb128 0xe
 4565 01d7 03       		.uleb128 0x3
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 141


 4566 01d8 0E       		.uleb128 0xe
 4567 01d9 3A       		.uleb128 0x3a
 4568 01da 0B       		.uleb128 0xb
 4569 01db 3B       		.uleb128 0x3b
 4570 01dc 0B       		.uleb128 0xb
 4571 01dd 00       		.byte	0
 4572 01de 00       		.byte	0
 4573 01df 00       		.byte	0
 4574              		.section	.debug_loc,"",%progbits
 4575              	.Ldebug_loc0:
 4576              	.LLST0:
 4577 0000 00000000 		.4byte	.LVL0
 4578 0004 07000000 		.4byte	.LVL1-1
 4579 0008 0100     		.2byte	0x1
 4580 000a 50       		.byte	0x50
 4581 000b 07000000 		.4byte	.LVL1-1
 4582 000f 12000000 		.4byte	.LVL3
 4583 0013 0100     		.2byte	0x1
 4584 0015 54       		.byte	0x54
 4585 0016 12000000 		.4byte	.LVL3
 4586 001a 20000000 		.4byte	.LFE4
 4587 001e 0400     		.2byte	0x4
 4588 0020 F3       		.byte	0xf3
 4589 0021 01       		.uleb128 0x1
 4590 0022 50       		.byte	0x50
 4591 0023 9F       		.byte	0x9f
 4592 0024 00000000 		.4byte	0
 4593 0028 00000000 		.4byte	0
 4594              	.LLST1:
 4595 002c 08000000 		.4byte	.LVL1
 4596 0030 19000000 		.4byte	.LVL5-1
 4597 0034 0100     		.2byte	0x1
 4598 0036 50       		.byte	0x50
 4599 0037 00000000 		.4byte	0
 4600 003b 00000000 		.4byte	0
 4601              	.LLST2:
 4602 003f 10000000 		.4byte	.LVL2
 4603 0043 14000000 		.4byte	.LVL4
 4604 0047 0100     		.2byte	0x1
 4605 0049 53       		.byte	0x53
 4606 004a 14000000 		.4byte	.LVL4
 4607 004e 1A000000 		.4byte	.LVL6
 4608 0052 0100     		.2byte	0x1
 4609 0054 54       		.byte	0x54
 4610 0055 00000000 		.4byte	0
 4611 0059 00000000 		.4byte	0
 4612              	.LLST3:
 4613 005d 06000000 		.4byte	.LVL8
 4614 0061 11000000 		.4byte	.LVL10-1
 4615 0065 0100     		.2byte	0x1
 4616 0067 50       		.byte	0x50
 4617 0068 00000000 		.4byte	0
 4618 006c 00000000 		.4byte	0
 4619              	.LLST4:
 4620 0070 0E000000 		.4byte	.LVL9
 4621 0074 14000000 		.4byte	.LVL11
 4622 0078 0100     		.2byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 142


 4623 007a 54       		.byte	0x54
 4624 007b 14000000 		.4byte	.LVL11
 4625 007f 1C000000 		.4byte	.LFE6
 4626 0083 0100     		.2byte	0x1
 4627 0085 50       		.byte	0x50
 4628 0086 00000000 		.4byte	0
 4629 008a 00000000 		.4byte	0
 4630              	.LLST5:
 4631 008e 00000000 		.4byte	.LVL12
 4632 0092 07000000 		.4byte	.LVL13-1
 4633 0096 0100     		.2byte	0x1
 4634 0098 50       		.byte	0x50
 4635 0099 07000000 		.4byte	.LVL13-1
 4636 009d 14000000 		.4byte	.LVL14
 4637 00a1 0100     		.2byte	0x1
 4638 00a3 54       		.byte	0x54
 4639 00a4 14000000 		.4byte	.LVL14
 4640 00a8 30000000 		.4byte	.LFE7
 4641 00ac 0400     		.2byte	0x4
 4642 00ae F3       		.byte	0xf3
 4643 00af 01       		.uleb128 0x1
 4644 00b0 50       		.byte	0x50
 4645 00b1 9F       		.byte	0x9f
 4646 00b2 00000000 		.4byte	0
 4647 00b6 00000000 		.4byte	0
 4648              	.LLST6:
 4649 00ba 08000000 		.4byte	.LVL13
 4650 00be 23000000 		.4byte	.LVL15-1
 4651 00c2 0100     		.2byte	0x1
 4652 00c4 50       		.byte	0x50
 4653 00c5 00000000 		.4byte	0
 4654 00c9 00000000 		.4byte	0
 4655              	.LLST7:
 4656 00cd 00000000 		.4byte	.LVL17
 4657 00d1 04000000 		.4byte	.LVL18
 4658 00d5 0100     		.2byte	0x1
 4659 00d7 50       		.byte	0x50
 4660 00d8 04000000 		.4byte	.LVL18
 4661 00dc 14000000 		.4byte	.LFE17
 4662 00e0 0100     		.2byte	0x1
 4663 00e2 52       		.byte	0x52
 4664 00e3 00000000 		.4byte	0
 4665 00e7 00000000 		.4byte	0
 4666              	.LLST8:
 4667 00eb 00000000 		.4byte	.LVL23
 4668 00ef 04000000 		.4byte	.LVL24
 4669 00f3 0100     		.2byte	0x1
 4670 00f5 50       		.byte	0x50
 4671 00f6 04000000 		.4byte	.LVL24
 4672 00fa 14000000 		.4byte	.LFE26
 4673 00fe 0400     		.2byte	0x4
 4674 0100 F3       		.byte	0xf3
 4675 0101 01       		.uleb128 0x1
 4676 0102 50       		.byte	0x50
 4677 0103 9F       		.byte	0x9f
 4678 0104 00000000 		.4byte	0
 4679 0108 00000000 		.4byte	0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 143


 4680              	.LLST9:
 4681 010c 00000000 		.4byte	.LVL25
 4682 0110 08000000 		.4byte	.LVL26
 4683 0114 0100     		.2byte	0x1
 4684 0116 50       		.byte	0x50
 4685 0117 08000000 		.4byte	.LVL26
 4686 011b 18000000 		.4byte	.LFE27
 4687 011f 0400     		.2byte	0x4
 4688 0121 F3       		.byte	0xf3
 4689 0122 01       		.uleb128 0x1
 4690 0123 50       		.byte	0x50
 4691 0124 9F       		.byte	0x9f
 4692 0125 00000000 		.4byte	0
 4693 0129 00000000 		.4byte	0
 4694              	.LLST10:
 4695 012d 00000000 		.4byte	.LVL27
 4696 0131 04000000 		.4byte	.LVL28
 4697 0135 0100     		.2byte	0x1
 4698 0137 50       		.byte	0x50
 4699 0138 04000000 		.4byte	.LVL28
 4700 013c 14000000 		.4byte	.LFE28
 4701 0140 0400     		.2byte	0x4
 4702 0142 F3       		.byte	0xf3
 4703 0143 01       		.uleb128 0x1
 4704 0144 50       		.byte	0x50
 4705 0145 9F       		.byte	0x9f
 4706 0146 00000000 		.4byte	0
 4707 014a 00000000 		.4byte	0
 4708              	.LLST11:
 4709 014e 00000000 		.4byte	.LVL29
 4710 0152 04000000 		.4byte	.LVL30
 4711 0156 0100     		.2byte	0x1
 4712 0158 50       		.byte	0x50
 4713 0159 04000000 		.4byte	.LVL30
 4714 015d 14000000 		.4byte	.LFE29
 4715 0161 0400     		.2byte	0x4
 4716 0163 F3       		.byte	0xf3
 4717 0164 01       		.uleb128 0x1
 4718 0165 50       		.byte	0x50
 4719 0166 9F       		.byte	0x9f
 4720 0167 00000000 		.4byte	0
 4721 016b 00000000 		.4byte	0
 4722              	.LLST12:
 4723 016f 00000000 		.4byte	.LVL31
 4724 0173 04000000 		.4byte	.LVL32
 4725 0177 0100     		.2byte	0x1
 4726 0179 50       		.byte	0x50
 4727 017a 04000000 		.4byte	.LVL32
 4728 017e 14000000 		.4byte	.LFE30
 4729 0182 0400     		.2byte	0x4
 4730 0184 F3       		.byte	0xf3
 4731 0185 01       		.uleb128 0x1
 4732 0186 50       		.byte	0x50
 4733 0187 9F       		.byte	0x9f
 4734 0188 00000000 		.4byte	0
 4735 018c 00000000 		.4byte	0
 4736              	.LLST13:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 144


 4737 0190 00000000 		.4byte	.LVL34
 4738 0194 13000000 		.4byte	.LVL35-1
 4739 0198 0100     		.2byte	0x1
 4740 019a 50       		.byte	0x50
 4741 019b 13000000 		.4byte	.LVL35-1
 4742 019f 18000000 		.4byte	.LVL36
 4743 01a3 0100     		.2byte	0x1
 4744 01a5 54       		.byte	0x54
 4745 01a6 18000000 		.4byte	.LVL36
 4746 01aa 28000000 		.4byte	.LVL38
 4747 01ae 0400     		.2byte	0x4
 4748 01b0 F3       		.byte	0xf3
 4749 01b1 01       		.uleb128 0x1
 4750 01b2 50       		.byte	0x50
 4751 01b3 9F       		.byte	0x9f
 4752 01b4 28000000 		.4byte	.LVL38
 4753 01b8 2A000000 		.4byte	.LVL39
 4754 01bc 0100     		.2byte	0x1
 4755 01be 50       		.byte	0x50
 4756 01bf 2A000000 		.4byte	.LVL39
 4757 01c3 2E000000 		.4byte	.LVL40
 4758 01c7 0100     		.2byte	0x1
 4759 01c9 54       		.byte	0x54
 4760 01ca 2E000000 		.4byte	.LVL40
 4761 01ce 38000000 		.4byte	.LFE12
 4762 01d2 0400     		.2byte	0x4
 4763 01d4 F3       		.byte	0xf3
 4764 01d5 01       		.uleb128 0x1
 4765 01d6 50       		.byte	0x50
 4766 01d7 9F       		.byte	0x9f
 4767 01d8 00000000 		.4byte	0
 4768 01dc 00000000 		.4byte	0
 4769              	.LLST14:
 4770 01e0 14000000 		.4byte	.LVL35
 4771 01e4 25000000 		.4byte	.LVL37-1
 4772 01e8 0100     		.2byte	0x1
 4773 01ea 50       		.byte	0x50
 4774 01eb 00000000 		.4byte	0
 4775 01ef 00000000 		.4byte	0
 4776              	.LLST15:
 4777 01f3 00000000 		.4byte	.LVL41
 4778 01f7 0C000000 		.4byte	.LVL43
 4779 01fb 0100     		.2byte	0x1
 4780 01fd 50       		.byte	0x50
 4781 01fe 0C000000 		.4byte	.LVL43
 4782 0202 20000000 		.4byte	.LFE20
 4783 0206 0400     		.2byte	0x4
 4784 0208 F3       		.byte	0xf3
 4785 0209 01       		.uleb128 0x1
 4786 020a 50       		.byte	0x50
 4787 020b 9F       		.byte	0x9f
 4788 020c 00000000 		.4byte	0
 4789 0210 00000000 		.4byte	0
 4790              	.LLST16:
 4791 0214 00000000 		.4byte	.LVL41
 4792 0218 0F000000 		.4byte	.LVL44-1
 4793 021c 0100     		.2byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 145


 4794 021e 51       		.byte	0x51
 4795 021f 0F000000 		.4byte	.LVL44-1
 4796 0223 1E000000 		.4byte	.LVL46
 4797 0227 0100     		.2byte	0x1
 4798 0229 55       		.byte	0x55
 4799 022a 1E000000 		.4byte	.LVL46
 4800 022e 20000000 		.4byte	.LFE20
 4801 0232 0400     		.2byte	0x4
 4802 0234 F3       		.byte	0xf3
 4803 0235 01       		.uleb128 0x1
 4804 0236 51       		.byte	0x51
 4805 0237 9F       		.byte	0x9f
 4806 0238 00000000 		.4byte	0
 4807 023c 00000000 		.4byte	0
 4808              	.LLST17:
 4809 0240 00000000 		.4byte	.LVL47
 4810 0244 0A000000 		.4byte	.LVL49
 4811 0248 0100     		.2byte	0x1
 4812 024a 50       		.byte	0x50
 4813 024b 0A000000 		.4byte	.LVL49
 4814 024f 1C000000 		.4byte	.LFE21
 4815 0253 0400     		.2byte	0x4
 4816 0255 F3       		.byte	0xf3
 4817 0256 01       		.uleb128 0x1
 4818 0257 50       		.byte	0x50
 4819 0258 9F       		.byte	0x9f
 4820 0259 00000000 		.4byte	0
 4821 025d 00000000 		.4byte	0
 4822              	.LLST18:
 4823 0261 00000000 		.4byte	.LVL51
 4824 0265 0C000000 		.4byte	.LVL53
 4825 0269 0100     		.2byte	0x1
 4826 026b 50       		.byte	0x50
 4827 026c 0C000000 		.4byte	.LVL53
 4828 0270 22000000 		.4byte	.LFE22
 4829 0274 0400     		.2byte	0x4
 4830 0276 F3       		.byte	0xf3
 4831 0277 01       		.uleb128 0x1
 4832 0278 50       		.byte	0x50
 4833 0279 9F       		.byte	0x9f
 4834 027a 00000000 		.4byte	0
 4835 027e 00000000 		.4byte	0
 4836              	.LLST19:
 4837 0282 00000000 		.4byte	.LVL51
 4838 0286 0F000000 		.4byte	.LVL54-1
 4839 028a 0100     		.2byte	0x1
 4840 028c 51       		.byte	0x51
 4841 028d 0F000000 		.4byte	.LVL54-1
 4842 0291 20000000 		.4byte	.LVL56
 4843 0295 0100     		.2byte	0x1
 4844 0297 55       		.byte	0x55
 4845 0298 20000000 		.4byte	.LVL56
 4846 029c 22000000 		.4byte	.LFE22
 4847 02a0 0400     		.2byte	0x4
 4848 02a2 F3       		.byte	0xf3
 4849 02a3 01       		.uleb128 0x1
 4850 02a4 51       		.byte	0x51
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 146


 4851 02a5 9F       		.byte	0x9f
 4852 02a6 00000000 		.4byte	0
 4853 02aa 00000000 		.4byte	0
 4854              	.LLST20:
 4855 02ae 00000000 		.4byte	.LVL57
 4856 02b2 0A000000 		.4byte	.LVL59
 4857 02b6 0100     		.2byte	0x1
 4858 02b8 50       		.byte	0x50
 4859 02b9 0A000000 		.4byte	.LVL59
 4860 02bd 1E000000 		.4byte	.LFE23
 4861 02c1 0400     		.2byte	0x4
 4862 02c3 F3       		.byte	0xf3
 4863 02c4 01       		.uleb128 0x1
 4864 02c5 50       		.byte	0x50
 4865 02c6 9F       		.byte	0x9f
 4866 02c7 00000000 		.4byte	0
 4867 02cb 00000000 		.4byte	0
 4868              	.LLST21:
 4869 02cf 00000000 		.4byte	.LVL61
 4870 02d3 0C000000 		.4byte	.LVL62
 4871 02d7 0100     		.2byte	0x1
 4872 02d9 50       		.byte	0x50
 4873 02da 0C000000 		.4byte	.LVL62
 4874 02de 4C000000 		.4byte	.LFE24
 4875 02e2 0400     		.2byte	0x4
 4876 02e4 F3       		.byte	0xf3
 4877 02e5 01       		.uleb128 0x1
 4878 02e6 50       		.byte	0x50
 4879 02e7 9F       		.byte	0x9f
 4880 02e8 00000000 		.4byte	0
 4881 02ec 00000000 		.4byte	0
 4882              	.LLST22:
 4883 02f0 00000000 		.4byte	.LVL61
 4884 02f4 0F000000 		.4byte	.LVL63-1
 4885 02f8 0100     		.2byte	0x1
 4886 02fa 51       		.byte	0x51
 4887 02fb 0F000000 		.4byte	.LVL63-1
 4888 02ff 4C000000 		.4byte	.LFE24
 4889 0303 0400     		.2byte	0x4
 4890 0305 F3       		.byte	0xf3
 4891 0306 01       		.uleb128 0x1
 4892 0307 51       		.byte	0x51
 4893 0308 9F       		.byte	0x9f
 4894 0309 00000000 		.4byte	0
 4895 030d 00000000 		.4byte	0
 4896              	.LLST23:
 4897 0311 26000000 		.4byte	.LVL66
 4898 0315 45000000 		.4byte	.LVL72-1
 4899 0319 0100     		.2byte	0x1
 4900 031b 50       		.byte	0x50
 4901 031c 00000000 		.4byte	0
 4902 0320 00000000 		.4byte	0
 4903              	.LLST24:
 4904 0324 22000000 		.4byte	.LVL65
 4905 0328 46000000 		.4byte	.LVL73
 4906 032c 0100     		.2byte	0x1
 4907 032e 55       		.byte	0x55
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 147


 4908 032f 00000000 		.4byte	0
 4909 0333 00000000 		.4byte	0
 4910              	.LLST25:
 4911 0337 32000000 		.4byte	.LVL67
 4912 033b 38000000 		.4byte	.LVL68
 4913 033f 0100     		.2byte	0x1
 4914 0341 51       		.byte	0x51
 4915 0342 3A000000 		.4byte	.LVL69
 4916 0346 3C000000 		.4byte	.LVL70
 4917 034a 0100     		.2byte	0x1
 4918 034c 51       		.byte	0x51
 4919 034d 3C000000 		.4byte	.LVL70
 4920 0351 40000000 		.4byte	.LVL71
 4921 0355 0100     		.2byte	0x1
 4922 0357 53       		.byte	0x53
 4923 0358 40000000 		.4byte	.LVL71
 4924 035c 45000000 		.4byte	.LVL72-1
 4925 0360 0100     		.2byte	0x1
 4926 0362 51       		.byte	0x51
 4927 0363 00000000 		.4byte	0
 4928 0367 00000000 		.4byte	0
 4929              	.LLST26:
 4930 036b 00000000 		.4byte	.LVL74
 4931 036f 0A000000 		.4byte	.LVL75
 4932 0373 0100     		.2byte	0x1
 4933 0375 50       		.byte	0x50
 4934 0376 0A000000 		.4byte	.LVL75
 4935 037a 2C000000 		.4byte	.LFE25
 4936 037e 0400     		.2byte	0x4
 4937 0380 F3       		.byte	0xf3
 4938 0381 01       		.uleb128 0x1
 4939 0382 50       		.byte	0x50
 4940 0383 9F       		.byte	0x9f
 4941 0384 00000000 		.4byte	0
 4942 0388 00000000 		.4byte	0
 4943              	.LLST27:
 4944 038c 24000000 		.4byte	.LVL77
 4945 0390 26000000 		.4byte	.LVL78
 4946 0394 0100     		.2byte	0x1
 4947 0396 50       		.byte	0x50
 4948 0397 00000000 		.4byte	0
 4949 039b 00000000 		.4byte	0
 4950              	.LLST28:
 4951 039f 00000000 		.4byte	.LVL79
 4952 03a3 06000000 		.4byte	.LVL80
 4953 03a7 0100     		.2byte	0x1
 4954 03a9 50       		.byte	0x50
 4955 03aa 06000000 		.4byte	.LVL80
 4956 03ae 26000000 		.4byte	.LVL84
 4957 03b2 0100     		.2byte	0x1
 4958 03b4 54       		.byte	0x54
 4959 03b5 00000000 		.4byte	0
 4960 03b9 00000000 		.4byte	0
 4961              	.LLST29:
 4962 03bd 00000000 		.4byte	.LVL85
 4963 03c1 08000000 		.4byte	.LVL86
 4964 03c5 0100     		.2byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 148


 4965 03c7 50       		.byte	0x50
 4966 03c8 08000000 		.4byte	.LVL86
 4967 03cc 14000000 		.4byte	.LFE34
 4968 03d0 0400     		.2byte	0x4
 4969 03d2 F3       		.byte	0xf3
 4970 03d3 01       		.uleb128 0x1
 4971 03d4 50       		.byte	0x50
 4972 03d5 9F       		.byte	0x9f
 4973 03d6 00000000 		.4byte	0
 4974 03da 00000000 		.4byte	0
 4975              	.LLST30:
 4976 03de 00000000 		.4byte	.LVL88
 4977 03e2 0F000000 		.4byte	.LVL89-1
 4978 03e6 0100     		.2byte	0x1
 4979 03e8 50       		.byte	0x50
 4980 03e9 0F000000 		.4byte	.LVL89-1
 4981 03ed D4000000 		.4byte	.LVL111
 4982 03f1 0100     		.2byte	0x1
 4983 03f3 54       		.byte	0x54
 4984 03f4 D4000000 		.4byte	.LVL111
 4985 03f8 02010000 		.4byte	.LVL114
 4986 03fc 0700     		.2byte	0x7
 4987 03fe 74       		.byte	0x74
 4988 03ff B3998080 		.sleb128 -268432205
 4988      7F
 4989 0404 9F       		.byte	0x9f
 4990 0405 02010000 		.4byte	.LVL114
 4991 0409 08010000 		.4byte	.LVL115
 4992 040d 0100     		.2byte	0x1
 4993 040f 54       		.byte	0x54
 4994 0410 08010000 		.4byte	.LVL115
 4995 0414 10010000 		.4byte	.LVL117
 4996 0418 0300     		.2byte	0x3
 4997 041a 77       		.byte	0x77
 4998 041b 03       		.sleb128 3
 4999 041c 9F       		.byte	0x9f
 5000 041d 10010000 		.4byte	.LVL117
 5001 0421 64010000 		.4byte	.LFE8
 5002 0425 0400     		.2byte	0x4
 5003 0427 F3       		.byte	0xf3
 5004 0428 01       		.uleb128 0x1
 5005 0429 50       		.byte	0x50
 5006 042a 9F       		.byte	0x9f
 5007 042b 00000000 		.4byte	0
 5008 042f 00000000 		.4byte	0
 5009              	.LLST31:
 5010 0433 2A000000 		.4byte	.LVL91
 5011 0437 34000000 		.4byte	.LVL93
 5012 043b 0100     		.2byte	0x1
 5013 043d 5A       		.byte	0x5a
 5014 043e 46000000 		.4byte	.LVL94
 5015 0442 50000000 		.4byte	.LVL96
 5016 0446 0100     		.2byte	0x1
 5017 0448 5A       		.byte	0x5a
 5018 0449 62000000 		.4byte	.LVL97
 5019 044d 6C000000 		.4byte	.LVL99
 5020 0451 0100     		.2byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 149


 5021 0453 5A       		.byte	0x5a
 5022 0454 7E000000 		.4byte	.LVL100
 5023 0458 88000000 		.4byte	.LVL102
 5024 045c 0100     		.2byte	0x1
 5025 045e 5A       		.byte	0x5a
 5026 045f 90000000 		.4byte	.LVL103
 5027 0463 02010000 		.4byte	.LVL114
 5028 0467 0100     		.2byte	0x1
 5029 0469 5A       		.byte	0x5a
 5030 046a 00000000 		.4byte	0
 5031 046e 00000000 		.4byte	0
 5032              	.LLST32:
 5033 0472 32000000 		.4byte	.LVL92
 5034 0476 34000000 		.4byte	.LVL93
 5035 047a 0100     		.2byte	0x1
 5036 047c 59       		.byte	0x59
 5037 047d 4E000000 		.4byte	.LVL95
 5038 0481 50000000 		.4byte	.LVL96
 5039 0485 0100     		.2byte	0x1
 5040 0487 59       		.byte	0x59
 5041 0488 6A000000 		.4byte	.LVL98
 5042 048c 6C000000 		.4byte	.LVL99
 5043 0490 0100     		.2byte	0x1
 5044 0492 59       		.byte	0x59
 5045 0493 86000000 		.4byte	.LVL101
 5046 0497 88000000 		.4byte	.LVL102
 5047 049b 0100     		.2byte	0x1
 5048 049d 59       		.byte	0x59
 5049 049e 98000000 		.4byte	.LVL104
 5050 04a2 02010000 		.4byte	.LVL114
 5051 04a6 0100     		.2byte	0x1
 5052 04a8 59       		.byte	0x59
 5053 04a9 00000000 		.4byte	0
 5054 04ad 00000000 		.4byte	0
 5055              	.LLST33:
 5056 04b1 9C000000 		.4byte	.LVL105
 5057 04b5 02010000 		.4byte	.LVL114
 5058 04b9 0100     		.2byte	0x1
 5059 04bb 56       		.byte	0x56
 5060 04bc 00000000 		.4byte	0
 5061 04c0 00000000 		.4byte	0
 5062              	.LLST34:
 5063 04c4 B0000000 		.4byte	.LVL107
 5064 04c8 B4000000 		.4byte	.LVL108
 5065 04cc 0200     		.2byte	0x2
 5066 04ce 49       		.byte	0x49
 5067 04cf 9F       		.byte	0x9f
 5068 04d0 BC000000 		.4byte	.LVL109
 5069 04d4 02010000 		.4byte	.LVL114
 5070 04d8 0100     		.2byte	0x1
 5071 04da 55       		.byte	0x55
 5072 04db 00000000 		.4byte	0
 5073 04df 00000000 		.4byte	0
 5074              	.LLST35:
 5075 04e3 12000000 		.4byte	.LVL90
 5076 04e7 AA000000 		.4byte	.LVL106
 5077 04eb 0200     		.2byte	0x2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 150


 5078 04ed 91       		.byte	0x91
 5079 04ee 5C       		.sleb128 -36
 5080 04ef B4000000 		.4byte	.LVL108
 5081 04f3 BC000000 		.4byte	.LVL109
 5082 04f7 0200     		.2byte	0x2
 5083 04f9 91       		.byte	0x91
 5084 04fa 5C       		.sleb128 -36
 5085 04fb 02010000 		.4byte	.LVL114
 5086 04ff 08010000 		.4byte	.LVL115
 5087 0503 0200     		.2byte	0x2
 5088 0505 91       		.byte	0x91
 5089 0506 5C       		.sleb128 -36
 5090 0507 00000000 		.4byte	0
 5091 050b 00000000 		.4byte	0
 5092              	.LLST36:
 5093 050f 00000000 		.4byte	.LVL118
 5094 0513 26000000 		.4byte	.LVL120
 5095 0517 0100     		.2byte	0x1
 5096 0519 50       		.byte	0x50
 5097 051a 26000000 		.4byte	.LVL120
 5098 051e 42000000 		.4byte	.LVL125
 5099 0522 0100     		.2byte	0x1
 5100 0524 54       		.byte	0x54
 5101 0525 00000000 		.4byte	0
 5102 0529 00000000 		.4byte	0
 5103              	.LLST37:
 5104 052d 04000000 		.4byte	.LVL119
 5105 0531 42000000 		.4byte	.LVL124
 5106 0535 0200     		.2byte	0x2
 5107 0537 30       		.byte	0x30
 5108 0538 9F       		.byte	0x9f
 5109 0539 42000000 		.4byte	.LVL124
 5110 053d 54000000 		.4byte	.LFE9
 5111 0541 0100     		.2byte	0x1
 5112 0543 50       		.byte	0x50
 5113 0544 00000000 		.4byte	0
 5114 0548 00000000 		.4byte	0
 5115              	.LLST38:
 5116 054c 00000000 		.4byte	.LVL126
 5117 0550 14000000 		.4byte	.LVL127
 5118 0554 0100     		.2byte	0x1
 5119 0556 50       		.byte	0x50
 5120 0557 14000000 		.4byte	.LVL127
 5121 055b 18000000 		.4byte	.LVL128
 5122 055f 0100     		.2byte	0x1
 5123 0561 53       		.byte	0x53
 5124 0562 18000000 		.4byte	.LVL128
 5125 0566 44000000 		.4byte	.LFE13
 5126 056a 0400     		.2byte	0x4
 5127 056c F3       		.byte	0xf3
 5128 056d 01       		.uleb128 0x1
 5129 056e 50       		.byte	0x50
 5130 056f 9F       		.byte	0x9f
 5131 0570 00000000 		.4byte	0
 5132 0574 00000000 		.4byte	0
 5133              	.LLST39:
 5134 0578 00000000 		.4byte	.LVL131
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 151


 5135 057c 1A000000 		.4byte	.LVL132
 5136 0580 0100     		.2byte	0x1
 5137 0582 50       		.byte	0x50
 5138 0583 1A000000 		.4byte	.LVL132
 5139 0587 4C000000 		.4byte	.LFE35
 5140 058b 0400     		.2byte	0x4
 5141 058d F3       		.byte	0xf3
 5142 058e 01       		.uleb128 0x1
 5143 058f 50       		.byte	0x50
 5144 0590 9F       		.byte	0x9f
 5145 0591 00000000 		.4byte	0
 5146 0595 00000000 		.4byte	0
 5147              	.LLST40:
 5148 0599 00000000 		.4byte	.LVL136
 5149 059d 02000000 		.4byte	.LVL137
 5150 05a1 0100     		.2byte	0x1
 5151 05a3 50       		.byte	0x50
 5152 05a4 02000000 		.4byte	.LVL137
 5153 05a8 10000000 		.4byte	.LFE42
 5154 05ac 0400     		.2byte	0x4
 5155 05ae F3       		.byte	0xf3
 5156 05af 01       		.uleb128 0x1
 5157 05b0 50       		.byte	0x50
 5158 05b1 9F       		.byte	0x9f
 5159 05b2 00000000 		.4byte	0
 5160 05b6 00000000 		.4byte	0
 5161              	.LLST41:
 5162 05ba 0C000000 		.4byte	.LVL140
 5163 05be 1C000000 		.4byte	.LVL143
 5164 05c2 0100     		.2byte	0x1
 5165 05c4 54       		.byte	0x54
 5166 05c5 1E000000 		.4byte	.LVL144
 5167 05c9 22000000 		.4byte	.LVL145
 5168 05cd 0100     		.2byte	0x1
 5169 05cf 54       		.byte	0x54
 5170 05d0 00000000 		.4byte	0
 5171 05d4 00000000 		.4byte	0
 5172              	.LLST42:
 5173 05d8 02000000 		.4byte	.LVL146
 5174 05dc 06000000 		.4byte	.LVL147
 5175 05e0 0200     		.2byte	0x2
 5176 05e2 30       		.byte	0x30
 5177 05e3 9F       		.byte	0x9f
 5178 05e4 06000000 		.4byte	.LVL147
 5179 05e8 1B000000 		.4byte	.LVL149-1
 5180 05ec 0100     		.2byte	0x1
 5181 05ee 53       		.byte	0x53
 5182 05ef 00000000 		.4byte	0
 5183 05f3 00000000 		.4byte	0
 5184              	.LLST43:
 5185 05f7 00000000 		.4byte	.LVL156
 5186 05fb 06000000 		.4byte	.LVL157
 5187 05ff 0100     		.2byte	0x1
 5188 0601 50       		.byte	0x50
 5189 0602 06000000 		.4byte	.LVL157
 5190 0606 10000000 		.4byte	.LFE49
 5191 060a 0400     		.2byte	0x4
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 152


 5192 060c F3       		.byte	0xf3
 5193 060d 01       		.uleb128 0x1
 5194 060e 50       		.byte	0x50
 5195 060f 9F       		.byte	0x9f
 5196 0610 00000000 		.4byte	0
 5197 0614 00000000 		.4byte	0
 5198              	.LLST44:
 5199 0618 00000000 		.4byte	.LVL158
 5200 061c 02000000 		.4byte	.LVL159
 5201 0620 0100     		.2byte	0x1
 5202 0622 50       		.byte	0x50
 5203 0623 02000000 		.4byte	.LVL159
 5204 0627 0C000000 		.4byte	.LFE50
 5205 062b 0400     		.2byte	0x4
 5206 062d F3       		.byte	0xf3
 5207 062e 01       		.uleb128 0x1
 5208 062f 50       		.byte	0x50
 5209 0630 9F       		.byte	0x9f
 5210 0631 00000000 		.4byte	0
 5211 0635 00000000 		.4byte	0
 5212              	.LLST45:
 5213 0639 00000000 		.4byte	.LVL161
 5214 063d 0A000000 		.4byte	.LVL163
 5215 0641 0100     		.2byte	0x1
 5216 0643 50       		.byte	0x50
 5217 0644 0A000000 		.4byte	.LVL163
 5218 0648 20000000 		.4byte	.LFE53
 5219 064c 0400     		.2byte	0x4
 5220 064e F3       		.byte	0xf3
 5221 064f 01       		.uleb128 0x1
 5222 0650 50       		.byte	0x50
 5223 0651 9F       		.byte	0x9f
 5224 0652 00000000 		.4byte	0
 5225 0656 00000000 		.4byte	0
 5226              	.LLST46:
 5227 065a 08000000 		.4byte	.LVL162
 5228 065e 12000000 		.4byte	.LVL164
 5229 0662 0100     		.2byte	0x1
 5230 0664 52       		.byte	0x52
 5231 0665 12000000 		.4byte	.LVL164
 5232 0669 20000000 		.4byte	.LFE53
 5233 066d 0100     		.2byte	0x1
 5234 066f 50       		.byte	0x50
 5235 0670 00000000 		.4byte	0
 5236 0674 00000000 		.4byte	0
 5237              	.LLST47:
 5238 0678 00000000 		.4byte	.LVL165
 5239 067c 0A000000 		.4byte	.LVL167
 5240 0680 0100     		.2byte	0x1
 5241 0682 50       		.byte	0x50
 5242 0683 0A000000 		.4byte	.LVL167
 5243 0687 20000000 		.4byte	.LFE54
 5244 068b 0400     		.2byte	0x4
 5245 068d F3       		.byte	0xf3
 5246 068e 01       		.uleb128 0x1
 5247 068f 50       		.byte	0x50
 5248 0690 9F       		.byte	0x9f
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 153


 5249 0691 00000000 		.4byte	0
 5250 0695 00000000 		.4byte	0
 5251              	.LLST48:
 5252 0699 08000000 		.4byte	.LVL166
 5253 069d 12000000 		.4byte	.LVL168
 5254 06a1 0100     		.2byte	0x1
 5255 06a3 52       		.byte	0x52
 5256 06a4 12000000 		.4byte	.LVL168
 5257 06a8 20000000 		.4byte	.LFE54
 5258 06ac 0100     		.2byte	0x1
 5259 06ae 50       		.byte	0x50
 5260 06af 00000000 		.4byte	0
 5261 06b3 00000000 		.4byte	0
 5262              	.LLST49:
 5263 06b7 00000000 		.4byte	.LVL169
 5264 06bb 0A000000 		.4byte	.LVL171
 5265 06bf 0100     		.2byte	0x1
 5266 06c1 50       		.byte	0x50
 5267 06c2 0A000000 		.4byte	.LVL171
 5268 06c6 20000000 		.4byte	.LFE55
 5269 06ca 0400     		.2byte	0x4
 5270 06cc F3       		.byte	0xf3
 5271 06cd 01       		.uleb128 0x1
 5272 06ce 50       		.byte	0x50
 5273 06cf 9F       		.byte	0x9f
 5274 06d0 00000000 		.4byte	0
 5275 06d4 00000000 		.4byte	0
 5276              	.LLST50:
 5277 06d8 08000000 		.4byte	.LVL170
 5278 06dc 12000000 		.4byte	.LVL172
 5279 06e0 0100     		.2byte	0x1
 5280 06e2 52       		.byte	0x52
 5281 06e3 12000000 		.4byte	.LVL172
 5282 06e7 20000000 		.4byte	.LFE55
 5283 06eb 0100     		.2byte	0x1
 5284 06ed 50       		.byte	0x50
 5285 06ee 00000000 		.4byte	0
 5286 06f2 00000000 		.4byte	0
 5287              	.LLST51:
 5288 06f6 00000000 		.4byte	.LVL173
 5289 06fa 08000000 		.4byte	.LVL174
 5290 06fe 0100     		.2byte	0x1
 5291 0700 50       		.byte	0x50
 5292 0701 08000000 		.4byte	.LVL174
 5293 0705 1C000000 		.4byte	.LVL178
 5294 0709 0400     		.2byte	0x4
 5295 070b F3       		.byte	0xf3
 5296 070c 01       		.uleb128 0x1
 5297 070d 50       		.byte	0x50
 5298 070e 9F       		.byte	0x9f
 5299 070f 1C000000 		.4byte	.LVL178
 5300 0713 22000000 		.4byte	.LVL179
 5301 0717 0100     		.2byte	0x1
 5302 0719 50       		.byte	0x50
 5303 071a 22000000 		.4byte	.LVL179
 5304 071e 36000000 		.4byte	.LVL183
 5305 0722 0400     		.2byte	0x4
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 154


 5306 0724 F3       		.byte	0xf3
 5307 0725 01       		.uleb128 0x1
 5308 0726 50       		.byte	0x50
 5309 0727 9F       		.byte	0x9f
 5310 0728 36000000 		.4byte	.LVL183
 5311 072c 3C000000 		.4byte	.LVL184
 5312 0730 0100     		.2byte	0x1
 5313 0732 50       		.byte	0x50
 5314 0733 3C000000 		.4byte	.LVL184
 5315 0737 50000000 		.4byte	.LVL188
 5316 073b 0400     		.2byte	0x4
 5317 073d F3       		.byte	0xf3
 5318 073e 01       		.uleb128 0x1
 5319 073f 50       		.byte	0x50
 5320 0740 9F       		.byte	0x9f
 5321 0741 50000000 		.4byte	.LVL188
 5322 0745 52000000 		.4byte	.LVL189
 5323 0749 0100     		.2byte	0x1
 5324 074b 50       		.byte	0x50
 5325 074c 52000000 		.4byte	.LVL189
 5326 0750 68000000 		.4byte	.LFE56
 5327 0754 0400     		.2byte	0x4
 5328 0756 F3       		.byte	0xf3
 5329 0757 01       		.uleb128 0x1
 5330 0758 50       		.byte	0x50
 5331 0759 9F       		.byte	0x9f
 5332 075a 00000000 		.4byte	0
 5333 075e 00000000 		.4byte	0
 5334              	.LLST52:
 5335 0762 00000000 		.4byte	.LVL173
 5336 0766 10000000 		.4byte	.LVL176
 5337 076a 0100     		.2byte	0x1
 5338 076c 51       		.byte	0x51
 5339 076d 10000000 		.4byte	.LVL176
 5340 0771 1C000000 		.4byte	.LVL178
 5341 0775 0400     		.2byte	0x4
 5342 0777 F3       		.byte	0xf3
 5343 0778 01       		.uleb128 0x1
 5344 0779 51       		.byte	0x51
 5345 077a 9F       		.byte	0x9f
 5346 077b 1C000000 		.4byte	.LVL178
 5347 077f 2A000000 		.4byte	.LVL181
 5348 0783 0100     		.2byte	0x1
 5349 0785 51       		.byte	0x51
 5350 0786 2A000000 		.4byte	.LVL181
 5351 078a 36000000 		.4byte	.LVL183
 5352 078e 0400     		.2byte	0x4
 5353 0790 F3       		.byte	0xf3
 5354 0791 01       		.uleb128 0x1
 5355 0792 51       		.byte	0x51
 5356 0793 9F       		.byte	0x9f
 5357 0794 36000000 		.4byte	.LVL183
 5358 0798 44000000 		.4byte	.LVL186
 5359 079c 0100     		.2byte	0x1
 5360 079e 51       		.byte	0x51
 5361 079f 44000000 		.4byte	.LVL186
 5362 07a3 50000000 		.4byte	.LVL188
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 155


 5363 07a7 0400     		.2byte	0x4
 5364 07a9 F3       		.byte	0xf3
 5365 07aa 01       		.uleb128 0x1
 5366 07ab 51       		.byte	0x51
 5367 07ac 9F       		.byte	0x9f
 5368 07ad 50000000 		.4byte	.LVL188
 5369 07b1 55000000 		.4byte	.LVL190-1
 5370 07b5 0100     		.2byte	0x1
 5371 07b7 51       		.byte	0x51
 5372 07b8 55000000 		.4byte	.LVL190-1
 5373 07bc 68000000 		.4byte	.LFE56
 5374 07c0 0400     		.2byte	0x4
 5375 07c2 F3       		.byte	0xf3
 5376 07c3 01       		.uleb128 0x1
 5377 07c4 51       		.byte	0x51
 5378 07c5 9F       		.byte	0x9f
 5379 07c6 00000000 		.4byte	0
 5380 07ca 00000000 		.4byte	0
 5381              	.LLST53:
 5382 07ce 0E000000 		.4byte	.LVL175
 5383 07d2 18000000 		.4byte	.LVL177
 5384 07d6 0100     		.2byte	0x1
 5385 07d8 52       		.byte	0x52
 5386 07d9 18000000 		.4byte	.LVL177
 5387 07dd 1C000000 		.4byte	.LVL178
 5388 07e1 0100     		.2byte	0x1
 5389 07e3 51       		.byte	0x51
 5390 07e4 28000000 		.4byte	.LVL180
 5391 07e8 32000000 		.4byte	.LVL182
 5392 07ec 0100     		.2byte	0x1
 5393 07ee 52       		.byte	0x52
 5394 07ef 32000000 		.4byte	.LVL182
 5395 07f3 36000000 		.4byte	.LVL183
 5396 07f7 0100     		.2byte	0x1
 5397 07f9 51       		.byte	0x51
 5398 07fa 42000000 		.4byte	.LVL185
 5399 07fe 4C000000 		.4byte	.LVL187
 5400 0802 0100     		.2byte	0x1
 5401 0804 52       		.byte	0x52
 5402 0805 4C000000 		.4byte	.LVL187
 5403 0809 50000000 		.4byte	.LVL188
 5404 080d 0100     		.2byte	0x1
 5405 080f 51       		.byte	0x51
 5406 0810 00000000 		.4byte	0
 5407 0814 00000000 		.4byte	0
 5408              		.section	.debug_aranges,"",%progbits
 5409 0000 CC010000 		.4byte	0x1cc
 5410 0004 0200     		.2byte	0x2
 5411 0006 00000000 		.4byte	.Ldebug_info0
 5412 000a 04       		.byte	0x4
 5413 000b 00       		.byte	0
 5414 000c 0000     		.2byte	0
 5415 000e 0000     		.2byte	0
 5416 0010 00000000 		.4byte	.LFB2
 5417 0014 14000000 		.4byte	.LFE2-.LFB2
 5418 0018 00000000 		.4byte	.LFB3
 5419 001c 10000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 156


 5420 0020 00000000 		.4byte	.LFB4
 5421 0024 20000000 		.4byte	.LFE4-.LFB4
 5422 0028 00000000 		.4byte	.LFB5
 5423 002c 38000000 		.4byte	.LFE5-.LFB5
 5424 0030 00000000 		.4byte	.LFB6
 5425 0034 1C000000 		.4byte	.LFE6-.LFB6
 5426 0038 00000000 		.4byte	.LFB7
 5427 003c 30000000 		.4byte	.LFE7-.LFB7
 5428 0040 00000000 		.4byte	.LFB10
 5429 0044 24000000 		.4byte	.LFE10-.LFB10
 5430 0048 00000000 		.4byte	.LFB11
 5431 004c 10000000 		.4byte	.LFE11-.LFB11
 5432 0050 00000000 		.4byte	.LFB14
 5433 0054 20000000 		.4byte	.LFE14-.LFB14
 5434 0058 00000000 		.4byte	.LFB15
 5435 005c 10000000 		.4byte	.LFE15-.LFB15
 5436 0060 00000000 		.4byte	.LFB16
 5437 0064 0C000000 		.4byte	.LFE16-.LFB16
 5438 0068 00000000 		.4byte	.LFB17
 5439 006c 14000000 		.4byte	.LFE17-.LFB17
 5440 0070 00000000 		.4byte	.LFB18
 5441 0074 10000000 		.4byte	.LFE18-.LFB18
 5442 0078 00000000 		.4byte	.LFB19
 5443 007c 0C000000 		.4byte	.LFE19-.LFB19
 5444 0080 00000000 		.4byte	.LFB26
 5445 0084 14000000 		.4byte	.LFE26-.LFB26
 5446 0088 00000000 		.4byte	.LFB27
 5447 008c 18000000 		.4byte	.LFE27-.LFB27
 5448 0090 00000000 		.4byte	.LFB28
 5449 0094 14000000 		.4byte	.LFE28-.LFB28
 5450 0098 00000000 		.4byte	.LFB29
 5451 009c 14000000 		.4byte	.LFE29-.LFB29
 5452 00a0 00000000 		.4byte	.LFB30
 5453 00a4 14000000 		.4byte	.LFE30-.LFB30
 5454 00a8 00000000 		.4byte	.LFB31
 5455 00ac 04000000 		.4byte	.LFE31-.LFB31
 5456 00b0 00000000 		.4byte	.LFB12
 5457 00b4 38000000 		.4byte	.LFE12-.LFB12
 5458 00b8 00000000 		.4byte	.LFB20
 5459 00bc 20000000 		.4byte	.LFE20-.LFB20
 5460 00c0 00000000 		.4byte	.LFB21
 5461 00c4 1C000000 		.4byte	.LFE21-.LFB21
 5462 00c8 00000000 		.4byte	.LFB22
 5463 00cc 22000000 		.4byte	.LFE22-.LFB22
 5464 00d0 00000000 		.4byte	.LFB23
 5465 00d4 1E000000 		.4byte	.LFE23-.LFB23
 5466 00d8 00000000 		.4byte	.LFB24
 5467 00dc 4C000000 		.4byte	.LFE24-.LFB24
 5468 00e0 00000000 		.4byte	.LFB25
 5469 00e4 2C000000 		.4byte	.LFE25-.LFB25
 5470 00e8 00000000 		.4byte	.LFB32
 5471 00ec 18000000 		.4byte	.LFE32-.LFB32
 5472 00f0 00000000 		.4byte	.LFB33
 5473 00f4 30000000 		.4byte	.LFE33-.LFB33
 5474 00f8 00000000 		.4byte	.LFB34
 5475 00fc 14000000 		.4byte	.LFE34-.LFB34
 5476 0100 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 157


 5477 0104 64010000 		.4byte	.LFE8-.LFB8
 5478 0108 00000000 		.4byte	.LFB9
 5479 010c 54000000 		.4byte	.LFE9-.LFB9
 5480 0110 00000000 		.4byte	.LFB13
 5481 0114 44000000 		.4byte	.LFE13-.LFB13
 5482 0118 00000000 		.4byte	.LFB35
 5483 011c 4C000000 		.4byte	.LFE35-.LFB35
 5484 0120 00000000 		.4byte	.LFB39
 5485 0124 10000000 		.4byte	.LFE39-.LFB39
 5486 0128 00000000 		.4byte	.LFB40
 5487 012c 10000000 		.4byte	.LFE40-.LFB40
 5488 0130 00000000 		.4byte	.LFB38
 5489 0134 18000000 		.4byte	.LFE38-.LFB38
 5490 0138 00000000 		.4byte	.LFB41
 5491 013c 10000000 		.4byte	.LFE41-.LFB41
 5492 0140 00000000 		.4byte	.LFB42
 5493 0144 10000000 		.4byte	.LFE42-.LFB42
 5494 0148 00000000 		.4byte	.LFB43
 5495 014c 10000000 		.4byte	.LFE43-.LFB43
 5496 0150 00000000 		.4byte	.LFB44
 5497 0154 10000000 		.4byte	.LFE44-.LFB44
 5498 0158 00000000 		.4byte	.LFB45
 5499 015c 20000000 		.4byte	.LFE45-.LFB45
 5500 0160 00000000 		.4byte	.LFB46
 5501 0164 10000000 		.4byte	.LFE46-.LFB46
 5502 0168 00000000 		.4byte	.LFB47
 5503 016c 10000000 		.4byte	.LFE47-.LFB47
 5504 0170 00000000 		.4byte	.LFB51
 5505 0174 28000000 		.4byte	.LFE51-.LFB51
 5506 0178 00000000 		.4byte	.LFB48
 5507 017c 0C000000 		.4byte	.LFE48-.LFB48
 5508 0180 00000000 		.4byte	.LFB37
 5509 0184 44000000 		.4byte	.LFE37-.LFB37
 5510 0188 00000000 		.4byte	.LFB36
 5511 018c 20000000 		.4byte	.LFE36-.LFB36
 5512 0190 00000000 		.4byte	.LFB49
 5513 0194 10000000 		.4byte	.LFE49-.LFB49
 5514 0198 00000000 		.4byte	.LFB50
 5515 019c 0C000000 		.4byte	.LFE50-.LFB50
 5516 01a0 00000000 		.4byte	.LFB52
 5517 01a4 70000000 		.4byte	.LFE52-.LFB52
 5518 01a8 00000000 		.4byte	.LFB53
 5519 01ac 20000000 		.4byte	.LFE53-.LFB53
 5520 01b0 00000000 		.4byte	.LFB54
 5521 01b4 20000000 		.4byte	.LFE54-.LFB54
 5522 01b8 00000000 		.4byte	.LFB55
 5523 01bc 20000000 		.4byte	.LFE55-.LFB55
 5524 01c0 00000000 		.4byte	.LFB56
 5525 01c4 68000000 		.4byte	.LFE56-.LFB56
 5526 01c8 00000000 		.4byte	0
 5527 01cc 00000000 		.4byte	0
 5528              		.section	.debug_ranges,"",%progbits
 5529              	.Ldebug_ranges0:
 5530 0000 00000000 		.4byte	.LFB2
 5531 0004 14000000 		.4byte	.LFE2
 5532 0008 00000000 		.4byte	.LFB3
 5533 000c 10000000 		.4byte	.LFE3
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 158


 5534 0010 00000000 		.4byte	.LFB4
 5535 0014 20000000 		.4byte	.LFE4
 5536 0018 00000000 		.4byte	.LFB5
 5537 001c 38000000 		.4byte	.LFE5
 5538 0020 00000000 		.4byte	.LFB6
 5539 0024 1C000000 		.4byte	.LFE6
 5540 0028 00000000 		.4byte	.LFB7
 5541 002c 30000000 		.4byte	.LFE7
 5542 0030 00000000 		.4byte	.LFB10
 5543 0034 24000000 		.4byte	.LFE10
 5544 0038 00000000 		.4byte	.LFB11
 5545 003c 10000000 		.4byte	.LFE11
 5546 0040 00000000 		.4byte	.LFB14
 5547 0044 20000000 		.4byte	.LFE14
 5548 0048 00000000 		.4byte	.LFB15
 5549 004c 10000000 		.4byte	.LFE15
 5550 0050 00000000 		.4byte	.LFB16
 5551 0054 0C000000 		.4byte	.LFE16
 5552 0058 00000000 		.4byte	.LFB17
 5553 005c 14000000 		.4byte	.LFE17
 5554 0060 00000000 		.4byte	.LFB18
 5555 0064 10000000 		.4byte	.LFE18
 5556 0068 00000000 		.4byte	.LFB19
 5557 006c 0C000000 		.4byte	.LFE19
 5558 0070 00000000 		.4byte	.LFB26
 5559 0074 14000000 		.4byte	.LFE26
 5560 0078 00000000 		.4byte	.LFB27
 5561 007c 18000000 		.4byte	.LFE27
 5562 0080 00000000 		.4byte	.LFB28
 5563 0084 14000000 		.4byte	.LFE28
 5564 0088 00000000 		.4byte	.LFB29
 5565 008c 14000000 		.4byte	.LFE29
 5566 0090 00000000 		.4byte	.LFB30
 5567 0094 14000000 		.4byte	.LFE30
 5568 0098 00000000 		.4byte	.LFB31
 5569 009c 04000000 		.4byte	.LFE31
 5570 00a0 00000000 		.4byte	.LFB12
 5571 00a4 38000000 		.4byte	.LFE12
 5572 00a8 00000000 		.4byte	.LFB20
 5573 00ac 20000000 		.4byte	.LFE20
 5574 00b0 00000000 		.4byte	.LFB21
 5575 00b4 1C000000 		.4byte	.LFE21
 5576 00b8 00000000 		.4byte	.LFB22
 5577 00bc 22000000 		.4byte	.LFE22
 5578 00c0 00000000 		.4byte	.LFB23
 5579 00c4 1E000000 		.4byte	.LFE23
 5580 00c8 00000000 		.4byte	.LFB24
 5581 00cc 4C000000 		.4byte	.LFE24
 5582 00d0 00000000 		.4byte	.LFB25
 5583 00d4 2C000000 		.4byte	.LFE25
 5584 00d8 00000000 		.4byte	.LFB32
 5585 00dc 18000000 		.4byte	.LFE32
 5586 00e0 00000000 		.4byte	.LFB33
 5587 00e4 30000000 		.4byte	.LFE33
 5588 00e8 00000000 		.4byte	.LFB34
 5589 00ec 14000000 		.4byte	.LFE34
 5590 00f0 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 159


 5591 00f4 64010000 		.4byte	.LFE8
 5592 00f8 00000000 		.4byte	.LFB9
 5593 00fc 54000000 		.4byte	.LFE9
 5594 0100 00000000 		.4byte	.LFB13
 5595 0104 44000000 		.4byte	.LFE13
 5596 0108 00000000 		.4byte	.LFB35
 5597 010c 4C000000 		.4byte	.LFE35
 5598 0110 00000000 		.4byte	.LFB39
 5599 0114 10000000 		.4byte	.LFE39
 5600 0118 00000000 		.4byte	.LFB40
 5601 011c 10000000 		.4byte	.LFE40
 5602 0120 00000000 		.4byte	.LFB38
 5603 0124 18000000 		.4byte	.LFE38
 5604 0128 00000000 		.4byte	.LFB41
 5605 012c 10000000 		.4byte	.LFE41
 5606 0130 00000000 		.4byte	.LFB42
 5607 0134 10000000 		.4byte	.LFE42
 5608 0138 00000000 		.4byte	.LFB43
 5609 013c 10000000 		.4byte	.LFE43
 5610 0140 00000000 		.4byte	.LFB44
 5611 0144 10000000 		.4byte	.LFE44
 5612 0148 00000000 		.4byte	.LFB45
 5613 014c 20000000 		.4byte	.LFE45
 5614 0150 00000000 		.4byte	.LFB46
 5615 0154 10000000 		.4byte	.LFE46
 5616 0158 00000000 		.4byte	.LFB47
 5617 015c 10000000 		.4byte	.LFE47
 5618 0160 00000000 		.4byte	.LFB51
 5619 0164 28000000 		.4byte	.LFE51
 5620 0168 00000000 		.4byte	.LFB48
 5621 016c 0C000000 		.4byte	.LFE48
 5622 0170 00000000 		.4byte	.LFB37
 5623 0174 44000000 		.4byte	.LFE37
 5624 0178 00000000 		.4byte	.LFB36
 5625 017c 20000000 		.4byte	.LFE36
 5626 0180 00000000 		.4byte	.LFB49
 5627 0184 10000000 		.4byte	.LFE49
 5628 0188 00000000 		.4byte	.LFB50
 5629 018c 0C000000 		.4byte	.LFE50
 5630 0190 00000000 		.4byte	.LFB52
 5631 0194 70000000 		.4byte	.LFE52
 5632 0198 00000000 		.4byte	.LFB53
 5633 019c 20000000 		.4byte	.LFE53
 5634 01a0 00000000 		.4byte	.LFB54
 5635 01a4 20000000 		.4byte	.LFE54
 5636 01a8 00000000 		.4byte	.LFB55
 5637 01ac 20000000 		.4byte	.LFE55
 5638 01b0 00000000 		.4byte	.LFB56
 5639 01b4 68000000 		.4byte	.LFE56
 5640 01b8 00000000 		.4byte	0
 5641 01bc 00000000 		.4byte	0
 5642              		.section	.debug_line,"",%progbits
 5643              	.Ldebug_line0:
 5644 0000 4F050000 		.section	.debug_str,"MS",%progbits,1
 5644      02004D00 
 5644      00000201 
 5644      FB0E0D00 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 160


 5644      01010101 
 5645              	.LASF57:
 5646 0000 72616D56 		.ascii	"ramVectorTable\000"
 5646      6563746F 
 5646      72546162 
 5646      6C6500
 5647              	.LASF73:
 5648 000f 62675472 		.ascii	"bgTrim4\000"
 5648      696D3400 
 5649              	.LASF10:
 5650 0017 75696E74 		.ascii	"uint16\000"
 5650      313600
 5651              	.LASF43:
 5652 001e 696E7453 		.ascii	"intState\000"
 5652      74617465 
 5652      00
 5653              	.LASF26:
 5654 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5654      73436C6B 
 5654      57726974 
 5654      65486663 
 5654      6C6B4469 
 5655              	.LASF117:
 5656 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5656      73436C6B 
 5656      50756D70 
 5656      436F6E66 
 5656      696700
 5657              	.LASF56:
 5658 0053 6F6C6449 		.ascii	"oldIsr\000"
 5658      737200
 5659              	.LASF99:
 5660 005a 72657456 		.ascii	"retVal\000"
 5660      616C00
 5661              	.LASF42:
 5662 0061 43794469 		.ascii	"CyDisableInts\000"
 5662      7361626C 
 5662      65496E74 
 5662      7300
 5663              	.LASF76:
 5664 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5664      656E7449 
 5664      6D6F5472 
 5664      696D3256 
 5664      616C7565 
 5665              	.LASF121:
 5666 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5666      43313120 
 5666      352E342E 
 5666      31203230 
 5666      31363036 
 5667 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5667      20726576 
 5667      6973696F 
 5667      6E203233 
 5667      37373135 
 5668 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 161


 5668      66756E63 
 5668      74696F6E 
 5668      2D736563 
 5668      74696F6E 
 5669              	.LASF7:
 5670 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 5670      206C6F6E 
 5670      6720756E 
 5670      7369676E 
 5670      65642069 
 5671              	.LASF115:
 5672 0129 43795379 		.ascii	"CySysTickInitVar\000"
 5672      73546963 
 5672      6B496E69 
 5672      74566172 
 5672      00
 5673              	.LASF44:
 5674 013a 4379456E 		.ascii	"CyEnableInts\000"
 5674      61626C65 
 5674      496E7473 
 5674      00
 5675              	.LASF109:
 5676 0147 696E7465 		.ascii	"interfaceNumber\000"
 5676      72666163 
 5676      654E756D 
 5676      62657200 
 5677              	.LASF66:
 5678 0157 4379536F 		.ascii	"CySoftwareReset\000"
 5678      66747761 
 5678      72655265 
 5678      73657400 
 5679              	.LASF83:
 5680 0167 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5680      73546963 
 5680      6B456E61 
 5680      626C6549 
 5680      6E746572 
 5681              	.LASF48:
 5682 0180 4379496E 		.ascii	"CyIntGetState\000"
 5682      74476574 
 5682      53746174 
 5682      6500
 5683              	.LASF6:
 5684 018e 6C6F6E67 		.ascii	"long long int\000"
 5684      206C6F6E 
 5684      6720696E 
 5684      7400
 5685              	.LASF0:
 5686 019c 7369676E 		.ascii	"signed char\000"
 5686      65642063 
 5686      68617200 
 5687              	.LASF72:
 5688 01a8 66726571 		.ascii	"freq\000"
 5688      00
 5689              	.LASF81:
 5690 01ad 43794465 		.ascii	"CyDelayFreq\000"
 5690      6C617946 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 162


 5690      72657100 
 5691              	.LASF24:
 5692 01b9 696E7465 		.ascii	"interruptState\000"
 5692      72727570 
 5692      74537461 
 5692      746500
 5693              	.LASF88:
 5694 01c8 43795379 		.ascii	"CySysTickGetReload\000"
 5694      73546963 
 5694      6B476574 
 5694      52656C6F 
 5694      616400
 5695              	.LASF4:
 5696 01db 6C6F6E67 		.ascii	"long int\000"
 5696      20696E74 
 5696      00
 5697              	.LASF49:
 5698 01e4 4379496E 		.ascii	"CyIntDisable\000"
 5698      74446973 
 5698      61626C65 
 5698      00
 5699              	.LASF100:
 5700 01f1 43795379 		.ascii	"CySysTickGetCallback\000"
 5700      73546963 
 5700      6B476574 
 5700      43616C6C 
 5700      6261636B 
 5701              	.LASF9:
 5702 0206 75696E74 		.ascii	"uint8\000"
 5702      3800
 5703              	.LASF112:
 5704 020c 63796465 		.ascii	"cydelayFreqKhz\000"
 5704      6C617946 
 5704      7265714B 
 5704      687A00
 5705              	.LASF29:
 5706 021b 656E6162 		.ascii	"enable\000"
 5706      6C6500
 5707              	.LASF13:
 5708 0222 646F7562 		.ascii	"double\000"
 5708      6C6500
 5709              	.LASF63:
 5710 0229 73686966 		.ascii	"shift\000"
 5710      7400
 5711              	.LASF38:
 5712 022f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5712      734C7664 
 5712      436C6561 
 5712      72496E74 
 5712      65727275 
 5713              	.LASF11:
 5714 0246 75696E74 		.ascii	"uint32\000"
 5714      333200
 5715              	.LASF35:
 5716 024d 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5716      73436C6B 
 5716      45636F52 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 163


 5716      65616453 
 5716      74617475 
 5717              	.LASF45:
 5718 0263 6D61736B 		.ascii	"mask\000"
 5718      00
 5719              	.LASF34:
 5720 0268 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5720      73436C6B 
 5720      47657453 
 5720      7973636C 
 5720      6B536F75 
 5721              	.LASF65:
 5722 0280 4379496E 		.ascii	"CyIntGetPriority\000"
 5722      74476574 
 5722      5072696F 
 5722      72697479 
 5722      00
 5723              	.LASF114:
 5724 0291 63796465 		.ascii	"cydelay32kMs\000"
 5724      6C617933 
 5724      326B4D73 
 5724      00
 5725              	.LASF95:
 5726 029e 43795379 		.ascii	"CySysTickInit\000"
 5726      73546963 
 5726      6B496E69 
 5726      7400
 5727              	.LASF64:
 5728 02ac 76616C75 		.ascii	"value\000"
 5728      6500
 5729              	.LASF91:
 5730 02b2 636C6F63 		.ascii	"clockSource\000"
 5730      6B536F75 
 5730      72636500 
 5731              	.LASF101:
 5732 02be 43794765 		.ascii	"CyGetUniqueId\000"
 5732      74556E69 
 5732      71756549 
 5732      6400
 5733              	.LASF93:
 5734 02cc 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5734      73546963 
 5734      6B476574 
 5734      436F756E 
 5734      74466C61 
 5735              	.LASF8:
 5736 02e2 756E7369 		.ascii	"unsigned int\000"
 5736      676E6564 
 5736      20696E74 
 5736      00
 5737              	.LASF94:
 5738 02ef 43795379 		.ascii	"CySysTickClear\000"
 5738      73546963 
 5738      6B436C65 
 5738      617200
 5739              	.LASF5:
 5740 02fe 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 164


 5740      20756E73 
 5740      69676E65 
 5740      6420696E 
 5740      7400
 5741              	.LASF87:
 5742 0310 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5742      734C7664 
 5742      47657449 
 5742      6E746572 
 5742      72757074 
 5743              	.LASF23:
 5744 032b 43795379 		.ascii	"CySysClkImoStop\000"
 5744      73436C6B 
 5744      496D6F53 
 5744      746F7000 
 5745              	.LASF118:
 5746 033b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5746      74657243 
 5746      72697469 
 5746      63616C53 
 5746      65637469 
 5747              	.LASF50:
 5748 0352 4379496E 		.ascii	"CyIntSetPending\000"
 5748      74536574 
 5748      50656E64 
 5748      696E6700 
 5749              	.LASF39:
 5750 0362 43795379 		.ascii	"CySysGetResetReason\000"
 5750      73476574 
 5750      52657365 
 5750      74526561 
 5750      736F6E00 
 5751              	.LASF3:
 5752 0376 73686F72 		.ascii	"short unsigned int\000"
 5752      7420756E 
 5752      7369676E 
 5752      65642069 
 5752      6E7400
 5753              	.LASF105:
 5754 0389 72656754 		.ascii	"regTmp\000"
 5754      6D7000
 5755              	.LASF90:
 5756 0390 43795379 		.ascii	"CySysTickSetClockSource\000"
 5756      73546963 
 5756      6B536574 
 5756      436C6F63 
 5756      6B536F75 
 5757              	.LASF59:
 5758 03a8 4379496E 		.ascii	"CyIntSetVector\000"
 5758      74536574 
 5758      56656374 
 5758      6F7200
 5759              	.LASF47:
 5760 03b7 6E756D62 		.ascii	"number\000"
 5760      657200
 5761              	.LASF62:
 5762 03be 7072696F 		.ascii	"priority\000"
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 165


 5762      72697479 
 5762      00
 5763              	.LASF71:
 5764 03c7 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5764      73436C6B 
 5764      57726974 
 5764      65496D6F 
 5764      46726571 
 5765              	.LASF106:
 5766 03dc 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5766      73536574 
 5766      466C6173 
 5766      68416363 
 5766      65737341 
 5767              	.LASF54:
 5768 03fb 4379496E 		.ascii	"CyIntSetSysVector\000"
 5768      74536574 
 5768      53797356 
 5768      6563746F 
 5768      7200
 5769              	.LASF27:
 5770 040d 43795379 		.ascii	"CySysEnablePumpClock\000"
 5770      73456E61 
 5770      626C6550 
 5770      756D7043 
 5770      6C6F636B 
 5771              	.LASF17:
 5772 0422 72656733 		.ascii	"reg32\000"
 5772      3200
 5773              	.LASF96:
 5774 0428 43795379 		.ascii	"CySysTickStart\000"
 5774      73546963 
 5774      6B537461 
 5774      727400
 5775              	.LASF41:
 5776 0437 72657475 		.ascii	"returnStatus\000"
 5776      726E5374 
 5776      61747573 
 5776      00
 5777              	.LASF104:
 5778 0444 736F7572 		.ascii	"source\000"
 5778      636500
 5779              	.LASF20:
 5780 044b 73697A65 		.ascii	"sizetype\000"
 5780      74797065 
 5780      00
 5781              	.LASF108:
 5782 0454 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5782      73536574 
 5782      50657269 
 5782      70686572 
 5782      616C4163 
 5783              	.LASF51:
 5784 0478 4379496E 		.ascii	"CyIntClearPending\000"
 5784      74436C65 
 5784      61725065 
 5784      6E64696E 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 166


 5784      6700
 5785              	.LASF19:
 5786 048a 6C6F6E67 		.ascii	"long double\000"
 5786      20646F75 
 5786      626C6500 
 5787              	.LASF55:
 5788 0496 61646472 		.ascii	"address\000"
 5788      65737300 
 5789              	.LASF74:
 5790 049e 62675472 		.ascii	"bgTrim5\000"
 5790      696D3500 
 5791              	.LASF30:
 5792 04a6 73797363 		.ascii	"sysclkSource\000"
 5792      6C6B536F 
 5792      75726365 
 5792      00
 5793              	.LASF98:
 5794 04b3 66756E63 		.ascii	"function\000"
 5794      74696F6E 
 5794      00
 5795              	.LASF116:
 5796 04bc 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5796      6F467265 
 5796      714D687A 
 5796      32526567 
 5796      00
 5797              	.LASF89:
 5798 04cd 43795379 		.ascii	"CySysTickGetValue\000"
 5798      73546963 
 5798      6B476574 
 5798      56616C75 
 5798      6500
 5799              	.LASF111:
 5800 04df 63796465 		.ascii	"cydelayFreqHz\000"
 5800      6C617946 
 5800      72657148 
 5800      7A00
 5801              	.LASF61:
 5802 04ed 4379496E 		.ascii	"CyIntSetPriority\000"
 5802      74536574 
 5802      5072696F 
 5802      72697479 
 5802      00
 5803              	.LASF12:
 5804 04fe 666C6F61 		.ascii	"float\000"
 5804      7400
 5805              	.LASF119:
 5806 0504 43794578 		.ascii	"CyExitCriticalSection\000"
 5806      69744372 
 5806      69746963 
 5806      616C5365 
 5806      6374696F 
 5807              	.LASF79:
 5808 051a 43795379 		.ascii	"CySysLvdEnable\000"
 5808      734C7664 
 5808      456E6162 
 5808      6C6500
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 167


 5809              	.LASF21:
 5810 0529 63795379 		.ascii	"cySysTickCallback\000"
 5810      73546963 
 5810      6B43616C 
 5810      6C626163 
 5810      6B00
 5811              	.LASF60:
 5812 053b 4379496E 		.ascii	"CyIntGetVector\000"
 5812      74476574 
 5812      56656374 
 5812      6F7200
 5813              	.LASF68:
 5814 054a 6D696C6C 		.ascii	"milliseconds\000"
 5814      69736563 
 5814      6F6E6473 
 5814      00
 5815              	.LASF120:
 5816 0557 43794465 		.ascii	"CyDelayCycles\000"
 5816      6C617943 
 5816      79636C65 
 5816      7300
 5817              	.LASF16:
 5818 0565 72656738 		.ascii	"reg8\000"
 5818      00
 5819              	.LASF80:
 5820 056a 74687265 		.ascii	"threshold\000"
 5820      73686F6C 
 5820      6400
 5821              	.LASF52:
 5822 0574 43794861 		.ascii	"CyHalt\000"
 5822      6C7400
 5823              	.LASF103:
 5824 057b 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5824      73536574 
 5824      52616D41 
 5824      63636573 
 5824      73417262 
 5825              	.LASF1:
 5826 0598 756E7369 		.ascii	"unsigned char\000"
 5826      676E6564 
 5826      20636861 
 5826      7200
 5827              	.LASF2:
 5828 05a6 73686F72 		.ascii	"short int\000"
 5828      7420696E 
 5828      7400
 5829              	.LASF46:
 5830 05b0 4379496E 		.ascii	"CyIntEnable\000"
 5830      74456E61 
 5830      626C6500 
 5831              	.LASF58:
 5832 05bc 4379496E 		.ascii	"CyIntGetSysVector\000"
 5832      74476574 
 5832      53797356 
 5832      6563746F 
 5832      7200
 5833              	.LASF28:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 168


 5834 05ce 636C6B53 		.ascii	"clkSelect\000"
 5834      656C6563 
 5834      7400
 5835              	.LASF77:
 5836 05d8 43795379 		.ascii	"CySysClkEcoStart\000"
 5836      73436C6B 
 5836      45636F53 
 5836      74617274 
 5836      00
 5837              	.LASF69:
 5838 05e9 43794465 		.ascii	"CyDelayUs\000"
 5838      6C617955 
 5838      7300
 5839              	.LASF40:
 5840 05f3 72656173 		.ascii	"reason\000"
 5840      6F6E00
 5841              	.LASF14:
 5842 05fa 63686172 		.ascii	"char\000"
 5842      00
 5843              	.LASF18:
 5844 05ff 63796973 		.ascii	"cyisraddress\000"
 5844      72616464 
 5844      72657373 
 5844      00
 5845              	.LASF84:
 5846 060c 43795379 		.ascii	"CySysTickEnable\000"
 5846      73546963 
 5846      6B456E61 
 5846      626C6500 
 5847              	.LASF31:
 5848 061c 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5848      73436C6B 
 5848      57726974 
 5848      65537973 
 5848      636C6B44 
 5849              	.LASF97:
 5850 0633 43795379 		.ascii	"CySysTickSetCallback\000"
 5850      73546963 
 5850      6B536574 
 5850      43616C6C 
 5850      6261636B 
 5851              	.LASF110:
 5852 0648 43795379 		.ascii	"CySysTickCallbacks\000"
 5852      73546963 
 5852      6B43616C 
 5852      6C626163 
 5852      6B7300
 5853              	.LASF102:
 5854 065b 756E6971 		.ascii	"uniqueId\000"
 5854      75654964 
 5854      00
 5855              	.LASF67:
 5856 0664 43794465 		.ascii	"CyDelay\000"
 5856      6C617900 
 5857              	.LASF92:
 5858 066c 43795379 		.ascii	"CySysTickGetClockSource\000"
 5858      73546963 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 169


 5858      6B476574 
 5858      436C6F63 
 5858      6B536F75 
 5859              	.LASF85:
 5860 0684 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5860      73546963 
 5860      6B446973 
 5860      61626C65 
 5860      496E7465 
 5861              	.LASF37:
 5862 069e 43795379 		.ascii	"CySysLvdDisable\000"
 5862      734C7664 
 5862      44697361 
 5862      626C6500 
 5863              	.LASF113:
 5864 06ae 63796465 		.ascii	"cydelayFreqMhz\000"
 5864      6C617946 
 5864      7265714D 
 5864      687A00
 5865              	.LASF123:
 5866 06bd 433A5C55 		.ascii	"C:\\Users\\Elias g\\FDRM-kl25z\\Timer_Example\\Desi"
 5866      73657273 
 5866      5C456C69 
 5866      61732067 
 5866      5C464452 
 5867 06eb 676E3031 		.ascii	"gn01.cydsn\000"
 5867      2E637964 
 5867      736E00
 5868              	.LASF33:
 5869 06f6 43795379 		.ascii	"CySysClkEcoStop\000"
 5869      73436C6B 
 5869      45636F53 
 5869      746F7000 
 5870              	.LASF107:
 5871 0706 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5871      73536574 
 5871      446D6163 
 5871      41636365 
 5871      73734172 
 5872              	.LASF82:
 5873 0724 43795379 		.ascii	"CySysTickStop\000"
 5873      73546963 
 5873      6B53746F 
 5873      7000
 5874              	.LASF78:
 5875 0732 74696D65 		.ascii	"timeoutUs\000"
 5875      6F757455 
 5875      7300
 5876              	.LASF32:
 5877 073c 64697669 		.ascii	"divider\000"
 5877      64657200 
 5878              	.LASF53:
 5879 0744 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5879      73436C6B 
 5879      57726974 
 5879      6545636F 
 5879      44697600 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\ccD5xdJb.s 			page 170


 5880              	.LASF15:
 5881 0758 63797374 		.ascii	"cystatus\000"
 5881      61747573 
 5881      00
 5882              	.LASF22:
 5883 0761 43795379 		.ascii	"CySysClkImoStart\000"
 5883      73436C6B 
 5883      496D6F53 
 5883      74617274 
 5883      00
 5884              	.LASF75:
 5885 0772 6E657749 		.ascii	"newImoTrim2Value\000"
 5885      6D6F5472 
 5885      696D3256 
 5885      616C7565 
 5885      00
 5886              	.LASF122:
 5887 0783 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5887      72617465 
 5887      645F536F 
 5887      75726365 
 5887      5C50536F 
 5888              	.LASF70:
 5889 07a2 6D696372 		.ascii	"microseconds\000"
 5889      6F736563 
 5889      6F6E6473 
 5889      00
 5890              	.LASF25:
 5891 07af 746D7052 		.ascii	"tmpReg\000"
 5891      656700
 5892              	.LASF86:
 5893 07b6 43795379 		.ascii	"CySysTickSetReload\000"
 5893      73546963 
 5893      6B536574 
 5893      52656C6F 
 5893      616400
 5894              	.LASF124:
 5895 07c9 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5895      73546963 
 5895      6B536572 
 5895      76696365 
 5895      43616C6C 
 5896              	.LASF36:
 5897 07e3 72657475 		.ascii	"returnValue\000"
 5897      726E5661 
 5897      6C756500 
 5898              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
