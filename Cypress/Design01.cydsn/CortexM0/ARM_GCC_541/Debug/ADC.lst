ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000200u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 0F20     		movs	r0, #15
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 2649     		ldr	r1, .L6
  43 000c 0F20     		movs	r0, #15
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 244B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 244B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2349     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2349     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 244A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 234A     		ldr	r2, .L6+24
  68 0030 234B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 234A     		ldr	r2, .L6+32
  72 0036 244B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 234A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 234A     		ldr	r2, .L6+44
  80 0042 2449     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2449     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 2449     		ldr	r1, .L6+56
  87 004c 0A68     		ldr	r2, [r1]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0243     		orrs	r2, r0
  91 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 6


 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 4
  93 0056 224A     		ldr	r2, .L6+60
  94 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 4
  96 005a 224A     		ldr	r2, .L6+64
  97 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 4
  99 005e 0122     		movs	r2, #1
 100 0060 214B     		ldr	r3, .L6+68
 101 0062 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 102              		.loc 1 206 0 discriminator 4
 103 0064 214A     		ldr	r2, .L6+72
 104 0066 1168     		ldr	r1, [r2]
 105              	.LVL2:
 106 0068 214B     		ldr	r3, .L6+76
 107 006a 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 108              		.loc 1 221 0 discriminator 4
 109 006c 8021     		movs	r1, #128
 110              	.LVL3:
 111 006e 8905     		lsls	r1, r1, #22
 112 0070 0B43     		orrs	r3, r1
 113              	.LVL4:
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 114              		.loc 1 226 0 discriminator 4
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 7


 115 0072 1360     		str	r3, [r2]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 116              		.loc 1 229 0 discriminator 4
 117 0074 0222     		movs	r2, #2
 118 0076 1F4B     		ldr	r3, .L6+80
 119              	.LVL5:
 120 0078 1A60     		str	r2, [r3]
 121              	.LVL6:
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 232 0 discriminator 4
 123 007a 0023     		movs	r3, #0
 124 007c 0EE0     		b	.L3
 125              	.LVL7:
 126              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 127              		.loc 1 253 0
 128 007e 9A00     		lsls	r2, r3, #2
 129 0080 1D49     		ldr	r1, .L6+84
 130 0082 5118     		adds	r1, r2, r1
 131 0084 8020     		movs	r0, #128
 132 0086 8000     		lsls	r0, r0, #2
 133 0088 0860     		str	r0, [r1]
 134              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 8


 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 135              		.loc 1 298 0
 136 008a 5800     		lsls	r0, r3, #1
 137 008c 0024     		movs	r4, #0
 138 008e 1B49     		ldr	r1, .L6+88
 139 0090 4452     		strh	r4, [r0, r1]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 140              		.loc 1 311 0
 141 0092 C220     		movs	r0, #194
 142 0094 4000     		lsls	r0, r0, #1
 143 0096 1A49     		ldr	r1, .L6+92
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 9


 144 0098 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 145              		.loc 1 232 0
 146 009a 0133     		adds	r3, r3, #1
 147              	.LVL9:
 148              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 149              		.loc 1 232 0 is_stmt 0 discriminator 1
 150 009c 002B     		cmp	r3, #0
 151 009e EED0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 152              		.loc 1 314 0 is_stmt 1
 153              		@ sp needed
 154 00a0 10BD     		pop	{r4, pc}
 155              	.L7:
 156 00a2 C046     		.align	2
 157              	.L6:
 158 00a4 00000000 		.word	ADC_ISR
 159 00a8 20003A40 		.word	1077542944
 160 00ac 80033A40 		.word	1077543808
 161 00b0 70021053 		.word	1393558128
 162 00b4 70020053 		.word	1392509552
 163 00b8 00003A40 		.word	1077542912
 164 00bc 0C000080 		.word	-2147483636
 165 00c0 04003A40 		.word	1077542916
 166 00c4 0000FF07 		.word	134152192
 167 00c8 18003A40 		.word	1077542936
 168 00cc 1C003A40 		.word	1077542940
 169 00d0 02000200 		.word	131074
 170 00d4 10003A40 		.word	1077542928
 171 00d8 14003A40 		.word	1077542932
 172 00dc 00033A40 		.word	1077543680
 173 00e0 28023A40 		.word	1077543464
 174 00e4 38023A40 		.word	1077543480
 175 00e8 18023A40 		.word	1077543448
 176 00ec 30003A40 		.word	1077542960
 177 00f0 FEFFFFDF 		.word	-536870914
 178 00f4 040F3A40 		.word	1077546756
 179 00f8 80003A40 		.word	1077543040
 180 00fc 00000000 		.word	ADC_offset
 181 0100 00000000 		.word	ADC_countsPer10Volt
 182              		.cfi_endproc
 183              	.LFE3:
 184              		.size	ADC_Init, .-ADC_Init
 185              		.section	.text.ADC_Enable,"ax",%progbits
 186              		.align	2
 187              		.global	ADC_Enable
 188              		.code	16
 189              		.thumb_func
 190              		.type	ADC_Enable, %function
 191              	ADC_Enable:
 192              	.LFB4:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 10


 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 193              		.loc 1 331 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 201              		.loc 1 332 0
 202 0002 094B     		ldr	r3, .L11
 203 0004 1B68     		ldr	r3, [r3]
 204 0006 002B     		cmp	r3, #0
 205 0008 0CDB     		blt	.L8
 206              	.L10:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 207              		.loc 1 336 0 discriminator 1
 208 000a 084B     		ldr	r3, .L11+4
 209 000c 1B68     		ldr	r3, [r3]
 210 000e 002B     		cmp	r3, #0
 211 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 212              		.loc 1 342 0
 213 0012 054A     		ldr	r2, .L11
 214 0014 1368     		ldr	r3, [r2]
 215 0016 8021     		movs	r1, #128
 216 0018 0906     		lsls	r1, r1, #24
 217 001a 0B43     		orrs	r3, r1
 218 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 219              		.loc 1 345 0
 220 001e 0A20     		movs	r0, #10
 221 0020 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 11


 222              	.LVL10:
 223              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 224              		.loc 1 347 0
 225              		@ sp needed
 226 0024 10BD     		pop	{r4, pc}
 227              	.L12:
 228 0026 C046     		.align	2
 229              	.L11:
 230 0028 00003A40 		.word	1077542912
 231 002c 08023A40 		.word	1077543432
 232              		.cfi_endproc
 233              	.LFE4:
 234              		.size	ADC_Enable, .-ADC_Enable
 235              		.section	.text.ADC_Start,"ax",%progbits
 236              		.align	2
 237              		.global	ADC_Start
 238              		.code	16
 239              		.thumb_func
 240              		.type	ADC_Start, %function
 241              	ADC_Start:
 242              	.LFB2:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 243              		.loc 1 64 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 251              		.loc 1 66 0
 252 0002 064B     		ldr	r3, .L15
 253 0004 1B78     		ldrb	r3, [r3]
 254 0006 002B     		cmp	r3, #0
 255 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 256              		.loc 1 68 0
 257 000a FFF7FEFF 		bl	ADC_Init
 258              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 259              		.loc 1 69 0
 260 000e 0122     		movs	r2, #1
 261 0010 024B     		ldr	r3, .L15
 262 0012 1A70     		strb	r2, [r3]
 263              	.L14:
  71:Generated_Source\PSoC4/ADC.c **** }
 264              		.loc 1 71 0
 265 0014 FFF7FEFF 		bl	ADC_Enable
 266              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 267              		.loc 1 72 0
 268              		@ sp needed
 269 0018 10BD     		pop	{r4, pc}
 270              	.L16:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 12


 271 001a C046     		.align	2
 272              	.L15:
 273 001c 00000000 		.word	.LANCHOR0
 274              		.cfi_endproc
 275              	.LFE2:
 276              		.size	ADC_Start, .-ADC_Start
 277              		.section	.text.ADC_Stop,"ax",%progbits
 278              		.align	2
 279              		.global	ADC_Stop
 280              		.code	16
 281              		.thumb_func
 282              		.type	ADC_Stop, %function
 283              	ADC_Stop:
 284              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 285              		.loc 1 366 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 290              		.loc 1 367 0
 291 0000 024A     		ldr	r2, .L18
 292 0002 1368     		ldr	r3, [r2]
 293 0004 5B00     		lsls	r3, r3, #1
 294 0006 5B08     		lsrs	r3, r3, #1
 295 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 296              		.loc 1 368 0
 297              		@ sp needed
 298 000a 7047     		bx	lr
 299              	.L19:
 300              		.align	2
 301              	.L18:
 302 000c 00003A40 		.word	1077542912
 303              		.cfi_endproc
 304              	.LFE5:
 305              		.size	ADC_Stop, .-ADC_Stop
 306              		.section	.text.ADC_StartConvert,"ax",%progbits
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 13


 307              		.align	2
 308              		.global	ADC_StartConvert
 309              		.code	16
 310              		.thumb_func
 311              		.type	ADC_StartConvert, %function
 312              	ADC_StartConvert:
 313              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 314              		.loc 1 392 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 319              		.loc 1 394 0
 320 0000 034A     		ldr	r2, .L21
 321 0002 1368     		ldr	r3, [r2]
 322 0004 8021     		movs	r1, #128
 323 0006 4902     		lsls	r1, r1, #9
 324 0008 0B43     		orrs	r3, r1
 325 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 326              		.loc 1 399 0
 327              		@ sp needed
 328 000c 7047     		bx	lr
 329              	.L22:
 330 000e C046     		.align	2
 331              	.L21:
 332 0010 04003A40 		.word	1077542916
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 14


 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	ADC_StartConvert, .-ADC_StartConvert
 336              		.section	.text.ADC_StopConvert,"ax",%progbits
 337              		.align	2
 338              		.global	ADC_StopConvert
 339              		.code	16
 340              		.thumb_func
 341              		.type	ADC_StopConvert, %function
 342              	ADC_StopConvert:
 343              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 344              		.loc 1 417 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 349              		.loc 1 419 0
 350 0000 024A     		ldr	r2, .L24
 351 0002 1168     		ldr	r1, [r2]
 352 0004 024B     		ldr	r3, .L24+4
 353 0006 0B40     		ands	r3, r1
 354 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 355              		.loc 1 421 0
 356              		@ sp needed
 357 000a 7047     		bx	lr
 358              	.L25:
 359              		.align	2
 360              	.L24:
 361 000c 04003A40 		.word	1077542916
 362 0010 FFFFFEFF 		.word	-65537
 363              		.cfi_endproc
 364              	.LFE7:
 365              		.size	ADC_StopConvert, .-ADC_StopConvert
 366              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 367              		.align	2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 15


 368              		.global	ADC_IsEndConversion
 369              		.code	16
 370              		.thumb_func
 371              		.type	ADC_IsEndConversion, %function
 372              	ADC_IsEndConversion:
 373              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 374              		.loc 1 451 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379              	.LVL13:
 380 0000 0200     		movs	r2, r0
 381              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 382              		.loc 1 454 0
 383 0002 8307     		lsls	r3, r0, #30
 384 0004 0CD0     		beq	.L30
 385              	.LVL15:
 386              	.L29:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 387              		.loc 1 458 0 discriminator 2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 16


 388 0006 074B     		ldr	r3, .L31
 389 0008 1B68     		ldr	r3, [r3]
 390 000a 0120     		movs	r0, #1
 391 000c 1840     		ands	r0, r3
 392              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 393              		.loc 1 459 0 discriminator 2
 394 000e 01D1     		bne	.L28
 395              		.loc 1 459 0 is_stmt 0 discriminator 1
 396 0010 9307     		lsls	r3, r2, #30
 397 0012 F8D4     		bmi	.L29
 398              	.L28:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 399              		.loc 1 461 0 is_stmt 1
 400 0014 0028     		cmp	r0, #0
 401 0016 04D0     		beq	.L27
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 402              		.loc 1 464 0
 403 0018 0122     		movs	r2, #1
 404              	.LVL17:
 405 001a 024B     		ldr	r3, .L31
 406 001c 1A60     		str	r2, [r3]
 407 001e 00E0     		b	.L27
 408              	.LVL18:
 409              	.L30:
 452:Generated_Source\PSoC4/ADC.c **** 
 410              		.loc 1 452 0
 411 0020 0020     		movs	r0, #0
 412              	.LVL19:
 413              	.L27:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 414              		.loc 1 486 0
 415              		@ sp needed
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 17


 416 0022 7047     		bx	lr
 417              	.L32:
 418              		.align	2
 419              	.L31:
 420 0024 10023A40 		.word	1077543440
 421              		.cfi_endproc
 422              	.LFE8:
 423              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 424              		.section	.text.ADC_GetResult16,"ax",%progbits
 425              		.align	2
 426              		.global	ADC_GetResult16
 427              		.code	16
 428              		.thumb_func
 429              		.type	ADC_GetResult16, %function
 430              	ADC_GetResult16:
 431              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 432              		.loc 1 505 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LVL20:
 437 0000 10B5     		push	{r4, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
 440              		.cfi_offset 14, -4
 441 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 442              		.loc 1 509 0
 443 0004 02D0     		beq	.L34
 444              		.loc 1 509 0 is_stmt 0 discriminator 1
 445 0006 0020     		movs	r0, #0
 446              	.LVL21:
 447 0008 FFF7FEFF 		bl	CyHalt
 448              	.LVL22:
 449              	.L34:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 18


 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 450              		.loc 1 511 0 is_stmt 1
 451 000c 002C     		cmp	r4, #0
 452 000e 07D1     		bne	.L36
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 453              		.loc 1 513 0
 454 0010 A400     		lsls	r4, r4, #2
 455              	.LVL23:
 456 0012 054B     		ldr	r3, .L37
 457 0014 9C46     		mov	ip, r3
 458 0016 6444     		add	r4, r4, ip
 459 0018 2068     		ldr	r0, [r4]
 460 001a 0004     		lsls	r0, r0, #16
 461 001c 000C     		lsrs	r0, r0, #16
 462              	.LVL24:
 463 001e 00E0     		b	.L35
 464              	.LVL25:
 465              	.L36:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 466              		.loc 1 521 0
 467 0020 0020     		movs	r0, #0
 468              	.LVL26:
 469              	.L35:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 470              		.loc 1 525 0
 471 0022 00B2     		sxth	r0, r0
 472              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
 473              		.loc 1 526 0
 474              		@ sp needed
 475 0024 10BD     		pop	{r4, pc}
 476              	.L38:
 477 0026 C046     		.align	2
 478              	.L37:
 479 0028 80013A40 		.word	1077543296
 480              		.cfi_endproc
 481              	.LFE9:
 482              		.size	ADC_GetResult16, .-ADC_GetResult16
 483              		.section	.text.ADC_SetChanMask,"ax",%progbits
 484              		.align	2
 485              		.global	ADC_SetChanMask
 486              		.code	16
 487              		.thumb_func
 488              		.type	ADC_SetChanMask, %function
 489              	ADC_SetChanMask:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 19


 490              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 491              		.loc 1 550 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 497              		.loc 1 551 0
 498 0000 0123     		movs	r3, #1
 499 0002 1840     		ands	r0, r3
 500              	.LVL29:
 501 0004 014B     		ldr	r3, .L40
 502 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 503              		.loc 1 552 0
 504              		@ sp needed
 505 0008 7047     		bx	lr
 506              	.L41:
 507 000a C046     		.align	2
 508              	.L40:
 509 000c 20003A40 		.word	1077542944
 510              		.cfi_endproc
 511              	.LFE10:
 512              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 513              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 514              		.align	2
 515              		.global	ADC_SetLowLimit
 516              		.code	16
 517              		.thumb_func
 518              		.type	ADC_SetLowLimit, %function
 519              	ADC_SetLowLimit:
 520              	.LFB11:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 20


 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 521              		.loc 1 594 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 527              		.loc 1 595 0
 528 0000 054A     		ldr	r2, .L43
 529 0002 1368     		ldr	r3, [r2]
 530 0004 1B0C     		lsrs	r3, r3, #16
 531 0006 1B04     		lsls	r3, r3, #16
 532 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 533              		.loc 1 596 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 21


 534 000a 1368     		ldr	r3, [r2]
 535 000c 0004     		lsls	r0, r0, #16
 536              	.LVL31:
 537 000e 000C     		lsrs	r0, r0, #16
 538 0010 1843     		orrs	r0, r3
 539 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 540              		.loc 1 597 0
 541              		@ sp needed
 542 0014 7047     		bx	lr
 543              	.L44:
 544 0016 C046     		.align	2
 545              	.L43:
 546 0018 18003A40 		.word	1077542936
 547              		.cfi_endproc
 548              	.LFE11:
 549              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 550              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 551              		.align	2
 552              		.global	ADC_SetHighLimit
 553              		.code	16
 554              		.thumb_func
 555              		.type	ADC_SetHighLimit, %function
 556              	ADC_SetHighLimit:
 557              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 558              		.loc 1 615 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563              	.LVL32:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 564              		.loc 1 616 0
 565 0000 044A     		ldr	r2, .L46
 566 0002 1368     		ldr	r3, [r2]
 567 0004 1B04     		lsls	r3, r3, #16
 568 0006 1B0C     		lsrs	r3, r3, #16
 569 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 22


 570              		.loc 1 617 0
 571 000a 1368     		ldr	r3, [r2]
 572 000c 0004     		lsls	r0, r0, #16
 573              	.LVL33:
 574 000e 1843     		orrs	r0, r3
 575 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 576              		.loc 1 618 0
 577              		@ sp needed
 578 0012 7047     		bx	lr
 579              	.L47:
 580              		.align	2
 581              	.L46:
 582 0014 18003A40 		.word	1077542936
 583              		.cfi_endproc
 584              	.LFE12:
 585              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 586              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 587              		.align	2
 588              		.global	ADC_SetLimitMask
 589              		.code	16
 590              		.thumb_func
 591              		.type	ADC_SetLimitMask, %function
 592              	ADC_SetLimitMask:
 593              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 594              		.loc 1 639 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599              	.LVL34:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 600              		.loc 1 640 0
 601 0000 0123     		movs	r3, #1
 602 0002 1840     		ands	r0, r3
 603              	.LVL35:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 23


 604 0004 014B     		ldr	r3, .L49
 605 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 606              		.loc 1 641 0
 607              		@ sp needed
 608 0008 7047     		bx	lr
 609              	.L50:
 610 000a C046     		.align	2
 611              	.L49:
 612 000c 38023A40 		.word	1077543480
 613              		.cfi_endproc
 614              	.LFE13:
 615              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 616              		.section	.text.ADC_SetSatMask,"ax",%progbits
 617              		.align	2
 618              		.global	ADC_SetSatMask
 619              		.code	16
 620              		.thumb_func
 621              		.type	ADC_SetSatMask, %function
 622              	ADC_SetSatMask:
 623              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 624              		.loc 1 662 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 630              		.loc 1 663 0
 631 0000 0123     		movs	r3, #1
 632 0002 1840     		ands	r0, r3
 633              	.LVL37:
 634 0004 014B     		ldr	r3, .L52
 635 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 636              		.loc 1 664 0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 24


 637              		@ sp needed
 638 0008 7047     		bx	lr
 639              	.L53:
 640 000a C046     		.align	2
 641              	.L52:
 642 000c 28023A40 		.word	1077543464
 643              		.cfi_endproc
 644              	.LFE14:
 645              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 646              		.section	.text.ADC_SetOffset,"ax",%progbits
 647              		.align	2
 648              		.global	ADC_SetOffset
 649              		.code	16
 650              		.thumb_func
 651              		.type	ADC_SetOffset, %function
 652              	ADC_SetOffset:
 653              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 654              		.loc 1 690 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              	.LVL38:
 659 0000 70B5     		push	{r4, r5, r6, lr}
 660              		.cfi_def_cfa_offset 16
 661              		.cfi_offset 4, -16
 662              		.cfi_offset 5, -12
 663              		.cfi_offset 6, -8
 664              		.cfi_offset 14, -4
 665 0002 0400     		movs	r4, r0
 666 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 25


 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 667              		.loc 1 692 0
 668 0006 0028     		cmp	r0, #0
 669 0008 02D0     		beq	.L55
 670              		.loc 1 692 0 is_stmt 0 discriminator 1
 671 000a 0020     		movs	r0, #0
 672              	.LVL39:
 673 000c FFF7FEFF 		bl	CyHalt
 674              	.LVL40:
 675              	.L55:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 676              		.loc 1 694 0 is_stmt 1
 677 0010 6400     		lsls	r4, r4, #1
 678              	.LVL41:
 679 0012 014B     		ldr	r3, .L56
 680 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 681              		.loc 1 695 0
 682              		@ sp needed
 683 0016 70BD     		pop	{r4, r5, r6, pc}
 684              	.L57:
 685              		.align	2
 686              	.L56:
 687 0018 00000000 		.word	ADC_offset
 688              		.cfi_endproc
 689              	.LFE15:
 690              		.size	ADC_SetOffset, .-ADC_SetOffset
 691              		.section	.text.ADC_SetGain,"ax",%progbits
 692              		.align	2
 693              		.global	ADC_SetGain
 694              		.code	16
 695              		.thumb_func
 696              		.type	ADC_SetGain, %function
 697              	ADC_SetGain:
 698              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 26


 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 699              		.loc 1 724 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LVL42:
 704 0000 70B5     		push	{r4, r5, r6, lr}
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 4, -16
 707              		.cfi_offset 5, -12
 708              		.cfi_offset 6, -8
 709              		.cfi_offset 14, -4
 710 0002 0400     		movs	r4, r0
 711 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 712              		.loc 1 726 0
 713 0006 0028     		cmp	r0, #0
 714 0008 02D0     		beq	.L59
 715              		.loc 1 726 0 is_stmt 0 discriminator 1
 716 000a 0020     		movs	r0, #0
 717              	.LVL43:
 718 000c FFF7FEFF 		bl	CyHalt
 719              	.LVL44:
 720              	.L59:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 721              		.loc 1 728 0 is_stmt 1
 722 0010 A400     		lsls	r4, r4, #2
 723              	.LVL45:
 724 0012 014B     		ldr	r3, .L60
 725 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 726              		.loc 1 729 0
 727              		@ sp needed
 728              	.LVL46:
 729 0016 70BD     		pop	{r4, r5, r6, pc}
 730              	.L61:
 731              		.align	2
 732              	.L60:
 733 0018 00000000 		.word	ADC_countsPer10Volt
 734              		.cfi_endproc
 735              	.LFE16:
 736              		.size	ADC_SetGain, .-ADC_SetGain
 737              		.global	__aeabi_idiv
 738              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 739              		.align	2
 740              		.global	ADC_CountsTo_mVolts
 741              		.code	16
 742              		.thumb_func
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 27


 743              		.type	ADC_CountsTo_mVolts, %function
 744              	ADC_CountsTo_mVolts:
 745              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 746              		.loc 1 757 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL47:
 751 0000 70B5     		push	{r4, r5, r6, lr}
 752              		.cfi_def_cfa_offset 16
 753              		.cfi_offset 4, -16
 754              		.cfi_offset 5, -12
 755              		.cfi_offset 6, -8
 756              		.cfi_offset 14, -4
 757 0002 0400     		movs	r4, r0
 758 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 759              		.loc 1 761 0
 760 0006 0028     		cmp	r0, #0
 761 0008 02D0     		beq	.L63
 762              		.loc 1 761 0 is_stmt 0 discriminator 1
 763 000a 0020     		movs	r0, #0
 764              	.LVL48:
 765 000c FFF7FEFF 		bl	CyHalt
 766              	.LVL49:
 767              	.L63:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 28


 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 768              		.loc 1 772 0 is_stmt 1
 769 0010 6300     		lsls	r3, r4, #1
 770 0012 0F4A     		ldr	r2, .L66
 771 0014 995A     		ldrh	r1, [r3, r2]
 772 0016 09B2     		sxth	r1, r1
 773 0018 691A     		subs	r1, r5, r1
 774 001a 09B2     		sxth	r1, r1
 775              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 776              		.loc 1 774 0
 777 001c 0D48     		ldr	r0, .L66+4
 778 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 779              		.loc 1 775 0
 780 0020 0029     		cmp	r1, #0
 781 0022 06DD     		ble	.L64
 782              		.loc 1 775 0 is_stmt 0 discriminator 1
 783 0024 A300     		lsls	r3, r4, #2
 784 0026 0C4A     		ldr	r2, .L66+8
 785 0028 9A58     		ldr	r2, [r3, r2]
 786 002a D30F     		lsrs	r3, r2, #31
 787 002c 9A18     		adds	r2, r3, r2
 788 002e 5310     		asrs	r3, r2, #1
 789 0030 06E0     		b	.L65
 790              	.L64:
 791              		.loc 1 775 0 discriminator 2
 792 0032 A300     		lsls	r3, r4, #2
 793 0034 084A     		ldr	r2, .L66+8
 794 0036 9A58     		ldr	r2, [r3, r2]
 795 0038 D30F     		lsrs	r3, r2, #31
 796 003a 9A18     		adds	r2, r3, r2
 797 003c 5210     		asrs	r2, r2, #1
 798 003e 5342     		rsbs	r3, r2, #0
 799              	.L65:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 800              		.loc 1 774 0 is_stmt 1
 801 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 802              		.loc 1 776 0
 803 0042 A400     		lsls	r4, r4, #2
 804              	.LVL51:
 805 0044 044B     		ldr	r3, .L66+8
 806 0046 E158     		ldr	r1, [r4, r3]
 807              	.LVL52:
 808 0048 FFF7FEFF 		bl	__aeabi_idiv
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 29


 809              	.LVL53:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 810              		.loc 1 774 0
 811 004c 00B2     		sxth	r0, r0
 812              	.LVL54:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 813              		.loc 1 779 0
 814              		@ sp needed
 815 004e 70BD     		pop	{r4, r5, r6, pc}
 816              	.L67:
 817              		.align	2
 818              	.L66:
 819 0050 00000000 		.word	ADC_offset
 820 0054 10270000 		.word	10000
 821 0058 00000000 		.word	ADC_countsPer10Volt
 822              		.cfi_endproc
 823              	.LFE17:
 824              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 825              		.global	__aeabi_lmul
 826              		.global	__aeabi_ldivmod
 827              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 828              		.align	2
 829              		.global	ADC_CountsTo_uVolts
 830              		.code	16
 831              		.thumb_func
 832              		.type	ADC_CountsTo_uVolts, %function
 833              	ADC_CountsTo_uVolts:
 834              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 30


 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 835              		.loc 1 811 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL55:
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846 0002 0500     		movs	r5, r0
 847 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 848              		.loc 1 815 0
 849 0006 0028     		cmp	r0, #0
 850 0008 02D0     		beq	.L69
 851              		.loc 1 815 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL56:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL57:
 856              	.L69:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 857              		.loc 1 826 0 is_stmt 1
 858 0010 6A00     		lsls	r2, r5, #1
 859 0012 084B     		ldr	r3, .L70
 860 0014 D05A     		ldrh	r0, [r2, r3]
 861 0016 00B2     		sxth	r0, r0
 862 0018 201A     		subs	r0, r4, r0
 863 001a 00B2     		sxth	r0, r0
 864              	.LVL58:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 865              		.loc 1 828 0
 866 001c C117     		asrs	r1, r0, #31
 867 001e 064A     		ldr	r2, .L70+4
 868 0020 0023     		movs	r3, #0
 869 0022 FFF7FEFF 		bl	__aeabi_lmul
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 31


 870              	.LVL59:
 871 0026 AD00     		lsls	r5, r5, #2
 872              	.LVL60:
 873 0028 044B     		ldr	r3, .L70+8
 874 002a EA58     		ldr	r2, [r5, r3]
 875 002c D317     		asrs	r3, r2, #31
 876 002e FFF7FEFF 		bl	__aeabi_ldivmod
 877              	.LVL61:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 878              		.loc 1 831 0
 879              		@ sp needed
 880 0032 70BD     		pop	{r4, r5, r6, pc}
 881              	.L71:
 882              		.align	2
 883              	.L70:
 884 0034 00000000 		.word	ADC_offset
 885 0038 80969800 		.word	10000000
 886 003c 00000000 		.word	ADC_countsPer10Volt
 887              		.cfi_endproc
 888              	.LFE18:
 889              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 890              		.global	__aeabi_i2f
 891              		.global	__aeabi_fmul
 892              		.global	__aeabi_fdiv
 893              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 894              		.align	2
 895              		.global	ADC_CountsTo_Volts
 896              		.code	16
 897              		.thumb_func
 898              		.type	ADC_CountsTo_Volts, %function
 899              	ADC_CountsTo_Volts:
 900              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 32


 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 901              		.loc 1 856 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL62:
 906 0000 70B5     		push	{r4, r5, r6, lr}
 907              		.cfi_def_cfa_offset 16
 908              		.cfi_offset 4, -16
 909              		.cfi_offset 5, -12
 910              		.cfi_offset 6, -8
 911              		.cfi_offset 14, -4
 912 0002 0400     		movs	r4, r0
 913 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 914              		.loc 1 860 0
 915 0006 0028     		cmp	r0, #0
 916 0008 02D0     		beq	.L73
 917              		.loc 1 860 0 is_stmt 0 discriminator 1
 918 000a 0020     		movs	r0, #0
 919              	.LVL63:
 920 000c FFF7FEFF 		bl	CyHalt
 921              	.LVL64:
 922              	.L73:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 923              		.loc 1 871 0 is_stmt 1
 924 0010 6200     		lsls	r2, r4, #1
 925 0012 0A4B     		ldr	r3, .L74
 926 0014 D05A     		ldrh	r0, [r2, r3]
 927 0016 00B2     		sxth	r0, r0
 928 0018 281A     		subs	r0, r5, r0
 929 001a 00B2     		sxth	r0, r0
 930              	.LVL65:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 931              		.loc 1 873 0
 932 001c FFF7FEFF 		bl	__aeabi_i2f
 933              	.LVL66:
 934 0020 0749     		ldr	r1, .L74+4
 935 0022 FFF7FEFF 		bl	__aeabi_fmul
 936              	.LVL67:
 937 0026 051C     		adds	r5, r0, #0
 938 0028 A400     		lsls	r4, r4, #2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 33


 939              	.LVL68:
 940 002a 064B     		ldr	r3, .L74+8
 941 002c E058     		ldr	r0, [r4, r3]
 942 002e FFF7FEFF 		bl	__aeabi_i2f
 943              	.LVL69:
 944 0032 011C     		adds	r1, r0, #0
 945 0034 281C     		adds	r0, r5, #0
 946 0036 FFF7FEFF 		bl	__aeabi_fdiv
 947              	.LVL70:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 948              		.loc 1 876 0
 949              		@ sp needed
 950 003a 70BD     		pop	{r4, r5, r6, pc}
 951              	.L75:
 952              		.align	2
 953              	.L74:
 954 003c 00000000 		.word	ADC_offset
 955 0040 00002041 		.word	1092616192
 956 0044 00000000 		.word	ADC_countsPer10Volt
 957              		.cfi_endproc
 958              	.LFE19:
 959              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 960              		.comm	ADC_countsPer10Volt,4,4
 961              		.comm	ADC_offset,2,4
 962              		.global	ADC_initVar
 963              		.bss
 964              		.set	.LANCHOR0,. + 0
 965              		.type	ADC_initVar, %object
 966              		.size	ADC_initVar, 1
 967              	ADC_initVar:
 968 0000 00       		.space	1
 969              		.text
 970              	.Letext0:
 971              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 972              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 973              		.section	.debug_info,"",%progbits
 974              	.Ldebug_info0:
 975 0000 75050000 		.4byte	0x575
 976 0004 0400     		.2byte	0x4
 977 0006 00000000 		.4byte	.Ldebug_abbrev0
 978 000a 04       		.byte	0x4
 979 000b 01       		.uleb128 0x1
 980 000c 32000000 		.4byte	.LASF63
 981 0010 0C       		.byte	0xc
 982 0011 88020000 		.4byte	.LASF64
 983 0015 4C030000 		.4byte	.LASF65
 984 0019 00000000 		.4byte	.Ldebug_ranges0+0
 985 001d 00000000 		.4byte	0
 986 0021 00000000 		.4byte	.Ldebug_line0
 987 0025 02       		.uleb128 0x2
 988 0026 01       		.byte	0x1
 989 0027 06       		.byte	0x6
 990 0028 F6000000 		.4byte	.LASF0
 991 002c 02       		.uleb128 0x2
 992 002d 01       		.byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 34


 993 002e 08       		.byte	0x8
 994 002f EC020000 		.4byte	.LASF1
 995 0033 02       		.uleb128 0x2
 996 0034 02       		.byte	0x2
 997 0035 05       		.byte	0x5
 998 0036 05030000 		.4byte	.LASF2
 999 003a 02       		.uleb128 0x2
 1000 003b 02       		.byte	0x2
 1001 003c 07       		.byte	0x7
 1002 003d D7010000 		.4byte	.LASF3
 1003 0041 02       		.uleb128 0x2
 1004 0042 04       		.byte	0x4
 1005 0043 05       		.byte	0x5
 1006 0044 19010000 		.4byte	.LASF4
 1007 0048 02       		.uleb128 0x2
 1008 0049 04       		.byte	0x4
 1009 004a 07       		.byte	0x7
 1010 004b A6010000 		.4byte	.LASF5
 1011 004f 02       		.uleb128 0x2
 1012 0050 08       		.byte	0x8
 1013 0051 05       		.byte	0x5
 1014 0052 E8000000 		.4byte	.LASF6
 1015 0056 02       		.uleb128 0x2
 1016 0057 08       		.byte	0x8
 1017 0058 07       		.byte	0x7
 1018 0059 C0000000 		.4byte	.LASF7
 1019 005d 03       		.uleb128 0x3
 1020 005e 04       		.byte	0x4
 1021 005f 05       		.byte	0x5
 1022 0060 696E7400 		.ascii	"int\000"
 1023 0064 02       		.uleb128 0x2
 1024 0065 04       		.byte	0x4
 1025 0066 07       		.byte	0x7
 1026 0067 92010000 		.4byte	.LASF8
 1027 006b 04       		.uleb128 0x4
 1028 006c 4A010000 		.4byte	.LASF9
 1029 0070 02       		.byte	0x2
 1030 0071 E401     		.2byte	0x1e4
 1031 0073 2C000000 		.4byte	0x2c
 1032 0077 04       		.uleb128 0x4
 1033 0078 00000000 		.4byte	.LASF10
 1034 007c 02       		.byte	0x2
 1035 007d E501     		.2byte	0x1e5
 1036 007f 3A000000 		.4byte	0x3a
 1037 0083 04       		.uleb128 0x4
 1038 0084 61010000 		.4byte	.LASF11
 1039 0088 02       		.byte	0x2
 1040 0089 E601     		.2byte	0x1e6
 1041 008b 48000000 		.4byte	0x48
 1042 008f 04       		.uleb128 0x4
 1043 0090 90030000 		.4byte	.LASF12
 1044 0094 02       		.byte	0x2
 1045 0095 E801     		.2byte	0x1e8
 1046 0097 33000000 		.4byte	0x33
 1047 009b 04       		.uleb128 0x4
 1048 009c 09010000 		.4byte	.LASF13
 1049 00a0 02       		.byte	0x2
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 35


 1050 00a1 E901     		.2byte	0x1e9
 1051 00a3 41000000 		.4byte	0x41
 1052 00a7 04       		.uleb128 0x4
 1053 00a8 16020000 		.4byte	.LASF14
 1054 00ac 02       		.byte	0x2
 1055 00ad EA01     		.2byte	0x1ea
 1056 00af B3000000 		.4byte	0xb3
 1057 00b3 02       		.uleb128 0x2
 1058 00b4 04       		.byte	0x4
 1059 00b5 04       		.byte	0x4
 1060 00b6 B1020000 		.4byte	.LASF15
 1061 00ba 02       		.uleb128 0x2
 1062 00bb 08       		.byte	0x8
 1063 00bc 04       		.byte	0x4
 1064 00bd 5A010000 		.4byte	.LASF16
 1065 00c1 04       		.uleb128 0x4
 1066 00c2 61020000 		.4byte	.LASF17
 1067 00c6 02       		.byte	0x2
 1068 00c7 EF01     		.2byte	0x1ef
 1069 00c9 4F000000 		.4byte	0x4f
 1070 00cd 02       		.uleb128 0x2
 1071 00ce 01       		.byte	0x1
 1072 00cf 08       		.byte	0x8
 1073 00d0 23030000 		.4byte	.LASF18
 1074 00d4 04       		.uleb128 0x4
 1075 00d5 10020000 		.4byte	.LASF19
 1076 00d9 02       		.byte	0x2
 1077 00da 9002     		.2byte	0x290
 1078 00dc E0000000 		.4byte	0xe0
 1079 00e0 05       		.uleb128 0x5
 1080 00e1 83000000 		.4byte	0x83
 1081 00e5 02       		.uleb128 0x2
 1082 00e6 08       		.byte	0x8
 1083 00e7 04       		.byte	0x4
 1084 00e8 30020000 		.4byte	.LASF20
 1085 00ec 02       		.uleb128 0x2
 1086 00ed 04       		.byte	0x4
 1087 00ee 07       		.byte	0x7
 1088 00ef 1E020000 		.4byte	.LASF21
 1089 00f3 06       		.uleb128 0x6
 1090 00f4 29000000 		.4byte	.LASF25
 1091 00f8 01       		.byte	0x1
 1092 00f9 5E       		.byte	0x5e
 1093 00fa 00000000 		.4byte	.LFB3
 1094 00fe 04010000 		.4byte	.LFE3-.LFB3
 1095 0102 01       		.uleb128 0x1
 1096 0103 9C       		.byte	0x9c
 1097 0104 5D010000 		.4byte	0x15d
 1098 0108 07       		.uleb128 0x7
 1099 0109 18030000 		.4byte	.LASF22
 1100 010d 01       		.byte	0x1
 1101 010e 60       		.byte	0x60
 1102 010f 83000000 		.4byte	0x83
 1103 0113 00000000 		.4byte	.LLST0
 1104 0117 07       		.uleb128 0x7
 1105 0118 CD010000 		.4byte	.LASF23
 1106 011c 01       		.byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 36


 1107 011d 61       		.byte	0x61
 1108 011e 83000000 		.4byte	0x83
 1109 0122 1F000000 		.4byte	.LLST1
 1110 0126 07       		.uleb128 0x7
 1111 0127 0F000000 		.4byte	.LASF24
 1112 012b 01       		.byte	0x1
 1113 012c 62       		.byte	0x62
 1114 012d 9B000000 		.4byte	0x9b
 1115 0131 60000000 		.4byte	.LLST2
 1116 0135 08       		.uleb128 0x8
 1117 0136 0A000000 		.4byte	.LVL0
 1118 013a 4C050000 		.4byte	0x54c
 1119 013e 4D010000 		.4byte	0x14d
 1120 0142 09       		.uleb128 0x9
 1121 0143 01       		.uleb128 0x1
 1122 0144 50       		.byte	0x50
 1123 0145 01       		.uleb128 0x1
 1124 0146 3F       		.byte	0x3f
 1125 0147 09       		.uleb128 0x9
 1126 0148 01       		.uleb128 0x1
 1127 0149 51       		.byte	0x51
 1128 014a 01       		.uleb128 0x1
 1129 014b 33       		.byte	0x33
 1130 014c 00       		.byte	0
 1131 014d 0A       		.uleb128 0xa
 1132 014e 12000000 		.4byte	.LVL1
 1133 0152 57050000 		.4byte	0x557
 1134 0156 09       		.uleb128 0x9
 1135 0157 01       		.uleb128 0x1
 1136 0158 50       		.byte	0x50
 1137 0159 01       		.uleb128 0x1
 1138 015a 3F       		.byte	0x3f
 1139 015b 00       		.byte	0
 1140 015c 00       		.byte	0
 1141 015d 0B       		.uleb128 0xb
 1142 015e 85030000 		.4byte	.LASF26
 1143 0162 01       		.byte	0x1
 1144 0163 4A01     		.2byte	0x14a
 1145 0165 00000000 		.4byte	.LFB4
 1146 0169 30000000 		.4byte	.LFE4-.LFB4
 1147 016d 01       		.uleb128 0x1
 1148 016e 9C       		.byte	0x9c
 1149 016f 83010000 		.4byte	0x183
 1150 0173 0A       		.uleb128 0xa
 1151 0174 24000000 		.4byte	.LVL10
 1152 0178 62050000 		.4byte	0x562
 1153 017c 09       		.uleb128 0x9
 1154 017d 01       		.uleb128 0x1
 1155 017e 50       		.byte	0x50
 1156 017f 01       		.uleb128 0x1
 1157 0180 3A       		.byte	0x3a
 1158 0181 00       		.byte	0
 1159 0182 00       		.byte	0
 1160 0183 06       		.uleb128 0x6
 1161 0184 0F010000 		.4byte	.LASF27
 1162 0188 01       		.byte	0x1
 1163 0189 3F       		.byte	0x3f
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 37


 1164 018a 00000000 		.4byte	.LFB2
 1165 018e 20000000 		.4byte	.LFE2-.LFB2
 1166 0192 01       		.uleb128 0x1
 1167 0193 9C       		.byte	0x9c
 1168 0194 AB010000 		.4byte	0x1ab
 1169 0198 0C       		.uleb128 0xc
 1170 0199 0E000000 		.4byte	.LVL11
 1171 019d F3000000 		.4byte	0xf3
 1172 01a1 0C       		.uleb128 0xc
 1173 01a2 18000000 		.4byte	.LVL12
 1174 01a6 5D010000 		.4byte	0x15d
 1175 01aa 00       		.byte	0
 1176 01ab 0D       		.uleb128 0xd
 1177 01ac 0F030000 		.4byte	.LASF28
 1178 01b0 01       		.byte	0x1
 1179 01b1 6D01     		.2byte	0x16d
 1180 01b3 00000000 		.4byte	.LFB5
 1181 01b7 10000000 		.4byte	.LFE5-.LFB5
 1182 01bb 01       		.uleb128 0x1
 1183 01bc 9C       		.byte	0x9c
 1184 01bd 0D       		.uleb128 0xd
 1185 01be D7000000 		.4byte	.LASF29
 1186 01c2 01       		.byte	0x1
 1187 01c3 8701     		.2byte	0x187
 1188 01c5 00000000 		.4byte	.LFB6
 1189 01c9 14000000 		.4byte	.LFE6-.LFB6
 1190 01cd 01       		.uleb128 0x1
 1191 01ce 9C       		.byte	0x9c
 1192 01cf 0D       		.uleb128 0xd
 1193 01d0 F9010000 		.4byte	.LASF30
 1194 01d4 01       		.byte	0x1
 1195 01d5 A001     		.2byte	0x1a0
 1196 01d7 00000000 		.4byte	.LFB7
 1197 01db 14000000 		.4byte	.LFE7-.LFB7
 1198 01df 01       		.uleb128 0x1
 1199 01e0 9C       		.byte	0x9c
 1200 01e1 0E       		.uleb128 0xe
 1201 01e2 4D020000 		.4byte	.LASF32
 1202 01e6 01       		.byte	0x1
 1203 01e7 C201     		.2byte	0x1c2
 1204 01e9 83000000 		.4byte	0x83
 1205 01ed 00000000 		.4byte	.LFB8
 1206 01f1 28000000 		.4byte	.LFE8-.LFB8
 1207 01f5 01       		.uleb128 0x1
 1208 01f6 9C       		.byte	0x9c
 1209 01f7 1C020000 		.4byte	0x21c
 1210 01fb 0F       		.uleb128 0xf
 1211 01fc 79010000 		.4byte	.LASF34
 1212 0200 01       		.byte	0x1
 1213 0201 C201     		.2byte	0x1c2
 1214 0203 83000000 		.4byte	0x83
 1215 0207 76000000 		.4byte	.LLST3
 1216 020b 10       		.uleb128 0x10
 1217 020c 02010000 		.4byte	.LASF31
 1218 0210 01       		.byte	0x1
 1219 0211 C401     		.2byte	0x1c4
 1220 0213 83000000 		.4byte	0x83
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 38


 1221 0217 BB000000 		.4byte	.LLST4
 1222 021b 00       		.byte	0
 1223 021c 0E       		.uleb128 0xe
 1224 021d AB030000 		.4byte	.LASF33
 1225 0221 01       		.byte	0x1
 1226 0222 F801     		.2byte	0x1f8
 1227 0224 8F000000 		.4byte	0x8f
 1228 0228 00000000 		.4byte	.LFB9
 1229 022c 2C000000 		.4byte	.LFE9-.LFB9
 1230 0230 01       		.uleb128 0x1
 1231 0231 9C       		.byte	0x9c
 1232 0232 66020000 		.4byte	0x266
 1233 0236 0F       		.uleb128 0xf
 1234 0237 1E030000 		.4byte	.LASF35
 1235 023b 01       		.byte	0x1
 1236 023c F801     		.2byte	0x1f8
 1237 023e 83000000 		.4byte	0x83
 1238 0242 F1000000 		.4byte	.LLST5
 1239 0246 10       		.uleb128 0x10
 1240 0247 A4030000 		.4byte	.LASF36
 1241 024b 01       		.byte	0x1
 1242 024c FA01     		.2byte	0x1fa
 1243 024e 83000000 		.4byte	0x83
 1244 0252 36010000 		.4byte	.LLST6
 1245 0256 0A       		.uleb128 0xa
 1246 0257 0C000000 		.4byte	.LVL22
 1247 025b 6D050000 		.4byte	0x56d
 1248 025f 09       		.uleb128 0x9
 1249 0260 01       		.uleb128 0x1
 1250 0261 50       		.byte	0x50
 1251 0262 01       		.uleb128 0x1
 1252 0263 30       		.byte	0x30
 1253 0264 00       		.byte	0
 1254 0265 00       		.byte	0
 1255 0266 0B       		.uleb128 0xb
 1256 0267 78020000 		.4byte	.LASF37
 1257 026b 01       		.byte	0x1
 1258 026c 2502     		.2byte	0x225
 1259 026e 00000000 		.4byte	.LFB10
 1260 0272 10000000 		.4byte	.LFE10-.LFB10
 1261 0276 01       		.uleb128 0x1
 1262 0277 9C       		.byte	0x9c
 1263 0278 8D020000 		.4byte	0x28d
 1264 027c 0F       		.uleb128 0xf
 1265 027d 68010000 		.4byte	.LASF38
 1266 0281 01       		.byte	0x1
 1267 0282 2502     		.2byte	0x225
 1268 0284 83000000 		.4byte	0x83
 1269 0288 54010000 		.4byte	.LLST7
 1270 028c 00       		.byte	0
 1271 028d 0B       		.uleb128 0xb
 1272 028e D5020000 		.4byte	.LASF39
 1273 0292 01       		.byte	0x1
 1274 0293 5102     		.2byte	0x251
 1275 0295 00000000 		.4byte	.LFB11
 1276 0299 1C000000 		.4byte	.LFE11-.LFB11
 1277 029d 01       		.uleb128 0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 39


 1278 029e 9C       		.byte	0x9c
 1279 029f B4020000 		.4byte	0x2b4
 1280 02a3 0F       		.uleb128 0xf
 1281 02a4 27020000 		.4byte	.LASF40
 1282 02a8 01       		.byte	0x1
 1283 02a9 5102     		.2byte	0x251
 1284 02ab 83000000 		.4byte	0x83
 1285 02af 75010000 		.4byte	.LLST8
 1286 02b3 00       		.byte	0
 1287 02b4 0B       		.uleb128 0xb
 1288 02b5 3C020000 		.4byte	.LASF41
 1289 02b9 01       		.byte	0x1
 1290 02ba 6602     		.2byte	0x266
 1291 02bc 00000000 		.4byte	.LFB12
 1292 02c0 18000000 		.4byte	.LFE12-.LFB12
 1293 02c4 01       		.uleb128 0x1
 1294 02c5 9C       		.byte	0x9c
 1295 02c6 DB020000 		.4byte	0x2db
 1296 02ca 0F       		.uleb128 0xf
 1297 02cb B7020000 		.4byte	.LASF42
 1298 02cf 01       		.byte	0x1
 1299 02d0 6602     		.2byte	0x266
 1300 02d2 83000000 		.4byte	0x83
 1301 02d6 96010000 		.4byte	.LLST9
 1302 02da 00       		.byte	0
 1303 02db 0B       		.uleb128 0xb
 1304 02dc 81010000 		.4byte	.LASF43
 1305 02e0 01       		.byte	0x1
 1306 02e1 7E02     		.2byte	0x27e
 1307 02e3 00000000 		.4byte	.LFB13
 1308 02e7 10000000 		.4byte	.LFE13-.LFB13
 1309 02eb 01       		.uleb128 0x1
 1310 02ec 9C       		.byte	0x9c
 1311 02ed 02030000 		.4byte	0x302
 1312 02f1 0F       		.uleb128 0xf
 1313 02f2 68010000 		.4byte	.LASF38
 1314 02f6 01       		.byte	0x1
 1315 02f7 7E02     		.2byte	0x27e
 1316 02f9 83000000 		.4byte	0x83
 1317 02fd B7010000 		.4byte	.LLST10
 1318 0301 00       		.byte	0
 1319 0302 0B       		.uleb128 0xb
 1320 0303 B8010000 		.4byte	.LASF44
 1321 0307 01       		.byte	0x1
 1322 0308 9502     		.2byte	0x295
 1323 030a 00000000 		.4byte	.LFB14
 1324 030e 10000000 		.4byte	.LFE14-.LFB14
 1325 0312 01       		.uleb128 0x1
 1326 0313 9C       		.byte	0x9c
 1327 0314 29030000 		.4byte	0x329
 1328 0318 0F       		.uleb128 0xf
 1329 0319 68010000 		.4byte	.LASF38
 1330 031d 01       		.byte	0x1
 1331 031e 9502     		.2byte	0x295
 1332 0320 83000000 		.4byte	0x83
 1333 0324 D8010000 		.4byte	.LLST11
 1334 0328 00       		.byte	0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 40


 1335 0329 0B       		.uleb128 0xb
 1336 032a 96030000 		.4byte	.LASF45
 1337 032e 01       		.byte	0x1
 1338 032f B102     		.2byte	0x2b1
 1339 0331 00000000 		.4byte	.LFB15
 1340 0335 1C000000 		.4byte	.LFE15-.LFB15
 1341 0339 01       		.uleb128 0x1
 1342 033a 9C       		.byte	0x9c
 1343 033b 6F030000 		.4byte	0x36f
 1344 033f 0F       		.uleb128 0xf
 1345 0340 1E030000 		.4byte	.LASF35
 1346 0344 01       		.byte	0x1
 1347 0345 B102     		.2byte	0x2b1
 1348 0347 83000000 		.4byte	0x83
 1349 034b F9010000 		.4byte	.LLST12
 1350 034f 0F       		.uleb128 0xf
 1351 0350 3B030000 		.4byte	.LASF46
 1352 0354 01       		.byte	0x1
 1353 0355 B102     		.2byte	0x2b1
 1354 0357 8F000000 		.4byte	0x8f
 1355 035b 25020000 		.4byte	.LLST13
 1356 035f 0A       		.uleb128 0xa
 1357 0360 10000000 		.4byte	.LVL40
 1358 0364 6D050000 		.4byte	0x56d
 1359 0368 09       		.uleb128 0x9
 1360 0369 01       		.uleb128 0x1
 1361 036a 50       		.byte	0x50
 1362 036b 01       		.uleb128 0x1
 1363 036c 30       		.byte	0x30
 1364 036d 00       		.byte	0
 1365 036e 00       		.byte	0
 1366 036f 0B       		.uleb128 0xb
 1367 0370 A5020000 		.4byte	.LASF47
 1368 0374 01       		.byte	0x1
 1369 0375 D302     		.2byte	0x2d3
 1370 0377 00000000 		.4byte	.LFB16
 1371 037b 1C000000 		.4byte	.LFE16-.LFB16
 1372 037f 01       		.uleb128 0x1
 1373 0380 9C       		.byte	0x9c
 1374 0381 B5030000 		.4byte	0x3b5
 1375 0385 0F       		.uleb128 0xf
 1376 0386 1E030000 		.4byte	.LASF35
 1377 038a 01       		.byte	0x1
 1378 038b D302     		.2byte	0x2d3
 1379 038d 83000000 		.4byte	0x83
 1380 0391 46020000 		.4byte	.LLST14
 1381 0395 0F       		.uleb128 0xf
 1382 0396 07000000 		.4byte	.LASF48
 1383 039a 01       		.byte	0x1
 1384 039b D302     		.2byte	0x2d3
 1385 039d 9B000000 		.4byte	0x9b
 1386 03a1 72020000 		.4byte	.LLST15
 1387 03a5 0A       		.uleb128 0xa
 1388 03a6 10000000 		.4byte	.LVL44
 1389 03aa 6D050000 		.4byte	0x56d
 1390 03ae 09       		.uleb128 0x9
 1391 03af 01       		.uleb128 0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 41


 1392 03b0 50       		.byte	0x50
 1393 03b1 01       		.uleb128 0x1
 1394 03b2 30       		.byte	0x30
 1395 03b3 00       		.byte	0
 1396 03b4 00       		.byte	0
 1397 03b5 11       		.uleb128 0x11
 1398 03b6 C1020000 		.4byte	.LASF49
 1399 03ba 01       		.byte	0x1
 1400 03bb F402     		.2byte	0x2f4
 1401 03bd 8F000000 		.4byte	0x8f
 1402 03c1 00000000 		.4byte	.LFB17
 1403 03c5 5C000000 		.4byte	.LFE17-.LFB17
 1404 03c9 01       		.uleb128 0x1
 1405 03ca 9C       		.byte	0x9c
 1406 03cb 0D040000 		.4byte	0x40d
 1407 03cf 0F       		.uleb128 0xf
 1408 03d0 1E030000 		.4byte	.LASF35
 1409 03d4 01       		.byte	0x1
 1410 03d5 F402     		.2byte	0x2f4
 1411 03d7 83000000 		.4byte	0x83
 1412 03db A2020000 		.4byte	.LLST16
 1413 03df 0F       		.uleb128 0xf
 1414 03e0 42030000 		.4byte	.LASF50
 1415 03e4 01       		.byte	0x1
 1416 03e5 F402     		.2byte	0x2f4
 1417 03e7 8F000000 		.4byte	0x8f
 1418 03eb CE020000 		.4byte	.LLST17
 1419 03ef 12       		.uleb128 0x12
 1420 03f0 09020000 		.4byte	.LASF51
 1421 03f4 01       		.byte	0x1
 1422 03f5 F602     		.2byte	0x2f6
 1423 03f7 8F000000 		.4byte	0x8f
 1424 03fb 01       		.uleb128 0x1
 1425 03fc 50       		.byte	0x50
 1426 03fd 0A       		.uleb128 0xa
 1427 03fe 10000000 		.4byte	.LVL49
 1428 0402 6D050000 		.4byte	0x56d
 1429 0406 09       		.uleb128 0x9
 1430 0407 01       		.uleb128 0x1
 1431 0408 50       		.byte	0x50
 1432 0409 01       		.uleb128 0x1
 1433 040a 30       		.byte	0x30
 1434 040b 00       		.byte	0
 1435 040c 00       		.byte	0
 1436 040d 11       		.uleb128 0x11
 1437 040e 22010000 		.4byte	.LASF52
 1438 0412 01       		.byte	0x1
 1439 0413 2A03     		.2byte	0x32a
 1440 0415 9B000000 		.4byte	0x9b
 1441 0419 00000000 		.4byte	.LFB18
 1442 041d 40000000 		.4byte	.LFE18-.LFB18
 1443 0421 01       		.uleb128 0x1
 1444 0422 9C       		.byte	0x9c
 1445 0423 63040000 		.4byte	0x463
 1446 0427 0F       		.uleb128 0xf
 1447 0428 1E030000 		.4byte	.LASF35
 1448 042c 01       		.byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 42


 1449 042d 2A03     		.2byte	0x32a
 1450 042f 83000000 		.4byte	0x83
 1451 0433 05030000 		.4byte	.LLST18
 1452 0437 0F       		.uleb128 0xf
 1453 0438 42030000 		.4byte	.LASF50
 1454 043c 01       		.byte	0x1
 1455 043d 2A03     		.2byte	0x32a
 1456 043f 8F000000 		.4byte	0x8f
 1457 0443 31030000 		.4byte	.LLST19
 1458 0447 13       		.uleb128 0x13
 1459 0448 9F010000 		.4byte	.LASF66
 1460 044c 01       		.byte	0x1
 1461 044d 2C03     		.2byte	0x32c
 1462 044f C1000000 		.4byte	0xc1
 1463 0453 0A       		.uleb128 0xa
 1464 0454 10000000 		.4byte	.LVL57
 1465 0458 6D050000 		.4byte	0x56d
 1466 045c 09       		.uleb128 0x9
 1467 045d 01       		.uleb128 0x1
 1468 045e 50       		.byte	0x50
 1469 045f 01       		.uleb128 0x1
 1470 0460 30       		.byte	0x30
 1471 0461 00       		.byte	0
 1472 0462 00       		.byte	0
 1473 0463 11       		.uleb128 0x11
 1474 0464 16000000 		.4byte	.LASF53
 1475 0468 01       		.byte	0x1
 1476 0469 5703     		.2byte	0x357
 1477 046b A7000000 		.4byte	0xa7
 1478 046f 00000000 		.4byte	.LFB19
 1479 0473 48000000 		.4byte	.LFE19-.LFB19
 1480 0477 01       		.uleb128 0x1
 1481 0478 9C       		.byte	0x9c
 1482 0479 BB040000 		.4byte	0x4bb
 1483 047d 0F       		.uleb128 0xf
 1484 047e 1E030000 		.4byte	.LASF35
 1485 0482 01       		.byte	0x1
 1486 0483 5703     		.2byte	0x357
 1487 0485 83000000 		.4byte	0x83
 1488 0489 68030000 		.4byte	.LLST20
 1489 048d 0F       		.uleb128 0xf
 1490 048e 42030000 		.4byte	.LASF50
 1491 0492 01       		.byte	0x1
 1492 0493 5703     		.2byte	0x357
 1493 0495 8F000000 		.4byte	0x8f
 1494 0499 94030000 		.4byte	.LLST21
 1495 049d 12       		.uleb128 0x12
 1496 049e C7010000 		.4byte	.LASF54
 1497 04a2 01       		.byte	0x1
 1498 04a3 5903     		.2byte	0x359
 1499 04a5 A7000000 		.4byte	0xa7
 1500 04a9 01       		.uleb128 0x1
 1501 04aa 50       		.byte	0x50
 1502 04ab 0A       		.uleb128 0xa
 1503 04ac 10000000 		.4byte	.LVL64
 1504 04b0 6D050000 		.4byte	0x56d
 1505 04b4 09       		.uleb128 0x9
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 43


 1506 04b5 01       		.uleb128 0x1
 1507 04b6 50       		.byte	0x50
 1508 04b7 01       		.uleb128 0x1
 1509 04b8 30       		.byte	0x30
 1510 04b9 00       		.byte	0
 1511 04ba 00       		.byte	0
 1512 04bb 14       		.uleb128 0x14
 1513 04bc CB040000 		.4byte	0x4cb
 1514 04c0 CB040000 		.4byte	0x4cb
 1515 04c4 15       		.uleb128 0x15
 1516 04c5 EC000000 		.4byte	0xec
 1517 04c9 00       		.byte	0
 1518 04ca 00       		.byte	0
 1519 04cb 16       		.uleb128 0x16
 1520 04cc 83000000 		.4byte	0x83
 1521 04d0 17       		.uleb128 0x17
 1522 04d1 28030000 		.4byte	.LASF55
 1523 04d5 01       		.byte	0x1
 1524 04d6 21       		.byte	0x21
 1525 04d7 E0040000 		.4byte	0x4e0
 1526 04db 04       		.byte	0x4
 1527 04dc 00       		.byte	0
 1528 04dd 02       		.byte	0x2
 1529 04de 00       		.byte	0
 1530 04df 00       		.byte	0
 1531 04e0 16       		.uleb128 0x16
 1532 04e1 BB040000 		.4byte	0x4bb
 1533 04e5 18       		.uleb128 0x18
 1534 04e6 6D010000 		.4byte	.LASF56
 1535 04ea 01       		.byte	0x1
 1536 04eb 18       		.byte	0x18
 1537 04ec 6B000000 		.4byte	0x6b
 1538 04f0 05       		.uleb128 0x5
 1539 04f1 03       		.byte	0x3
 1540 04f2 00000000 		.4byte	ADC_initVar
 1541 04f6 14       		.uleb128 0x14
 1542 04f7 06050000 		.4byte	0x506
 1543 04fb 06050000 		.4byte	0x506
 1544 04ff 15       		.uleb128 0x15
 1545 0500 EC000000 		.4byte	0xec
 1546 0504 00       		.byte	0
 1547 0505 00       		.byte	0
 1548 0506 05       		.uleb128 0x5
 1549 0507 8F000000 		.4byte	0x8f
 1550 050b 18       		.uleb128 0x18
 1551 050c FA020000 		.4byte	.LASF57
 1552 0510 01       		.byte	0x1
 1553 0511 19       		.byte	0x19
 1554 0512 1C050000 		.4byte	0x51c
 1555 0516 05       		.uleb128 0x5
 1556 0517 03       		.byte	0x3
 1557 0518 00000000 		.4byte	ADC_offset
 1558 051c 05       		.uleb128 0x5
 1559 051d F6040000 		.4byte	0x4f6
 1560 0521 14       		.uleb128 0x14
 1561 0522 31050000 		.4byte	0x531
 1562 0526 31050000 		.4byte	0x531
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 44


 1563 052a 15       		.uleb128 0x15
 1564 052b EC000000 		.4byte	0xec
 1565 052f 00       		.byte	0
 1566 0530 00       		.byte	0
 1567 0531 05       		.uleb128 0x5
 1568 0532 9B000000 		.4byte	0x9b
 1569 0536 18       		.uleb128 0x18
 1570 0537 36010000 		.4byte	.LASF58
 1571 053b 01       		.byte	0x1
 1572 053c 1A       		.byte	0x1a
 1573 053d 47050000 		.4byte	0x547
 1574 0541 05       		.uleb128 0x5
 1575 0542 03       		.byte	0x3
 1576 0543 00000000 		.4byte	ADC_countsPer10Volt
 1577 0547 05       		.uleb128 0x5
 1578 0548 21050000 		.4byte	0x521
 1579 054c 19       		.uleb128 0x19
 1580 054d 67020000 		.4byte	.LASF59
 1581 0551 67020000 		.4byte	.LASF59
 1582 0555 03       		.byte	0x3
 1583 0556 C0       		.byte	0xc0
 1584 0557 19       		.uleb128 0x19
 1585 0558 EA010000 		.4byte	.LASF60
 1586 055c EA010000 		.4byte	.LASF60
 1587 0560 03       		.byte	0x3
 1588 0561 BD       		.byte	0xbd
 1589 0562 19       		.uleb128 0x19
 1590 0563 50010000 		.4byte	.LASF61
 1591 0567 50010000 		.4byte	.LASF61
 1592 056b 03       		.byte	0x3
 1593 056c DA       		.byte	0xda
 1594 056d 19       		.uleb128 0x19
 1595 056e E5020000 		.4byte	.LASF62
 1596 0572 E5020000 		.4byte	.LASF62
 1597 0576 03       		.byte	0x3
 1598 0577 E7       		.byte	0xe7
 1599 0578 00       		.byte	0
 1600              		.section	.debug_abbrev,"",%progbits
 1601              	.Ldebug_abbrev0:
 1602 0000 01       		.uleb128 0x1
 1603 0001 11       		.uleb128 0x11
 1604 0002 01       		.byte	0x1
 1605 0003 25       		.uleb128 0x25
 1606 0004 0E       		.uleb128 0xe
 1607 0005 13       		.uleb128 0x13
 1608 0006 0B       		.uleb128 0xb
 1609 0007 03       		.uleb128 0x3
 1610 0008 0E       		.uleb128 0xe
 1611 0009 1B       		.uleb128 0x1b
 1612 000a 0E       		.uleb128 0xe
 1613 000b 55       		.uleb128 0x55
 1614 000c 17       		.uleb128 0x17
 1615 000d 11       		.uleb128 0x11
 1616 000e 01       		.uleb128 0x1
 1617 000f 10       		.uleb128 0x10
 1618 0010 17       		.uleb128 0x17
 1619 0011 00       		.byte	0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 45


 1620 0012 00       		.byte	0
 1621 0013 02       		.uleb128 0x2
 1622 0014 24       		.uleb128 0x24
 1623 0015 00       		.byte	0
 1624 0016 0B       		.uleb128 0xb
 1625 0017 0B       		.uleb128 0xb
 1626 0018 3E       		.uleb128 0x3e
 1627 0019 0B       		.uleb128 0xb
 1628 001a 03       		.uleb128 0x3
 1629 001b 0E       		.uleb128 0xe
 1630 001c 00       		.byte	0
 1631 001d 00       		.byte	0
 1632 001e 03       		.uleb128 0x3
 1633 001f 24       		.uleb128 0x24
 1634 0020 00       		.byte	0
 1635 0021 0B       		.uleb128 0xb
 1636 0022 0B       		.uleb128 0xb
 1637 0023 3E       		.uleb128 0x3e
 1638 0024 0B       		.uleb128 0xb
 1639 0025 03       		.uleb128 0x3
 1640 0026 08       		.uleb128 0x8
 1641 0027 00       		.byte	0
 1642 0028 00       		.byte	0
 1643 0029 04       		.uleb128 0x4
 1644 002a 16       		.uleb128 0x16
 1645 002b 00       		.byte	0
 1646 002c 03       		.uleb128 0x3
 1647 002d 0E       		.uleb128 0xe
 1648 002e 3A       		.uleb128 0x3a
 1649 002f 0B       		.uleb128 0xb
 1650 0030 3B       		.uleb128 0x3b
 1651 0031 05       		.uleb128 0x5
 1652 0032 49       		.uleb128 0x49
 1653 0033 13       		.uleb128 0x13
 1654 0034 00       		.byte	0
 1655 0035 00       		.byte	0
 1656 0036 05       		.uleb128 0x5
 1657 0037 35       		.uleb128 0x35
 1658 0038 00       		.byte	0
 1659 0039 49       		.uleb128 0x49
 1660 003a 13       		.uleb128 0x13
 1661 003b 00       		.byte	0
 1662 003c 00       		.byte	0
 1663 003d 06       		.uleb128 0x6
 1664 003e 2E       		.uleb128 0x2e
 1665 003f 01       		.byte	0x1
 1666 0040 3F       		.uleb128 0x3f
 1667 0041 19       		.uleb128 0x19
 1668 0042 03       		.uleb128 0x3
 1669 0043 0E       		.uleb128 0xe
 1670 0044 3A       		.uleb128 0x3a
 1671 0045 0B       		.uleb128 0xb
 1672 0046 3B       		.uleb128 0x3b
 1673 0047 0B       		.uleb128 0xb
 1674 0048 27       		.uleb128 0x27
 1675 0049 19       		.uleb128 0x19
 1676 004a 11       		.uleb128 0x11
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 46


 1677 004b 01       		.uleb128 0x1
 1678 004c 12       		.uleb128 0x12
 1679 004d 06       		.uleb128 0x6
 1680 004e 40       		.uleb128 0x40
 1681 004f 18       		.uleb128 0x18
 1682 0050 9742     		.uleb128 0x2117
 1683 0052 19       		.uleb128 0x19
 1684 0053 01       		.uleb128 0x1
 1685 0054 13       		.uleb128 0x13
 1686 0055 00       		.byte	0
 1687 0056 00       		.byte	0
 1688 0057 07       		.uleb128 0x7
 1689 0058 34       		.uleb128 0x34
 1690 0059 00       		.byte	0
 1691 005a 03       		.uleb128 0x3
 1692 005b 0E       		.uleb128 0xe
 1693 005c 3A       		.uleb128 0x3a
 1694 005d 0B       		.uleb128 0xb
 1695 005e 3B       		.uleb128 0x3b
 1696 005f 0B       		.uleb128 0xb
 1697 0060 49       		.uleb128 0x49
 1698 0061 13       		.uleb128 0x13
 1699 0062 02       		.uleb128 0x2
 1700 0063 17       		.uleb128 0x17
 1701 0064 00       		.byte	0
 1702 0065 00       		.byte	0
 1703 0066 08       		.uleb128 0x8
 1704 0067 898201   		.uleb128 0x4109
 1705 006a 01       		.byte	0x1
 1706 006b 11       		.uleb128 0x11
 1707 006c 01       		.uleb128 0x1
 1708 006d 31       		.uleb128 0x31
 1709 006e 13       		.uleb128 0x13
 1710 006f 01       		.uleb128 0x1
 1711 0070 13       		.uleb128 0x13
 1712 0071 00       		.byte	0
 1713 0072 00       		.byte	0
 1714 0073 09       		.uleb128 0x9
 1715 0074 8A8201   		.uleb128 0x410a
 1716 0077 00       		.byte	0
 1717 0078 02       		.uleb128 0x2
 1718 0079 18       		.uleb128 0x18
 1719 007a 9142     		.uleb128 0x2111
 1720 007c 18       		.uleb128 0x18
 1721 007d 00       		.byte	0
 1722 007e 00       		.byte	0
 1723 007f 0A       		.uleb128 0xa
 1724 0080 898201   		.uleb128 0x4109
 1725 0083 01       		.byte	0x1
 1726 0084 11       		.uleb128 0x11
 1727 0085 01       		.uleb128 0x1
 1728 0086 31       		.uleb128 0x31
 1729 0087 13       		.uleb128 0x13
 1730 0088 00       		.byte	0
 1731 0089 00       		.byte	0
 1732 008a 0B       		.uleb128 0xb
 1733 008b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 47


 1734 008c 01       		.byte	0x1
 1735 008d 3F       		.uleb128 0x3f
 1736 008e 19       		.uleb128 0x19
 1737 008f 03       		.uleb128 0x3
 1738 0090 0E       		.uleb128 0xe
 1739 0091 3A       		.uleb128 0x3a
 1740 0092 0B       		.uleb128 0xb
 1741 0093 3B       		.uleb128 0x3b
 1742 0094 05       		.uleb128 0x5
 1743 0095 27       		.uleb128 0x27
 1744 0096 19       		.uleb128 0x19
 1745 0097 11       		.uleb128 0x11
 1746 0098 01       		.uleb128 0x1
 1747 0099 12       		.uleb128 0x12
 1748 009a 06       		.uleb128 0x6
 1749 009b 40       		.uleb128 0x40
 1750 009c 18       		.uleb128 0x18
 1751 009d 9742     		.uleb128 0x2117
 1752 009f 19       		.uleb128 0x19
 1753 00a0 01       		.uleb128 0x1
 1754 00a1 13       		.uleb128 0x13
 1755 00a2 00       		.byte	0
 1756 00a3 00       		.byte	0
 1757 00a4 0C       		.uleb128 0xc
 1758 00a5 898201   		.uleb128 0x4109
 1759 00a8 00       		.byte	0
 1760 00a9 11       		.uleb128 0x11
 1761 00aa 01       		.uleb128 0x1
 1762 00ab 31       		.uleb128 0x31
 1763 00ac 13       		.uleb128 0x13
 1764 00ad 00       		.byte	0
 1765 00ae 00       		.byte	0
 1766 00af 0D       		.uleb128 0xd
 1767 00b0 2E       		.uleb128 0x2e
 1768 00b1 00       		.byte	0
 1769 00b2 3F       		.uleb128 0x3f
 1770 00b3 19       		.uleb128 0x19
 1771 00b4 03       		.uleb128 0x3
 1772 00b5 0E       		.uleb128 0xe
 1773 00b6 3A       		.uleb128 0x3a
 1774 00b7 0B       		.uleb128 0xb
 1775 00b8 3B       		.uleb128 0x3b
 1776 00b9 05       		.uleb128 0x5
 1777 00ba 27       		.uleb128 0x27
 1778 00bb 19       		.uleb128 0x19
 1779 00bc 11       		.uleb128 0x11
 1780 00bd 01       		.uleb128 0x1
 1781 00be 12       		.uleb128 0x12
 1782 00bf 06       		.uleb128 0x6
 1783 00c0 40       		.uleb128 0x40
 1784 00c1 18       		.uleb128 0x18
 1785 00c2 9742     		.uleb128 0x2117
 1786 00c4 19       		.uleb128 0x19
 1787 00c5 00       		.byte	0
 1788 00c6 00       		.byte	0
 1789 00c7 0E       		.uleb128 0xe
 1790 00c8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 48


 1791 00c9 01       		.byte	0x1
 1792 00ca 3F       		.uleb128 0x3f
 1793 00cb 19       		.uleb128 0x19
 1794 00cc 03       		.uleb128 0x3
 1795 00cd 0E       		.uleb128 0xe
 1796 00ce 3A       		.uleb128 0x3a
 1797 00cf 0B       		.uleb128 0xb
 1798 00d0 3B       		.uleb128 0x3b
 1799 00d1 05       		.uleb128 0x5
 1800 00d2 27       		.uleb128 0x27
 1801 00d3 19       		.uleb128 0x19
 1802 00d4 49       		.uleb128 0x49
 1803 00d5 13       		.uleb128 0x13
 1804 00d6 11       		.uleb128 0x11
 1805 00d7 01       		.uleb128 0x1
 1806 00d8 12       		.uleb128 0x12
 1807 00d9 06       		.uleb128 0x6
 1808 00da 40       		.uleb128 0x40
 1809 00db 18       		.uleb128 0x18
 1810 00dc 9742     		.uleb128 0x2117
 1811 00de 19       		.uleb128 0x19
 1812 00df 01       		.uleb128 0x1
 1813 00e0 13       		.uleb128 0x13
 1814 00e1 00       		.byte	0
 1815 00e2 00       		.byte	0
 1816 00e3 0F       		.uleb128 0xf
 1817 00e4 05       		.uleb128 0x5
 1818 00e5 00       		.byte	0
 1819 00e6 03       		.uleb128 0x3
 1820 00e7 0E       		.uleb128 0xe
 1821 00e8 3A       		.uleb128 0x3a
 1822 00e9 0B       		.uleb128 0xb
 1823 00ea 3B       		.uleb128 0x3b
 1824 00eb 05       		.uleb128 0x5
 1825 00ec 49       		.uleb128 0x49
 1826 00ed 13       		.uleb128 0x13
 1827 00ee 02       		.uleb128 0x2
 1828 00ef 17       		.uleb128 0x17
 1829 00f0 00       		.byte	0
 1830 00f1 00       		.byte	0
 1831 00f2 10       		.uleb128 0x10
 1832 00f3 34       		.uleb128 0x34
 1833 00f4 00       		.byte	0
 1834 00f5 03       		.uleb128 0x3
 1835 00f6 0E       		.uleb128 0xe
 1836 00f7 3A       		.uleb128 0x3a
 1837 00f8 0B       		.uleb128 0xb
 1838 00f9 3B       		.uleb128 0x3b
 1839 00fa 05       		.uleb128 0x5
 1840 00fb 49       		.uleb128 0x49
 1841 00fc 13       		.uleb128 0x13
 1842 00fd 02       		.uleb128 0x2
 1843 00fe 17       		.uleb128 0x17
 1844 00ff 00       		.byte	0
 1845 0100 00       		.byte	0
 1846 0101 11       		.uleb128 0x11
 1847 0102 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 49


 1848 0103 01       		.byte	0x1
 1849 0104 3F       		.uleb128 0x3f
 1850 0105 19       		.uleb128 0x19
 1851 0106 03       		.uleb128 0x3
 1852 0107 0E       		.uleb128 0xe
 1853 0108 3A       		.uleb128 0x3a
 1854 0109 0B       		.uleb128 0xb
 1855 010a 3B       		.uleb128 0x3b
 1856 010b 05       		.uleb128 0x5
 1857 010c 27       		.uleb128 0x27
 1858 010d 19       		.uleb128 0x19
 1859 010e 49       		.uleb128 0x49
 1860 010f 13       		.uleb128 0x13
 1861 0110 11       		.uleb128 0x11
 1862 0111 01       		.uleb128 0x1
 1863 0112 12       		.uleb128 0x12
 1864 0113 06       		.uleb128 0x6
 1865 0114 40       		.uleb128 0x40
 1866 0115 18       		.uleb128 0x18
 1867 0116 9642     		.uleb128 0x2116
 1868 0118 19       		.uleb128 0x19
 1869 0119 01       		.uleb128 0x1
 1870 011a 13       		.uleb128 0x13
 1871 011b 00       		.byte	0
 1872 011c 00       		.byte	0
 1873 011d 12       		.uleb128 0x12
 1874 011e 34       		.uleb128 0x34
 1875 011f 00       		.byte	0
 1876 0120 03       		.uleb128 0x3
 1877 0121 0E       		.uleb128 0xe
 1878 0122 3A       		.uleb128 0x3a
 1879 0123 0B       		.uleb128 0xb
 1880 0124 3B       		.uleb128 0x3b
 1881 0125 05       		.uleb128 0x5
 1882 0126 49       		.uleb128 0x49
 1883 0127 13       		.uleb128 0x13
 1884 0128 02       		.uleb128 0x2
 1885 0129 18       		.uleb128 0x18
 1886 012a 00       		.byte	0
 1887 012b 00       		.byte	0
 1888 012c 13       		.uleb128 0x13
 1889 012d 34       		.uleb128 0x34
 1890 012e 00       		.byte	0
 1891 012f 03       		.uleb128 0x3
 1892 0130 0E       		.uleb128 0xe
 1893 0131 3A       		.uleb128 0x3a
 1894 0132 0B       		.uleb128 0xb
 1895 0133 3B       		.uleb128 0x3b
 1896 0134 05       		.uleb128 0x5
 1897 0135 49       		.uleb128 0x49
 1898 0136 13       		.uleb128 0x13
 1899 0137 00       		.byte	0
 1900 0138 00       		.byte	0
 1901 0139 14       		.uleb128 0x14
 1902 013a 01       		.uleb128 0x1
 1903 013b 01       		.byte	0x1
 1904 013c 49       		.uleb128 0x49
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 50


 1905 013d 13       		.uleb128 0x13
 1906 013e 01       		.uleb128 0x1
 1907 013f 13       		.uleb128 0x13
 1908 0140 00       		.byte	0
 1909 0141 00       		.byte	0
 1910 0142 15       		.uleb128 0x15
 1911 0143 21       		.uleb128 0x21
 1912 0144 00       		.byte	0
 1913 0145 49       		.uleb128 0x49
 1914 0146 13       		.uleb128 0x13
 1915 0147 2F       		.uleb128 0x2f
 1916 0148 0B       		.uleb128 0xb
 1917 0149 00       		.byte	0
 1918 014a 00       		.byte	0
 1919 014b 16       		.uleb128 0x16
 1920 014c 26       		.uleb128 0x26
 1921 014d 00       		.byte	0
 1922 014e 49       		.uleb128 0x49
 1923 014f 13       		.uleb128 0x13
 1924 0150 00       		.byte	0
 1925 0151 00       		.byte	0
 1926 0152 17       		.uleb128 0x17
 1927 0153 34       		.uleb128 0x34
 1928 0154 00       		.byte	0
 1929 0155 03       		.uleb128 0x3
 1930 0156 0E       		.uleb128 0xe
 1931 0157 3A       		.uleb128 0x3a
 1932 0158 0B       		.uleb128 0xb
 1933 0159 3B       		.uleb128 0x3b
 1934 015a 0B       		.uleb128 0xb
 1935 015b 49       		.uleb128 0x49
 1936 015c 13       		.uleb128 0x13
 1937 015d 1C       		.uleb128 0x1c
 1938 015e 0A       		.uleb128 0xa
 1939 015f 00       		.byte	0
 1940 0160 00       		.byte	0
 1941 0161 18       		.uleb128 0x18
 1942 0162 34       		.uleb128 0x34
 1943 0163 00       		.byte	0
 1944 0164 03       		.uleb128 0x3
 1945 0165 0E       		.uleb128 0xe
 1946 0166 3A       		.uleb128 0x3a
 1947 0167 0B       		.uleb128 0xb
 1948 0168 3B       		.uleb128 0x3b
 1949 0169 0B       		.uleb128 0xb
 1950 016a 49       		.uleb128 0x49
 1951 016b 13       		.uleb128 0x13
 1952 016c 3F       		.uleb128 0x3f
 1953 016d 19       		.uleb128 0x19
 1954 016e 02       		.uleb128 0x2
 1955 016f 18       		.uleb128 0x18
 1956 0170 00       		.byte	0
 1957 0171 00       		.byte	0
 1958 0172 19       		.uleb128 0x19
 1959 0173 2E       		.uleb128 0x2e
 1960 0174 00       		.byte	0
 1961 0175 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 51


 1962 0176 19       		.uleb128 0x19
 1963 0177 3C       		.uleb128 0x3c
 1964 0178 19       		.uleb128 0x19
 1965 0179 6E       		.uleb128 0x6e
 1966 017a 0E       		.uleb128 0xe
 1967 017b 03       		.uleb128 0x3
 1968 017c 0E       		.uleb128 0xe
 1969 017d 3A       		.uleb128 0x3a
 1970 017e 0B       		.uleb128 0xb
 1971 017f 3B       		.uleb128 0x3b
 1972 0180 0B       		.uleb128 0xb
 1973 0181 00       		.byte	0
 1974 0182 00       		.byte	0
 1975 0183 00       		.byte	0
 1976              		.section	.debug_loc,"",%progbits
 1977              	.Ldebug_loc0:
 1978              	.LLST0:
 1979 0000 7A000000 		.4byte	.LVL6
 1980 0004 7E000000 		.4byte	.LVL7
 1981 0008 0200     		.2byte	0x2
 1982 000a 30       		.byte	0x30
 1983 000b 9F       		.byte	0x9f
 1984 000c 7E000000 		.4byte	.LVL7
 1985 0010 04010000 		.4byte	.LFE3
 1986 0014 0100     		.2byte	0x1
 1987 0016 53       		.byte	0x53
 1988 0017 00000000 		.4byte	0
 1989 001b 00000000 		.4byte	0
 1990              	.LLST1:
 1991 001f 68000000 		.4byte	.LVL2
 1992 0023 6E000000 		.4byte	.LVL3
 1993 0027 0700     		.2byte	0x7
 1994 0029 71       		.byte	0x71
 1995 002a 00       		.sleb128 0
 1996 002b 40       		.byte	0x40
 1997 002c 49       		.byte	0x49
 1998 002d 24       		.byte	0x24
 1999 002e 21       		.byte	0x21
 2000 002f 9F       		.byte	0x9f
 2001 0030 72000000 		.4byte	.LVL4
 2002 0034 78000000 		.4byte	.LVL5
 2003 0038 0100     		.2byte	0x1
 2004 003a 53       		.byte	0x53
 2005 003b 78000000 		.4byte	.LVL5
 2006 003f 7A000000 		.4byte	.LVL6
 2007 0043 0500     		.2byte	0x5
 2008 0045 0C       		.byte	0xc
 2009 0046 30003A40 		.4byte	0x403a0030
 2010 004a 7E000000 		.4byte	.LVL7
 2011 004e 9C000000 		.4byte	.LVL9
 2012 0052 0400     		.2byte	0x4
 2013 0054 0A       		.byte	0xa
 2014 0055 0002     		.2byte	0x200
 2015 0057 9F       		.byte	0x9f
 2016 0058 00000000 		.4byte	0
 2017 005c 00000000 		.4byte	0
 2018              	.LLST2:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 52


 2019 0060 8A000000 		.4byte	.LVL8
 2020 0064 9C000000 		.4byte	.LVL9
 2021 0068 0400     		.2byte	0x4
 2022 006a 0A       		.byte	0xa
 2023 006b 0001     		.2byte	0x100
 2024 006d 9F       		.byte	0x9f
 2025 006e 00000000 		.4byte	0
 2026 0072 00000000 		.4byte	0
 2027              	.LLST3:
 2028 0076 00000000 		.4byte	.LVL13
 2029 007a 06000000 		.4byte	.LVL15
 2030 007e 0100     		.2byte	0x1
 2031 0080 50       		.byte	0x50
 2032 0081 06000000 		.4byte	.LVL15
 2033 0085 1A000000 		.4byte	.LVL17
 2034 0089 0100     		.2byte	0x1
 2035 008b 52       		.byte	0x52
 2036 008c 1A000000 		.4byte	.LVL17
 2037 0090 20000000 		.4byte	.LVL18
 2038 0094 0400     		.2byte	0x4
 2039 0096 F3       		.byte	0xf3
 2040 0097 01       		.uleb128 0x1
 2041 0098 50       		.byte	0x50
 2042 0099 9F       		.byte	0x9f
 2043 009a 20000000 		.4byte	.LVL18
 2044 009e 22000000 		.4byte	.LVL19
 2045 00a2 0100     		.2byte	0x1
 2046 00a4 50       		.byte	0x50
 2047 00a5 22000000 		.4byte	.LVL19
 2048 00a9 28000000 		.4byte	.LFE8
 2049 00ad 0400     		.2byte	0x4
 2050 00af F3       		.byte	0xf3
 2051 00b0 01       		.uleb128 0x1
 2052 00b1 50       		.byte	0x50
 2053 00b2 9F       		.byte	0x9f
 2054 00b3 00000000 		.4byte	0
 2055 00b7 00000000 		.4byte	0
 2056              	.LLST4:
 2057 00bb 02000000 		.4byte	.LVL14
 2058 00bf 06000000 		.4byte	.LVL15
 2059 00c3 0200     		.2byte	0x2
 2060 00c5 30       		.byte	0x30
 2061 00c6 9F       		.byte	0x9f
 2062 00c7 0E000000 		.4byte	.LVL16
 2063 00cb 20000000 		.4byte	.LVL18
 2064 00cf 0100     		.2byte	0x1
 2065 00d1 50       		.byte	0x50
 2066 00d2 20000000 		.4byte	.LVL18
 2067 00d6 22000000 		.4byte	.LVL19
 2068 00da 0200     		.2byte	0x2
 2069 00dc 30       		.byte	0x30
 2070 00dd 9F       		.byte	0x9f
 2071 00de 22000000 		.4byte	.LVL19
 2072 00e2 28000000 		.4byte	.LFE8
 2073 00e6 0100     		.2byte	0x1
 2074 00e8 50       		.byte	0x50
 2075 00e9 00000000 		.4byte	0
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 53


 2076 00ed 00000000 		.4byte	0
 2077              	.LLST5:
 2078 00f1 00000000 		.4byte	.LVL20
 2079 00f5 08000000 		.4byte	.LVL21
 2080 00f9 0100     		.2byte	0x1
 2081 00fb 50       		.byte	0x50
 2082 00fc 08000000 		.4byte	.LVL21
 2083 0100 12000000 		.4byte	.LVL23
 2084 0104 0100     		.2byte	0x1
 2085 0106 54       		.byte	0x54
 2086 0107 12000000 		.4byte	.LVL23
 2087 010b 20000000 		.4byte	.LVL25
 2088 010f 0400     		.2byte	0x4
 2089 0111 F3       		.byte	0xf3
 2090 0112 01       		.uleb128 0x1
 2091 0113 50       		.byte	0x50
 2092 0114 9F       		.byte	0x9f
 2093 0115 20000000 		.4byte	.LVL25
 2094 0119 22000000 		.4byte	.LVL26
 2095 011d 0100     		.2byte	0x1
 2096 011f 54       		.byte	0x54
 2097 0120 22000000 		.4byte	.LVL26
 2098 0124 2C000000 		.4byte	.LFE9
 2099 0128 0400     		.2byte	0x4
 2100 012a F3       		.byte	0xf3
 2101 012b 01       		.uleb128 0x1
 2102 012c 50       		.byte	0x50
 2103 012d 9F       		.byte	0x9f
 2104 012e 00000000 		.4byte	0
 2105 0132 00000000 		.4byte	0
 2106              	.LLST6:
 2107 0136 1E000000 		.4byte	.LVL24
 2108 013a 20000000 		.4byte	.LVL25
 2109 013e 0100     		.2byte	0x1
 2110 0140 50       		.byte	0x50
 2111 0141 22000000 		.4byte	.LVL26
 2112 0145 24000000 		.4byte	.LVL27
 2113 0149 0100     		.2byte	0x1
 2114 014b 50       		.byte	0x50
 2115 014c 00000000 		.4byte	0
 2116 0150 00000000 		.4byte	0
 2117              	.LLST7:
 2118 0154 00000000 		.4byte	.LVL28
 2119 0158 04000000 		.4byte	.LVL29
 2120 015c 0100     		.2byte	0x1
 2121 015e 50       		.byte	0x50
 2122 015f 04000000 		.4byte	.LVL29
 2123 0163 10000000 		.4byte	.LFE10
 2124 0167 0400     		.2byte	0x4
 2125 0169 F3       		.byte	0xf3
 2126 016a 01       		.uleb128 0x1
 2127 016b 50       		.byte	0x50
 2128 016c 9F       		.byte	0x9f
 2129 016d 00000000 		.4byte	0
 2130 0171 00000000 		.4byte	0
 2131              	.LLST8:
 2132 0175 00000000 		.4byte	.LVL30
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 54


 2133 0179 0E000000 		.4byte	.LVL31
 2134 017d 0100     		.2byte	0x1
 2135 017f 50       		.byte	0x50
 2136 0180 0E000000 		.4byte	.LVL31
 2137 0184 1C000000 		.4byte	.LFE11
 2138 0188 0400     		.2byte	0x4
 2139 018a F3       		.byte	0xf3
 2140 018b 01       		.uleb128 0x1
 2141 018c 50       		.byte	0x50
 2142 018d 9F       		.byte	0x9f
 2143 018e 00000000 		.4byte	0
 2144 0192 00000000 		.4byte	0
 2145              	.LLST9:
 2146 0196 00000000 		.4byte	.LVL32
 2147 019a 0E000000 		.4byte	.LVL33
 2148 019e 0100     		.2byte	0x1
 2149 01a0 50       		.byte	0x50
 2150 01a1 0E000000 		.4byte	.LVL33
 2151 01a5 18000000 		.4byte	.LFE12
 2152 01a9 0400     		.2byte	0x4
 2153 01ab F3       		.byte	0xf3
 2154 01ac 01       		.uleb128 0x1
 2155 01ad 50       		.byte	0x50
 2156 01ae 9F       		.byte	0x9f
 2157 01af 00000000 		.4byte	0
 2158 01b3 00000000 		.4byte	0
 2159              	.LLST10:
 2160 01b7 00000000 		.4byte	.LVL34
 2161 01bb 04000000 		.4byte	.LVL35
 2162 01bf 0100     		.2byte	0x1
 2163 01c1 50       		.byte	0x50
 2164 01c2 04000000 		.4byte	.LVL35
 2165 01c6 10000000 		.4byte	.LFE13
 2166 01ca 0400     		.2byte	0x4
 2167 01cc F3       		.byte	0xf3
 2168 01cd 01       		.uleb128 0x1
 2169 01ce 50       		.byte	0x50
 2170 01cf 9F       		.byte	0x9f
 2171 01d0 00000000 		.4byte	0
 2172 01d4 00000000 		.4byte	0
 2173              	.LLST11:
 2174 01d8 00000000 		.4byte	.LVL36
 2175 01dc 04000000 		.4byte	.LVL37
 2176 01e0 0100     		.2byte	0x1
 2177 01e2 50       		.byte	0x50
 2178 01e3 04000000 		.4byte	.LVL37
 2179 01e7 10000000 		.4byte	.LFE14
 2180 01eb 0400     		.2byte	0x4
 2181 01ed F3       		.byte	0xf3
 2182 01ee 01       		.uleb128 0x1
 2183 01ef 50       		.byte	0x50
 2184 01f0 9F       		.byte	0x9f
 2185 01f1 00000000 		.4byte	0
 2186 01f5 00000000 		.4byte	0
 2187              	.LLST12:
 2188 01f9 00000000 		.4byte	.LVL38
 2189 01fd 0C000000 		.4byte	.LVL39
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 55


 2190 0201 0100     		.2byte	0x1
 2191 0203 50       		.byte	0x50
 2192 0204 0C000000 		.4byte	.LVL39
 2193 0208 12000000 		.4byte	.LVL41
 2194 020c 0100     		.2byte	0x1
 2195 020e 54       		.byte	0x54
 2196 020f 12000000 		.4byte	.LVL41
 2197 0213 1C000000 		.4byte	.LFE15
 2198 0217 0400     		.2byte	0x4
 2199 0219 F3       		.byte	0xf3
 2200 021a 01       		.uleb128 0x1
 2201 021b 50       		.byte	0x50
 2202 021c 9F       		.byte	0x9f
 2203 021d 00000000 		.4byte	0
 2204 0221 00000000 		.4byte	0
 2205              	.LLST13:
 2206 0225 00000000 		.4byte	.LVL38
 2207 0229 0F000000 		.4byte	.LVL40-1
 2208 022d 0100     		.2byte	0x1
 2209 022f 51       		.byte	0x51
 2210 0230 0F000000 		.4byte	.LVL40-1
 2211 0234 1C000000 		.4byte	.LFE15
 2212 0238 0400     		.2byte	0x4
 2213 023a F3       		.byte	0xf3
 2214 023b 01       		.uleb128 0x1
 2215 023c 51       		.byte	0x51
 2216 023d 9F       		.byte	0x9f
 2217 023e 00000000 		.4byte	0
 2218 0242 00000000 		.4byte	0
 2219              	.LLST14:
 2220 0246 00000000 		.4byte	.LVL42
 2221 024a 0C000000 		.4byte	.LVL43
 2222 024e 0100     		.2byte	0x1
 2223 0250 50       		.byte	0x50
 2224 0251 0C000000 		.4byte	.LVL43
 2225 0255 12000000 		.4byte	.LVL45
 2226 0259 0100     		.2byte	0x1
 2227 025b 54       		.byte	0x54
 2228 025c 12000000 		.4byte	.LVL45
 2229 0260 1C000000 		.4byte	.LFE16
 2230 0264 0400     		.2byte	0x4
 2231 0266 F3       		.byte	0xf3
 2232 0267 01       		.uleb128 0x1
 2233 0268 50       		.byte	0x50
 2234 0269 9F       		.byte	0x9f
 2235 026a 00000000 		.4byte	0
 2236 026e 00000000 		.4byte	0
 2237              	.LLST15:
 2238 0272 00000000 		.4byte	.LVL42
 2239 0276 0F000000 		.4byte	.LVL44-1
 2240 027a 0100     		.2byte	0x1
 2241 027c 51       		.byte	0x51
 2242 027d 0F000000 		.4byte	.LVL44-1
 2243 0281 16000000 		.4byte	.LVL46
 2244 0285 0100     		.2byte	0x1
 2245 0287 55       		.byte	0x55
 2246 0288 16000000 		.4byte	.LVL46
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 56


 2247 028c 1C000000 		.4byte	.LFE16
 2248 0290 0800     		.2byte	0x8
 2249 0292 F3       		.byte	0xf3
 2250 0293 01       		.uleb128 0x1
 2251 0294 50       		.byte	0x50
 2252 0295 32       		.byte	0x32
 2253 0296 24       		.byte	0x24
 2254 0297 73       		.byte	0x73
 2255 0298 00       		.sleb128 0
 2256 0299 22       		.byte	0x22
 2257 029a 00000000 		.4byte	0
 2258 029e 00000000 		.4byte	0
 2259              	.LLST16:
 2260 02a2 00000000 		.4byte	.LVL47
 2261 02a6 0C000000 		.4byte	.LVL48
 2262 02aa 0100     		.2byte	0x1
 2263 02ac 50       		.byte	0x50
 2264 02ad 0C000000 		.4byte	.LVL48
 2265 02b1 44000000 		.4byte	.LVL51
 2266 02b5 0100     		.2byte	0x1
 2267 02b7 54       		.byte	0x54
 2268 02b8 44000000 		.4byte	.LVL51
 2269 02bc 5C000000 		.4byte	.LFE17
 2270 02c0 0400     		.2byte	0x4
 2271 02c2 F3       		.byte	0xf3
 2272 02c3 01       		.uleb128 0x1
 2273 02c4 50       		.byte	0x50
 2274 02c5 9F       		.byte	0x9f
 2275 02c6 00000000 		.4byte	0
 2276 02ca 00000000 		.4byte	0
 2277              	.LLST17:
 2278 02ce 00000000 		.4byte	.LVL47
 2279 02d2 0F000000 		.4byte	.LVL49-1
 2280 02d6 0100     		.2byte	0x1
 2281 02d8 51       		.byte	0x51
 2282 02d9 0F000000 		.4byte	.LVL49-1
 2283 02dd 10000000 		.4byte	.LVL49
 2284 02e1 0400     		.2byte	0x4
 2285 02e3 F3       		.byte	0xf3
 2286 02e4 01       		.uleb128 0x1
 2287 02e5 51       		.byte	0x51
 2288 02e6 9F       		.byte	0x9f
 2289 02e7 10000000 		.4byte	.LVL49
 2290 02eb 1C000000 		.4byte	.LVL50
 2291 02ef 0100     		.2byte	0x1
 2292 02f1 55       		.byte	0x55
 2293 02f2 1C000000 		.4byte	.LVL50
 2294 02f6 48000000 		.4byte	.LVL52
 2295 02fa 0100     		.2byte	0x1
 2296 02fc 51       		.byte	0x51
 2297 02fd 00000000 		.4byte	0
 2298 0301 00000000 		.4byte	0
 2299              	.LLST18:
 2300 0305 00000000 		.4byte	.LVL55
 2301 0309 0C000000 		.4byte	.LVL56
 2302 030d 0100     		.2byte	0x1
 2303 030f 50       		.byte	0x50
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 57


 2304 0310 0C000000 		.4byte	.LVL56
 2305 0314 28000000 		.4byte	.LVL60
 2306 0318 0100     		.2byte	0x1
 2307 031a 55       		.byte	0x55
 2308 031b 28000000 		.4byte	.LVL60
 2309 031f 40000000 		.4byte	.LFE18
 2310 0323 0400     		.2byte	0x4
 2311 0325 F3       		.byte	0xf3
 2312 0326 01       		.uleb128 0x1
 2313 0327 50       		.byte	0x50
 2314 0328 9F       		.byte	0x9f
 2315 0329 00000000 		.4byte	0
 2316 032d 00000000 		.4byte	0
 2317              	.LLST19:
 2318 0331 00000000 		.4byte	.LVL55
 2319 0335 0F000000 		.4byte	.LVL57-1
 2320 0339 0100     		.2byte	0x1
 2321 033b 51       		.byte	0x51
 2322 033c 0F000000 		.4byte	.LVL57-1
 2323 0340 10000000 		.4byte	.LVL57
 2324 0344 0400     		.2byte	0x4
 2325 0346 F3       		.byte	0xf3
 2326 0347 01       		.uleb128 0x1
 2327 0348 51       		.byte	0x51
 2328 0349 9F       		.byte	0x9f
 2329 034a 10000000 		.4byte	.LVL57
 2330 034e 1C000000 		.4byte	.LVL58
 2331 0352 0100     		.2byte	0x1
 2332 0354 54       		.byte	0x54
 2333 0355 1C000000 		.4byte	.LVL58
 2334 0359 25000000 		.4byte	.LVL59-1
 2335 035d 0100     		.2byte	0x1
 2336 035f 50       		.byte	0x50
 2337 0360 00000000 		.4byte	0
 2338 0364 00000000 		.4byte	0
 2339              	.LLST20:
 2340 0368 00000000 		.4byte	.LVL62
 2341 036c 0C000000 		.4byte	.LVL63
 2342 0370 0100     		.2byte	0x1
 2343 0372 50       		.byte	0x50
 2344 0373 0C000000 		.4byte	.LVL63
 2345 0377 2A000000 		.4byte	.LVL68
 2346 037b 0100     		.2byte	0x1
 2347 037d 54       		.byte	0x54
 2348 037e 2A000000 		.4byte	.LVL68
 2349 0382 48000000 		.4byte	.LFE19
 2350 0386 0400     		.2byte	0x4
 2351 0388 F3       		.byte	0xf3
 2352 0389 01       		.uleb128 0x1
 2353 038a 50       		.byte	0x50
 2354 038b 9F       		.byte	0x9f
 2355 038c 00000000 		.4byte	0
 2356 0390 00000000 		.4byte	0
 2357              	.LLST21:
 2358 0394 00000000 		.4byte	.LVL62
 2359 0398 0F000000 		.4byte	.LVL64-1
 2360 039c 0100     		.2byte	0x1
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 58


 2361 039e 51       		.byte	0x51
 2362 039f 0F000000 		.4byte	.LVL64-1
 2363 03a3 10000000 		.4byte	.LVL64
 2364 03a7 0400     		.2byte	0x4
 2365 03a9 F3       		.byte	0xf3
 2366 03aa 01       		.uleb128 0x1
 2367 03ab 51       		.byte	0x51
 2368 03ac 9F       		.byte	0x9f
 2369 03ad 10000000 		.4byte	.LVL64
 2370 03b1 1C000000 		.4byte	.LVL65
 2371 03b5 0100     		.2byte	0x1
 2372 03b7 55       		.byte	0x55
 2373 03b8 1C000000 		.4byte	.LVL65
 2374 03bc 1F000000 		.4byte	.LVL66-1
 2375 03c0 0100     		.2byte	0x1
 2376 03c2 50       		.byte	0x50
 2377 03c3 00000000 		.4byte	0
 2378 03c7 00000000 		.4byte	0
 2379              		.section	.debug_aranges,"",%progbits
 2380 0000 A4000000 		.4byte	0xa4
 2381 0004 0200     		.2byte	0x2
 2382 0006 00000000 		.4byte	.Ldebug_info0
 2383 000a 04       		.byte	0x4
 2384 000b 00       		.byte	0
 2385 000c 0000     		.2byte	0
 2386 000e 0000     		.2byte	0
 2387 0010 00000000 		.4byte	.LFB3
 2388 0014 04010000 		.4byte	.LFE3-.LFB3
 2389 0018 00000000 		.4byte	.LFB4
 2390 001c 30000000 		.4byte	.LFE4-.LFB4
 2391 0020 00000000 		.4byte	.LFB2
 2392 0024 20000000 		.4byte	.LFE2-.LFB2
 2393 0028 00000000 		.4byte	.LFB5
 2394 002c 10000000 		.4byte	.LFE5-.LFB5
 2395 0030 00000000 		.4byte	.LFB6
 2396 0034 14000000 		.4byte	.LFE6-.LFB6
 2397 0038 00000000 		.4byte	.LFB7
 2398 003c 14000000 		.4byte	.LFE7-.LFB7
 2399 0040 00000000 		.4byte	.LFB8
 2400 0044 28000000 		.4byte	.LFE8-.LFB8
 2401 0048 00000000 		.4byte	.LFB9
 2402 004c 2C000000 		.4byte	.LFE9-.LFB9
 2403 0050 00000000 		.4byte	.LFB10
 2404 0054 10000000 		.4byte	.LFE10-.LFB10
 2405 0058 00000000 		.4byte	.LFB11
 2406 005c 1C000000 		.4byte	.LFE11-.LFB11
 2407 0060 00000000 		.4byte	.LFB12
 2408 0064 18000000 		.4byte	.LFE12-.LFB12
 2409 0068 00000000 		.4byte	.LFB13
 2410 006c 10000000 		.4byte	.LFE13-.LFB13
 2411 0070 00000000 		.4byte	.LFB14
 2412 0074 10000000 		.4byte	.LFE14-.LFB14
 2413 0078 00000000 		.4byte	.LFB15
 2414 007c 1C000000 		.4byte	.LFE15-.LFB15
 2415 0080 00000000 		.4byte	.LFB16
 2416 0084 1C000000 		.4byte	.LFE16-.LFB16
 2417 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 59


 2418 008c 5C000000 		.4byte	.LFE17-.LFB17
 2419 0090 00000000 		.4byte	.LFB18
 2420 0094 40000000 		.4byte	.LFE18-.LFB18
 2421 0098 00000000 		.4byte	.LFB19
 2422 009c 48000000 		.4byte	.LFE19-.LFB19
 2423 00a0 00000000 		.4byte	0
 2424 00a4 00000000 		.4byte	0
 2425              		.section	.debug_ranges,"",%progbits
 2426              	.Ldebug_ranges0:
 2427 0000 00000000 		.4byte	.LFB3
 2428 0004 04010000 		.4byte	.LFE3
 2429 0008 00000000 		.4byte	.LFB4
 2430 000c 30000000 		.4byte	.LFE4
 2431 0010 00000000 		.4byte	.LFB2
 2432 0014 20000000 		.4byte	.LFE2
 2433 0018 00000000 		.4byte	.LFB5
 2434 001c 10000000 		.4byte	.LFE5
 2435 0020 00000000 		.4byte	.LFB6
 2436 0024 14000000 		.4byte	.LFE6
 2437 0028 00000000 		.4byte	.LFB7
 2438 002c 14000000 		.4byte	.LFE7
 2439 0030 00000000 		.4byte	.LFB8
 2440 0034 28000000 		.4byte	.LFE8
 2441 0038 00000000 		.4byte	.LFB9
 2442 003c 2C000000 		.4byte	.LFE9
 2443 0040 00000000 		.4byte	.LFB10
 2444 0044 10000000 		.4byte	.LFE10
 2445 0048 00000000 		.4byte	.LFB11
 2446 004c 1C000000 		.4byte	.LFE11
 2447 0050 00000000 		.4byte	.LFB12
 2448 0054 18000000 		.4byte	.LFE12
 2449 0058 00000000 		.4byte	.LFB13
 2450 005c 10000000 		.4byte	.LFE13
 2451 0060 00000000 		.4byte	.LFB14
 2452 0064 10000000 		.4byte	.LFE14
 2453 0068 00000000 		.4byte	.LFB15
 2454 006c 1C000000 		.4byte	.LFE15
 2455 0070 00000000 		.4byte	.LFB16
 2456 0074 1C000000 		.4byte	.LFE16
 2457 0078 00000000 		.4byte	.LFB17
 2458 007c 5C000000 		.4byte	.LFE17
 2459 0080 00000000 		.4byte	.LFB18
 2460 0084 40000000 		.4byte	.LFE18
 2461 0088 00000000 		.4byte	.LFB19
 2462 008c 48000000 		.4byte	.LFE19
 2463 0090 00000000 		.4byte	0
 2464 0094 00000000 		.4byte	0
 2465              		.section	.debug_line,"",%progbits
 2466              	.Ldebug_line0:
 2467 0000 71020000 		.section	.debug_str,"MS",%progbits,1
 2467      02004B00 
 2467      00000201 
 2467      FB0E0D00 
 2467      01010101 
 2468              	.LASF10:
 2469 0000 75696E74 		.ascii	"uint16\000"
 2469      313600
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 60


 2470              	.LASF48:
 2471 0007 61646347 		.ascii	"adcGain\000"
 2471      61696E00 
 2472              	.LASF24:
 2473 000f 636F756E 		.ascii	"counts\000"
 2473      747300
 2474              	.LASF53:
 2475 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2475      436F756E 
 2475      7473546F 
 2475      5F566F6C 
 2475      747300
 2476              	.LASF25:
 2477 0029 4144435F 		.ascii	"ADC_Init\000"
 2477      496E6974 
 2477      00
 2478              	.LASF63:
 2479 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2479      43313120 
 2479      352E342E 
 2479      31203230 
 2479      31363036 
 2480 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2480      20726576 
 2480      6973696F 
 2480      6E203233 
 2480      37373135 
 2481 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2481      66756E63 
 2481      74696F6E 
 2481      2D736563 
 2481      74696F6E 
 2482              	.LASF7:
 2483 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2483      206C6F6E 
 2483      6720756E 
 2483      7369676E 
 2483      65642069 
 2484              	.LASF29:
 2485 00d7 4144435F 		.ascii	"ADC_StartConvert\000"
 2485      53746172 
 2485      74436F6E 
 2485      76657274 
 2485      00
 2486              	.LASF6:
 2487 00e8 6C6F6E67 		.ascii	"long long int\000"
 2487      206C6F6E 
 2487      6720696E 
 2487      7400
 2488              	.LASF0:
 2489 00f6 7369676E 		.ascii	"signed char\000"
 2489      65642063 
 2489      68617200 
 2490              	.LASF31:
 2491 0102 73746174 		.ascii	"status\000"
 2491      757300
 2492              	.LASF13:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 61


 2493 0109 696E7433 		.ascii	"int32\000"
 2493      3200
 2494              	.LASF27:
 2495 010f 4144435F 		.ascii	"ADC_Start\000"
 2495      53746172 
 2495      7400
 2496              	.LASF4:
 2497 0119 6C6F6E67 		.ascii	"long int\000"
 2497      20696E74 
 2497      00
 2498              	.LASF52:
 2499 0122 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2499      436F756E 
 2499      7473546F 
 2499      5F75566F 
 2499      6C747300 
 2500              	.LASF58:
 2501 0136 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2501      636F756E 
 2501      74735065 
 2501      72313056 
 2501      6F6C7400 
 2502              	.LASF9:
 2503 014a 75696E74 		.ascii	"uint8\000"
 2503      3800
 2504              	.LASF61:
 2505 0150 43794465 		.ascii	"CyDelayUs\000"
 2505      6C617955 
 2505      7300
 2506              	.LASF16:
 2507 015a 646F7562 		.ascii	"double\000"
 2507      6C6500
 2508              	.LASF11:
 2509 0161 75696E74 		.ascii	"uint32\000"
 2509      333200
 2510              	.LASF38:
 2511 0168 6D61736B 		.ascii	"mask\000"
 2511      00
 2512              	.LASF56:
 2513 016d 4144435F 		.ascii	"ADC_initVar\000"
 2513      696E6974 
 2513      56617200 
 2514              	.LASF34:
 2515 0179 7265744D 		.ascii	"retMode\000"
 2515      6F646500 
 2516              	.LASF43:
 2517 0181 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2517      5365744C 
 2517      696D6974 
 2517      4D61736B 
 2517      00
 2518              	.LASF8:
 2519 0192 756E7369 		.ascii	"unsigned int\000"
 2519      676E6564 
 2519      20696E74 
 2519      00
 2520              	.LASF66:
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 62


 2521 019f 75566F6C 		.ascii	"uVolts\000"
 2521      747300
 2522              	.LASF5:
 2523 01a6 6C6F6E67 		.ascii	"long unsigned int\000"
 2523      20756E73 
 2523      69676E65 
 2523      6420696E 
 2523      7400
 2524              	.LASF44:
 2525 01b8 4144435F 		.ascii	"ADC_SetSatMask\000"
 2525      53657453 
 2525      61744D61 
 2525      736B00
 2526              	.LASF54:
 2527 01c7 766F6C74 		.ascii	"volts\000"
 2527      7300
 2528              	.LASF23:
 2529 01cd 746D7052 		.ascii	"tmpRegVal\000"
 2529      65675661 
 2529      6C00
 2530              	.LASF3:
 2531 01d7 73686F72 		.ascii	"short unsigned int\000"
 2531      7420756E 
 2531      7369676E 
 2531      65642069 
 2531      6E7400
 2532              	.LASF60:
 2533 01ea 4379496E 		.ascii	"CyIntSetVector\000"
 2533      74536574 
 2533      56656374 
 2533      6F7200
 2534              	.LASF30:
 2535 01f9 4144435F 		.ascii	"ADC_StopConvert\000"
 2535      53746F70 
 2535      436F6E76 
 2535      65727400 
 2536              	.LASF51:
 2537 0209 6D566F6C 		.ascii	"mVolts\000"
 2537      747300
 2538              	.LASF19:
 2539 0210 72656733 		.ascii	"reg32\000"
 2539      3200
 2540              	.LASF14:
 2541 0216 666C6F61 		.ascii	"float32\000"
 2541      74333200 
 2542              	.LASF21:
 2543 021e 73697A65 		.ascii	"sizetype\000"
 2543      74797065 
 2543      00
 2544              	.LASF40:
 2545 0227 6C6F774C 		.ascii	"lowLimit\000"
 2545      696D6974 
 2545      00
 2546              	.LASF20:
 2547 0230 6C6F6E67 		.ascii	"long double\000"
 2547      20646F75 
 2547      626C6500 
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 63


 2548              	.LASF41:
 2549 023c 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2549      53657448 
 2549      6967684C 
 2549      696D6974 
 2549      00
 2550              	.LASF32:
 2551 024d 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2551      4973456E 
 2551      64436F6E 
 2551      76657273 
 2551      696F6E00 
 2552              	.LASF17:
 2553 0261 696E7436 		.ascii	"int64\000"
 2553      3400
 2554              	.LASF59:
 2555 0267 4379496E 		.ascii	"CyIntSetPriority\000"
 2555      74536574 
 2555      5072696F 
 2555      72697479 
 2555      00
 2556              	.LASF37:
 2557 0278 4144435F 		.ascii	"ADC_SetChanMask\000"
 2557      53657443 
 2557      68616E4D 
 2557      61736B00 
 2558              	.LASF64:
 2559 0288 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2559      72617465 
 2559      645F536F 
 2559      75726365 
 2559      5C50536F 
 2560              	.LASF47:
 2561 02a5 4144435F 		.ascii	"ADC_SetGain\000"
 2561      53657447 
 2561      61696E00 
 2562              	.LASF15:
 2563 02b1 666C6F61 		.ascii	"float\000"
 2563      7400
 2564              	.LASF42:
 2565 02b7 68696768 		.ascii	"highLimit\000"
 2565      4C696D69 
 2565      7400
 2566              	.LASF49:
 2567 02c1 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2567      436F756E 
 2567      7473546F 
 2567      5F6D566F 
 2567      6C747300 
 2568              	.LASF39:
 2569 02d5 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2569      5365744C 
 2569      6F774C69 
 2569      6D697400 
 2570              	.LASF62:
 2571 02e5 43794861 		.ascii	"CyHalt\000"
 2571      6C7400
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 64


 2572              	.LASF1:
 2573 02ec 756E7369 		.ascii	"unsigned char\000"
 2573      676E6564 
 2573      20636861 
 2573      7200
 2574              	.LASF57:
 2575 02fa 4144435F 		.ascii	"ADC_offset\000"
 2575      6F666673 
 2575      657400
 2576              	.LASF2:
 2577 0305 73686F72 		.ascii	"short int\000"
 2577      7420696E 
 2577      7400
 2578              	.LASF28:
 2579 030f 4144435F 		.ascii	"ADC_Stop\000"
 2579      53746F70 
 2579      00
 2580              	.LASF22:
 2581 0318 63684E75 		.ascii	"chNum\000"
 2581      6D00
 2582              	.LASF35:
 2583 031e 6368616E 		.ascii	"chan\000"
 2583      00
 2584              	.LASF18:
 2585 0323 63686172 		.ascii	"char\000"
 2585      00
 2586              	.LASF55:
 2587 0328 4144435F 		.ascii	"ADC_channelsConfig\000"
 2587      6368616E 
 2587      6E656C73 
 2587      436F6E66 
 2587      696700
 2588              	.LASF46:
 2589 033b 6F666673 		.ascii	"offset\000"
 2589      657400
 2590              	.LASF50:
 2591 0342 61646343 		.ascii	"adcCounts\000"
 2591      6F756E74 
 2591      7300
 2592              	.LASF65:
 2593 034c 433A5C55 		.ascii	"C:\\Users\\Elias g\\FDRM-kl25z\\Timer_Example\\Desi"
 2593      73657273 
 2593      5C456C69 
 2593      61732067 
 2593      5C464452 
 2594 037a 676E3031 		.ascii	"gn01.cydsn\000"
 2594      2E637964 
 2594      736E00
 2595              	.LASF26:
 2596 0385 4144435F 		.ascii	"ADC_Enable\000"
 2596      456E6162 
 2596      6C6500
 2597              	.LASF12:
 2598 0390 696E7431 		.ascii	"int16\000"
 2598      3600
 2599              	.LASF45:
 2600 0396 4144435F 		.ascii	"ADC_SetOffset\000"
ARM GAS  C:\Users\ELIASG~1\AppData\Local\Temp\cc85upTI.s 			page 65


 2600      5365744F 
 2600      66667365 
 2600      7400
 2601              	.LASF36:
 2602 03a4 72657375 		.ascii	"result\000"
 2602      6C7400
 2603              	.LASF33:
 2604 03ab 4144435F 		.ascii	"ADC_GetResult16\000"
 2604      47657452 
 2604      6573756C 
 2604      74313600 
 2605              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
